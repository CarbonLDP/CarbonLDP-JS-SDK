{"version":3,"sources":["Fragment/TransientFragment.ts"],"names":[],"mappings":";;AAEA,wCAAgD;AAsBnC,QAAA,iBAAiB,GAA4B;IACzD,WAAW,EAAX,UAAa,MAAa;QACzB,OAAO,4BAAiB,CAAC,WAAW,CAAE,MAAM,CAAE,CAC5C;IACH,CAAC;IAED,EAAE,EAAF,UAAI,KAAS;QACZ,OAAO,4BAAiB,CAAC,EAAE,CAAE,KAAK,CAAE,CAClC;IACH,CAAC;IAED,MAAM,EAAN,UAA0B,IAAqB;QAC9C,IAAM,IAAI,GAAoB,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QACxD,OAAO,yBAAiB,CAAC,UAAU,CAAK,IAAI,CAAE,CAAC;IAChD,CAAC;IAED,UAAU,EAAV,UAA8B,MAAuB;QACpD,OAAO,yBAAiB,CAAC,QAAQ,CAAK,MAAM,CAAE,CAAC;IAChD,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ;QACnC,IAAI,yBAAiB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAE5D,4BAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAErC,OAAO,MAA+B,CAAC;IACxC,CAAC;CACD,CAAC","file":"TransientFragment.js","sourcesContent":["import { Pointer } from \"../Pointer\";\nimport { Registry } from \"../Registry\";\nimport { TransientResource } from \"../Resource\";\nimport { BaseFragment } from \"./BaseFragment\";\n\n\nexport interface TransientFragment extends TransientResource {\n\t_registry:Registry<TransientFragment> & Pointer | undefined;\n}\n\n\nexport interface TransientFragmentFactory {\n\tisDecorated( object:object ):object is TransientFragment;\n\n\tis( value:any ):value is TransientFragment;\n\n\n\tcreate<T extends object>( data:T & BaseFragment ):T & TransientFragment;\n\n\tcreateFrom<T extends object>( object:T & BaseFragment ):T & TransientFragment;\n\n\tdecorate<T extends object>( object:T ):T & TransientFragment;\n}\n\nexport const TransientFragment:TransientFragmentFactory = {\n\tisDecorated( object:object ):object is TransientFragment {\n\t\treturn TransientResource.isDecorated( object )\n\t\t\t;\n\t},\n\n\tis( value:any ):value is TransientFragment {\n\t\treturn TransientResource.is( value )\n\t\t\t;\n\t},\n\n\tcreate<T extends object>( data:T & BaseFragment ):T & TransientFragment {\n\t\tconst copy:T & BaseFragment = Object.assign( {}, data );\n\t\treturn TransientFragment.createFrom<T>( copy );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseFragment ):T & TransientFragment {\n\t\treturn TransientFragment.decorate<T>( object );\n\t},\n\n\tdecorate<T extends object>( object:T ):T & TransientFragment {\n\t\tif( TransientFragment.isDecorated( object ) ) return object;\n\n\t\tTransientResource.decorate( object );\n\n\t\treturn object as T & TransientFragment;\n\t},\n};\n"]}