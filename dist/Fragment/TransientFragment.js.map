{"version":3,"sources":["Fragment/TransientFragment.ts"],"names":[],"mappings":";;AAEA,uEAAsE;AAEtE,0DAAyD;AAKzD,kCAAiC;AAEjC,iDAAgD;AAwBnC,QAAA,iBAAiB,GAA4B;IACzD,SAAS,EAAE;QACV,IAAI,SAAS;YACZ,MAAM,IAAI,2CAAoB,CAAE,qCAAmC,CAAE,CAAC;QACvE,CAAC;QAGD,IAAI,KAAK;YACR,MAAM,CAAC,SAAG,CAAC,eAAe,EAAE,CAAC;QAC9B,CAAC;QAED,IAAI,GAAG;YACN,EAAE,CAAA,CAAE,SAAG,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,CAAG,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9C,CAAC;QACD,IAAI,GAAG,CAA0B,KAAY;YAC5C,EAAE,CAAA,CAAE,SAAG,CAAC,SAAS,CAAE,KAAK,CAAG,CAAC;gBAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAChD,IAAI;gBAAC,IAAI,CAAC,KAAK,GAAG,SAAG,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC;QAC5C,CAAC;QAED,IAAI,SAAS;YACZ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QACD,IAAI,SAAS,CAA0B,QAA0B;YAChE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC3B,CAAC;KACD;IAGD,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,mBAAQ,CAAC,WAAW,CAAE,MAAM,CAAE,CACnC;IACH,CAAC;IAED,QAAQ,EAAR,UAA2C,MAAQ;QAClD,EAAE,CAAA,CAAE,yBAAiB,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAG5D,IAAM,MAAM,GAAgB,+BAAc;aACxC,gBAAgB,CAAE,MAAM,EAAE,mBAAQ,CAAE,CAAC;QAEvC,EAAE,CAAA,CAAE,CAAE,MAAM,CAAC,SAAU,CAAC;YAAC,OAAO,MAAM,CAAC,SAAS,CAAC;QACjD,EAAE,CAAA,CAAE,CAAE,MAAM,CAAC,KAAM,CAAC;YAAC,OAAO,MAAM,CAAC,KAAK,CAAC;QAEzC,MAAM,CAAC,+BAAc;aACnB,oBAAoB,CAAE,yBAAiB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC/D,CAAC;IAGD,EAAE,EAAF,UAAI,KAAS;QACZ,MAAM,CAAC,mBAAQ,CAAC,EAAE,CAAE,KAAK,CAAE,CACzB;IACH,CAAC;IAED,MAAM,EAAN,UAA0B,IAA8B;QACvD,IAAM,IAAI,GAA6B,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QACjE,MAAM,CAAC,yBAAiB,CAAC,UAAU,CAAK,IAAI,CAAE,CAAC;IAChD,CAAC;IAED,UAAU,EAAV,UAA8B,MAAgC;QAC7D,MAAM,CAAC,yBAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;IAC7C,CAAC;CACD,CAAC","file":"TransientFragment.js","sourcesContent":["import { TransientDocument } from \"../Document/TransientDocument\";\n\nimport { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\n\nimport { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelFactory } from \"../Model/ModelFactory\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\nimport { ModelTypeGuard } from \"../Model/ModelTypeGuard\";\n\nimport { URI } from \"../RDF/URI\";\n\nimport { Resource } from \"../Resource/Resource\";\n\nimport { BaseTransientFragment } from \"./BaseTransientFragment\";\n\n\nexport interface TransientFragment extends Resource {\n\t$document:TransientDocument;\n\t$registry:TransientDocument;\n}\n\n\nexport type OverriddenMembers =\n\t| \"$registry\"\n\t| \"$id\"\n\t| \"$slug\"\n\t;\n\nexport type TransientFragmentFactory =\n\t& ModelPrototype<TransientFragment & BaseTransientFragment, Resource, OverriddenMembers>\n\t& ModelDecorator<TransientFragment, BaseTransientFragment>\n\t& ModelFactory<TransientFragment, BaseTransientFragment>\n\t& ModelTypeGuard<TransientFragment>\n\t;\n\nexport const TransientFragment:TransientFragmentFactory = {\n\tPROTOTYPE: {\n\t\tget $registry():TransientDocument {\n\t\t\tthrow new IllegalArgumentError( `Property \"$registry\" is required.` );\n\t\t},\n\n\n\t\tget $slug():string {\n\t\t\treturn URI.generateBNodeID();\n\t\t},\n\n\t\tget $id( this:TransientFragment ):string {\n\t\t\tif( URI.isBNodeID( this.$slug ) ) return this.$slug;\n\t\t\treturn this.$document.$id + \"#\" + this.$slug;\n\t\t},\n\t\tset $id( this:TransientFragment, value:string ) {\n\t\t\tif( URI.isBNodeID( value ) ) this.$slug = value;\n\t\t\telse this.$slug = URI.getFragment( value );\n\t\t},\n\n\t\tget $document( this:TransientFragment ):TransientDocument {\n\t\t\treturn this.$registry;\n\t\t},\n\t\tset $document( this:TransientFragment, document:TransientDocument ) {\n\t\t\tthis.$registry = document;\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is TransientFragment {\n\t\treturn Resource.isDecorated( object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends BaseTransientFragment>( object:T ):T & TransientFragment {\n\t\tif( TransientFragment.isDecorated( object ) ) return object;\n\n\n\t\tconst target:T & Resource = ModelDecorator\n\t\t\t.decorateMultiple( object, Resource );\n\n\t\tif( ! target.$registry ) delete target.$registry;\n\t\tif( ! target.$slug ) delete target.$slug;\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( TransientFragment.PROTOTYPE, target );\n\t},\n\n\n\tis( value:any ):value is TransientFragment {\n\t\treturn Resource.is( value )\n\t\t\t;\n\t},\n\n\tcreate<T extends object>( data:T & BaseTransientFragment ):T & TransientFragment {\n\t\tconst copy:T & BaseTransientFragment = Object.assign( {}, data );\n\t\treturn TransientFragment.createFrom<T>( copy );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseTransientFragment ):T & TransientFragment {\n\t\treturn TransientFragment.decorate( object );\n\t},\n};\n"]}