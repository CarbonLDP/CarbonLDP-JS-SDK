{"version":3,"sources":["Fragment/Fragment.ts"],"names":[],"mappings":";;AACA,gDAGyB;AACzB,8BAA6B;AAC7B,wCAKqB;AACrB,kCAAoC;AACpC,yDAG6B;AAuB7B,oBAAqB,QAAiB,EAAE,GAAU;IACjD,EAAE,CAAA,CAAE,SAAG,CAAC,UAAU,CAAE,GAAG,CAAG,CAAC;QAAC,MAAM,CAAC,GAAG,CAAC;IAEvC,IAAM,MAAM,GAAwB,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;IACrF,MAAM,CAAC,gCAAiB,CAAC,UAAU,CAAE,GAAG,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAE,CAAC;AACrE,CAAC;AAED,oCAAoD,IAAW;IAC9D,IAAI,GAAG,UAAU,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IAChC,MAAM,CAAC,4BAAiB,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;AAC7C,CAAC;AAED,oCAAoD,IAAW;IAC9D,IAAI,GAAG,UAAU,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IAChC,MAAM,CAAC,4BAAiB,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;AAC7C,CAAC;AAED,uCAAuD,IAAW;IACjE,IAAI,GAAG,UAAU,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IAChC,MAAM,CAAC,+BAAoB,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;AAChD,CAAC;AAEY,QAAA,QAAQ,GAAmB;IACvC,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,gBAAQ,CAAE,MAAM,CAAE;YACxB,MAAM,CAAE,SAAS,CAAE,KAAK,0BAA0B;YAClD,MAAM,CAAE,SAAS,CAAE,KAAK,0BAA0B;YAClD,MAAM,CAAE,YAAY,CAAE,KAAK,6BAA6B,CACvD;IACH,CAAC;IAED,EAAE,EAAF,UAAI,KAAS;QACZ,MAAM,CAAC,qCAAiB,CAAC,EAAE,CAAE,KAAK,CAAE;YACnC,mBAAQ,CAAC,WAAW,CAAE,KAAK,CAAE;YAC7B,gBAAQ,CAAC,WAAW,CAAE,KAAK,CAAE,CAC5B;IACH,CAAC;IAGD,QAAQ,EAAR,UAA4B,MAAQ;QACnC,EAAE,CAAA,CAAE,gBAAQ,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAEnD,qCAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QACrC,mBAAQ,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAE5B,IAAM,QAAQ,GAAgB,MAAsB,CAAC;QACrD,MAAM,CAAC,gBAAgB,CAAE,MAAM,EAAE;YAChC,SAAS,EAAE;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,0BAA0B;aACjC;YACD,SAAS,EAAE;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,0BAA0B;aACjC;YACD,YAAY,EAAE;gBACb,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,6BAA6B;aACpC;SACD,CAAE,CAAC;QAEJ,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;IAED,MAAM,EAAE,qCAAiB,CAAC,MAAM;IAChC,UAAU,EAAE,qCAAiB,CAAC,UAAU;CACxC,CAAC","file":"Fragment.js","sourcesContent":["import { Document } from \"../Document\";\nimport {\n\tDigestedObjectSchema,\n\tObjectSchemaUtils,\n} from \"../ObjectSchema\";\nimport { URI } from \"../RDF\";\nimport {\n\taddTypeInResource,\n\thasTypeInResource,\n\tremoveTypeInResource,\n\tResource\n} from \"../Resource\";\nimport { isObject } from \"../Utils\";\nimport {\n\tTransientFragment,\n\tTransientFragmentFactory\n} from \"./TransientFragment\";\n\nexport interface Fragment extends Resource, TransientFragment {\n\t_document:Document;\n\n\taddType( type:string ):void;\n\n\thasType( type:string ):boolean;\n\n\tremoveType( type:string ):void;\n}\n\n\nexport interface FragmentFactory extends TransientFragmentFactory {\n\tisDecorated( object:object ):object is Fragment;\n\n\tis( value:any ):value is Fragment;\n\n\n\tdecorate<T extends object>( object:T ):T & Fragment;\n}\n\n\nfunction resolveURI( fragment:Fragment, uri:string ):string {\n\tif( URI.isAbsolute( uri ) ) return uri;\n\n\tconst schema:DigestedObjectSchema = fragment._document._documents.getGeneralSchema();\n\treturn ObjectSchemaUtils.resolveURI( uri, schema, { vocab: true } );\n}\n\nfunction addTypeInPersistedFragment( this:Fragment, type:string ):void {\n\ttype = resolveURI( this, type );\n\treturn addTypeInResource.call( this, type );\n}\n\nfunction hasTypeInPersistedFragment( this:Fragment, type:string ):void {\n\ttype = resolveURI( this, type );\n\treturn hasTypeInResource.call( this, type );\n}\n\nfunction removeTypeInPersistedFragment( this:Fragment, type:string ):void {\n\ttype = resolveURI( this, type );\n\treturn removeTypeInResource.call( this, type );\n}\n\nexport const Fragment:FragmentFactory = {\n\tisDecorated( object:object ):object is Fragment {\n\t\treturn isObject( object ) &&\n\t\t\tobject[ \"addType\" ] === addTypeInPersistedFragment &&\n\t\t\tobject[ \"hasType\" ] === hasTypeInPersistedFragment &&\n\t\t\tobject[ \"removeType\" ] === removeTypeInPersistedFragment\n\t\t\t;\n\t},\n\n\tis( value:any ):value is Fragment {\n\t\treturn TransientFragment.is( value ) &&\n\t\t\tResource.isDecorated( value ) &&\n\t\t\tFragment.isDecorated( value )\n\t\t\t;\n\t},\n\n\n\tdecorate<T extends object>( object:T ):T & Fragment {\n\t\tif( Fragment.isDecorated( object ) ) return object;\n\n\t\tTransientFragment.decorate( object );\n\t\tResource.decorate( object );\n\n\t\tconst fragment:T & Fragment = object as T & Fragment;\n\t\tObject.defineProperties( object, {\n\t\t\t\"addType\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: addTypeInPersistedFragment,\n\t\t\t},\n\t\t\t\"hasType\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: hasTypeInPersistedFragment,\n\t\t\t},\n\t\t\t\"removeType\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: removeTypeInPersistedFragment,\n\t\t\t},\n\t\t} );\n\n\t\treturn fragment;\n\t},\n\n\tcreate: TransientFragment.create,\n\tcreateFrom: TransientFragment.createFrom,\n};\n"]}