{"version":3,"sources":["SPARQL/QueryDocument/QueryProperty.ts"],"names":[],"mappings":";;AAEA,mDAAoE;AAGpE;IAQC,eAAa,OAA0B,EAAE,IAAW,EAAE,OAAqB;QAC1E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAE,IAAI,CAAE,CAAC;QAE5C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,EAAE,CAAA,CAAE,OAAQ,CAAC;YAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;IAC9C,CAAC;IAED,0BAAU,GAAV;QAAY,kBAA0B;aAA1B,UAA0B,EAA1B,qBAA0B,EAA1B,IAA0B;YAA1B,6BAA0B;;QACrC,CAAA,KAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,WAAK,QAAQ,EAAG;QACnC,MAAM,CAAC,IAAI,CAAC;;IACb,CAAC;IAED,kCAAkB,GAAlB;QAAoB,kBAA0B;aAA1B,UAA0B,EAA1B,qBAA0B,EAA1B,IAA0B;YAA1B,6BAA0B;;QAC7C,IAAM,KAAK,GAAgB,IAAI,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC;QAC/C,IAAM,YAAY,GAAwB,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7F,YAAY,CAAC,UAAU,OAAvB,YAAY,EAAgB,QAAQ,EAAG;QAEvC,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,2BAAW,GAAX;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAED,yBAAS,GAAT;QACC,EAAE,CAAA,CAAE,IAAI,CAAC,OAAQ,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAEvC,IAAI,CAAC,OAAO,GAAG,IAAI,mCAAoB,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAE,EAAE,CAAE,IAAI,IAAI,CAAC;QAE3D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAED,wBAAQ,GAAR;QACC,MAAM,CAAC,KAAI,IAAI,CAAC,QAAW,CAAC;IAC7B,CAAC;IACF,YAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,sBAAK;AAgDlB,kBAAe,KAAK,CAAC","file":"QueryProperty.js","sourcesContent":["import { OptionalToken, PatternToken, VariableToken } from \"sparqler/tokens\";\n\nimport { DigestedObjectSchema, Digester } from \"../../ObjectSchema\";\nimport * as QueryContext from \"./QueryContext\";\n\nexport class Class {\n\treadonly name:string;\n\treadonly variable:VariableToken;\n\n\tprivate _context:QueryContext.Class;\n\tprivate _patterns:PatternToken[];\n\tprivate _schema:DigestedObjectSchema;\n\n\tconstructor( context:QueryContext.Class, name:string, pattern?:PatternToken ) {\n\t\tthis.name = name;\n\t\tthis.variable = context.getVariable( name );\n\n\t\tthis._context = context;\n\t\tthis._patterns = [];\n\t\tif( pattern ) this._patterns.push( pattern );\n\t}\n\n\taddPattern( ...patterns:PatternToken[] ):this {\n\t\tthis._patterns.push( ...patterns );\n\t\treturn this;\n\t}\n\n\taddOptionalPattern( ...patterns:PatternToken[] ):this {\n\t\tconst first:PatternToken = this._patterns[ 0 ];\n\t\tconst patternAdder:OptionalToken | this = first && first.token === \"optional\" ? first : this;\n\t\tpatternAdder.addPattern( ...patterns );\n\n\t\treturn this;\n\t}\n\n\tgetPatterns():PatternToken[] {\n\t\treturn this._patterns;\n\t}\n\n\tgetSchema():DigestedObjectSchema {\n\t\tif( this._schema ) return this._schema;\n\n\t\tthis._schema = new DigestedObjectSchema();\n\t\tthis._schema.vocab = this._context.expandIRI( \"\" ) || null;\n\n\t\treturn this._schema;\n\t}\n\n\ttoString():string {\n\t\treturn `${ this.variable }`;\n\t}\n}\n\nexport default Class;\n"]}