{"version":3,"sources":["SPARQL/QueryDocument/QueryContextBuilder.ts"],"names":[],"mappings":"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","file":"QueryContextBuilder.js","sourcesContent":["import { PatternToken } from \"sparqler/tokens\";\n\nimport * as Context from \"../../Context\";\nimport { IllegalArgumentError } from \"../../Errors\";\nimport { DigestedObjectSchema, DigestedPropertyDefinition } from \"../../ObjectSchema\";\nimport * as QueryContext from \"./QueryContext\";\nimport * as QueryProperty from \"./QueryProperty\";\nimport { getLevelRegExp } from \"./Utils\";\n\nexport class Class extends QueryContext.Class {\n\n\tprivate _propertiesMap:Map<string, QueryProperty.Class>;\n\tprivate _schemas:DigestedObjectSchema[];\n\n\tconstructor( context?:Context.Class ) {\n\t\tsuper( context );\n\t\tthis._propertiesMap = new Map();\n\t}\n\n\thasProperty( name:string ):boolean {\n\t\treturn this._propertiesMap.has( name );\n\t}\n\n\thasProperties( name:string ):boolean {\n\t\tname += \".\";\n\t\treturn Array.from( this._propertiesMap.keys() )\n\t\t\t.some( key => key.startsWith( name ) );\n\t}\n\n\taddProperty( name:string, pattern?:PatternToken ):QueryProperty.Class {\n\t\tconst property:QueryProperty.Class = new QueryProperty.Class( this, name, pattern );\n\t\tthis._propertiesMap.set( name, property );\n\t\treturn property;\n\t}\n\n\tgetProperty( name:string ):QueryProperty.Class {\n\t\treturn this._propertiesMap.get( name );\n\t}\n\n\tgetProperties( propertyLevel:string ):QueryProperty.Class[] {\n\t\tconst levelRegex:RegExp = getLevelRegExp( propertyLevel );\n\t\treturn Array.from( this._propertiesMap.entries() )\n\t\t\t.filter( ( [ name ] ) => levelRegex.test( name ) )\n\t\t\t.map( ( [ name, property ] ) => property );\n\t}\n\n\tgetInheritTypeDefinition( propertyName:string, propertyURI?:string, existingSchema:DigestedObjectSchema = this.context.getObjectSchema() ):DigestedPropertyDefinition {\n\t\tconst schemas:DigestedObjectSchema[] = [ existingSchema, ...this._getTypeSchemas() ];\n\n\t\tfor( const schema of schemas ) {\n\t\t\tif( ! schema.properties.has( propertyName ) ) continue;\n\t\t\tconst digestedProperty:DigestedPropertyDefinition = schema.properties.get( propertyName );\n\n\t\t\tif( propertyURI && digestedProperty.uri.stringValue !== propertyURI ) continue;\n\t\t\treturn digestedProperty;\n\t\t}\n\t}\n\n\tgetSchemaFor( object:object, path?:string ):DigestedObjectSchema {\n\t\tif( path === void 0 ) return super.getSchemaFor( object );\n\n\t\tconst property:QueryProperty.Class = this._propertiesMap.get( path );\n\t\tif( ! property ) throw new IllegalArgumentError( `Schema path \"${ path }\" does not exists.` );\n\n\t\treturn property.getSchema();\n\t}\n\n\tprivate _getTypeSchemas():DigestedObjectSchema[] {\n\t\tif( this._schemas ) return this._schemas;\n\n\t\tconst schemasTypes:Set<string> = new Set();\n\t\t(function addSchemasTypes( context:Context.Class ):void {\n\t\t\tif( ! context ) return;\n\t\t\tArray.from( context[ \"typeObjectSchemaMap\" ].keys() ).forEach( schemasTypes.add, schemasTypes );\n\t\t\taddSchemasTypes( context.parentContext );\n\t\t})( this.context );\n\n\t\tthis._schemas = [];\n\t\tschemasTypes.forEach( type => this._schemas.push( this.context.getObjectSchema( type ) ) );\n\t\treturn this._schemas;\n\t}\n\n}\n\nexport default Class;\n"]}