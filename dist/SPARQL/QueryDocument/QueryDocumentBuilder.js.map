{"version":3,"sources":["SPARQL/QueryDocument/QueryDocumentBuilder.ts"],"names":[],"mappings":"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","file":"QueryDocumentBuilder.js","sourcesContent":["import { FilterToken, IRIToken, OptionalToken, PredicateToken, PrefixedNameToken, SubjectToken, VariableToken } from \"sparqler/tokens\";\n\nimport { DigestedObjectSchema, DigestedPropertyDefinition, Digester, PropertyDefinition } from \"../../ObjectSchema\";\nimport { isObject } from \"../../Utils\";\nimport { IllegalArgumentError } from \"./../../Errors\";\nimport * as Pointer from \"./../../Pointer\";\nimport * as QueryContext from \"./QueryContext\";\nimport * as QueryObject from \"./QueryObject\";\nimport * as QueryPropertiesSchema from \"./QueryPropertiesSchema\";\nimport * as QueryProperty from \"./QueryProperty\";\nimport * as QueryPropertySchema from \"./QueryPropertySchema\";\nimport * as QueryValue from \"./QueryValue\";\n\nconst inherit:Readonly<{}> = Object.freeze( {} );\n\nexport class Class {\n\tinherit:Readonly<{}> = inherit;\n\n\tprivate _context:QueryContext.Class;\n\tprivate _document:QueryProperty.Class;\n\tprivate _typesTriple:SubjectToken;\n\n\tconstructor( queryContext:QueryContext.Class, property:QueryProperty.Class ) {\n\t\tthis._context = queryContext;\n\t\tthis._document = property.addOptionalPattern( new OptionalToken()\n\t\t\t.addPattern( new SubjectToken( property.variable )\n\t\t\t\t.addPredicate( new PredicateToken( \"a\" )\n\t\t\t\t\t.addObject( queryContext.getVariable( property.name + \"___type\" ) ) ) )\n\t\t);\n\t\tthis._typesTriple = new SubjectToken( property.variable ).addPredicate( new PredicateToken( \"a\" ) );\n\t}\n\n\tproperty( name?:string ):QueryProperty.Class {\n\t\tname = name !== void 0 ? `${ this._document.name }.${ name }` : this._document.name;\n\t\treturn this._context.getProperty( name );\n\t}\n\n\tvalue( value:string | number | boolean | Date ):QueryValue.Class {\n\t\treturn new QueryValue.Class( this._context, value );\n\t}\n\n\tobject( object:Pointer.Class | string ):QueryObject.Class {\n\t\treturn new QueryObject.Class( this._context, object );\n\t}\n\n\twithType( type:string ):this {\n\t\tif( this._context.hasProperties( this._document.name ) ) throw new Error( \"Types must be specified before the properties.\" );\n\n\t\ttype = this._context.expandIRI( type );\n\t\tif( ! this._typesTriple.predicates[ 0 ].objects.length )\n\t\t\tthis._document.addOptionalPattern( this._typesTriple );\n\n\t\tthis._typesTriple.predicates[ 0 ].addObject( this._context.compactIRI( type ) );\n\n\t\tconst schema:DigestedObjectSchema = this._context.context.getObjectSchema( type );\n\t\tif( schema ) this._document.addSchema( schema );\n\n\t\treturn this;\n\t}\n\n\tproperties( propertiesSchema:QueryPropertiesSchema.Class ):this {\n\t\tfor( const propertyName in propertiesSchema ) {\n\t\t\tconst queryPropertySchema:QueryPropertySchema.Class | string = propertiesSchema[ propertyName ];\n\t\t\tconst propertyDefinition:QueryPropertySchema.Class = isObject( queryPropertySchema ) ? queryPropertySchema : { \"@id\": queryPropertySchema };\n\t\t\tconst { uri, literalType, pointerType } = this.addPropertyDefinition( propertyName, propertyDefinition );\n\n\t\t\tconst name:string = `${ this._document.name }.${ propertyName }`;\n\t\t\tconst propertyPath:IRIToken | PrefixedNameToken = this._context.compactIRI( uri.stringValue );\n\t\t\tconst propertyObject:VariableToken = this._context.getVariable( name );\n\n\t\t\tconst propertyPattern:OptionalToken = new OptionalToken()\n\t\t\t\t.addPattern( new SubjectToken( this._document.variable )\n\t\t\t\t\t.addPredicate( new PredicateToken( propertyPath )\n\t\t\t\t\t\t.addObject( propertyObject ) ) )\n\t\t\t;\n\n\t\t\tif( literalType !== null ) propertyPattern\n\t\t\t\t.addPattern( new FilterToken( `datatype( ${ propertyObject } ) = ${ this._context.compactIRI( literalType.stringValue ) }` ) );\n\t\t\tif( pointerType !== null ) propertyPattern\n\t\t\t\t.addPattern( new FilterToken( `! isLiteral( ${ propertyObject } )` ) );\n\n\t\t\tconst property:QueryProperty.Class = this._context.addProperty( name, propertyPattern );\n\t\t\tif( \"query\" in propertyDefinition ) {\n\t\t\t\tconst builder:Class = new Class( this._context, property );\n\t\t\t\tif( builder !== propertyDefinition[ \"query\" ].call( void 0, builder ) )\n\t\t\t\t\tthrow new IllegalArgumentError( \"The provided query builder was not returned\" );\n\t\t\t}\n\n\t\t\tthis._document.addOptionalPattern( ...property.getPatterns() );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprivate addPropertyDefinition( propertyName:string, propertyDefinition:PropertyDefinition ):DigestedPropertyDefinition {\n\t\tconst schema:DigestedObjectSchema = this._document.getSchema();\n\t\tconst uri:string = \"@id\" in propertyDefinition ? this._context.expandIRI( propertyDefinition[ \"@id\" ] ) : void 0;\n\n\t\tconst inheritDefinition:DigestedPropertyDefinition = this._context.getInheritTypeDefinition( propertyName, uri, schema );\n\t\tconst digestedDefinition:DigestedPropertyDefinition = Digester.digestPropertyDefinition( schema, propertyName, propertyDefinition );\n\n\t\tif( inheritDefinition ) {\n\t\t\tfor( const key in inheritDefinition ) {\n\t\t\t\tif( key !== \"uri\" && key in digestedDefinition ) continue;\n\t\t\t\tdigestedDefinition[ key ] = inheritDefinition[ key ];\n\t\t\t}\n\t\t}\n\n\t\tif( ! digestedDefinition.uri ) throw new Error( `Invalid property \"${ propertyName }\" definition, URI \"@id\" is missing.` );\n\n\t\tschema.properties.set( propertyName, digestedDefinition );\n\t\treturn digestedDefinition;\n\t}\n\n}\n\nexport default Class;\n\n"]}