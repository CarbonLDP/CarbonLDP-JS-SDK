{"version":3,"sources":["SPARQL/QueryDocument/QueryDocumentBuilder.ts"],"names":[],"mappings":"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","file":"QueryDocumentBuilder.js","sourcesContent":["import { FilterToken, IRIToken, OptionalToken, PredicateToken, PrefixedNameToken, SubjectToken, ValuesToken, VariableToken } from \"sparqler/tokens\";\n\nimport { DigestedObjectSchema, DigestedPropertyDefinition, Digester, PropertyDefinition } from \"../../ObjectSchema\";\nimport { isObject } from \"../../Utils\";\nimport * as Pointer from \"./../../Pointer\";\nimport * as QueryContext from \"./QueryContext\";\nimport * as QueryObject from \"./QueryObject\";\nimport * as QueryPropertiesSchema from \"./QueryPropertiesSchema\";\nimport * as QueryProperty from \"./QueryProperty\";\nimport * as QueryPropertySchema from \"./QueryPropertySchema\";\nimport * as QueryValue from \"./QueryValue\";\nimport * as QueryVariable from \"./QueryVariable\";\n\nconst inherit:Readonly<{}> = Object.freeze( {} );\n\nexport class Class {\n\tinherit:Readonly<{}> = inherit;\n\n\tprivate _context:QueryContext.Class;\n\tprivate _schema:DigestedObjectSchema;\n\tprivate _document:QueryVariable.Class;\n\n\tconstructor( queryContext:QueryContext.Class, name:string = \"document\" ) {\n\t\tthis._context = queryContext;\n\t\tthis._schema = queryContext.context.documents.getSchemaFor( {} );\n\t\tthis._document = this._context.getVariable( name );\n\t}\n\n\tproperty( name:string ):QueryProperty.Class {\n\t\treturn this._context.getProperty( name );\n\t}\n\n\tvalue( value:string | number | boolean | Date ):QueryValue.Class {\n\t\treturn new QueryValue.Class( this._context, value );\n\t}\n\n\tobject( object:Pointer.Class | string ):QueryObject.Class {\n\t\treturn new QueryObject.Class( this._context, object );\n\t}\n\n\twithType( iriClass:string ):Class {\n\t\t// TODO:\n\t\tthrow new Error( \"Not implemented\" );\n\t}\n\n\tproperties( propertiesSchema:QueryPropertiesSchema.Class ):Class /*& QueryDocumentGetter*/ {\n\t\tfor( const propertyName in propertiesSchema ) {\n\t\t\tconst queryProperty:QueryPropertySchema.Class | string = propertiesSchema[ propertyName ];\n\t\t\tconst propertyDefinition:PropertyDefinition = isObject( queryProperty ) ? queryProperty : { \"@id\": queryProperty };\n\t\t\tconst { uri, literalType } = this.addPropertyDefinition( propertyName, propertyDefinition );\n\n\t\t\tconst propertyPredicate:VariableToken = this._context.getVariable( propertyName + \"_predicate\" );\n\t\t\tconst propertyPath:IRIToken | PrefixedNameToken = this._context.compactIRI( uri.stringValue );\n\t\t\tconst propertyObject:VariableToken = this._context.getVariable( propertyName + \"_object\" );\n\n\t\t\tconst propertyPattern:OptionalToken = new OptionalToken()\n\t\t\t\t.addPattern( new ValuesToken()\n\t\t\t\t\t.addValues( propertyPredicate, propertyPath ) )\n\t\t\t\t.addPattern( new SubjectToken( this._document )\n\t\t\t\t\t.addPredicate( new PredicateToken( propertyPredicate )\n\t\t\t\t\t\t.addObject( propertyObject ) ) )\n\t\t\t;\n\n\t\t\tif( literalType ) propertyPattern\n\t\t\t\t.addPattern( new FilterToken( `datatype( ${ propertyObject } ) = ${ this._context.compactIRI( literalType.stringValue ) }` ) );\n\n\t\t\t// TODO: Process query\n\n\t\t\tthis._context.addProperty( propertyName, propertyPattern );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprivate addPropertyDefinition( propertyName:string, propertyDefinition:PropertyDefinition ):DigestedPropertyDefinition {\n\t\tconst digestedDefinition:DigestedPropertyDefinition = Digester.digestPropertyDefinition( this._schema, propertyName, propertyDefinition );\n\t\tconst inheritDefinition:DigestedPropertyDefinition = this._schema.properties.has( propertyName ) ?\n\t\t\tthis._schema.properties.get( propertyName ) : this._context.getInheritTypeDefinition( propertyName, digestedDefinition.uri && digestedDefinition.uri.stringValue );\n\n\t\tif( inheritDefinition ) {\n\t\t\tfor( const key in inheritDefinition ) {\n\t\t\t\tif( key !== \"uri\" && key in digestedDefinition ) continue;\n\t\t\t\tdigestedDefinition[ key ] = inheritDefinition[ key ];\n\t\t\t}\n\t\t}\n\n\t\tif( ! digestedDefinition.uri ) throw new Error( `Invalid property \"${ propertyName }\" definition, URI \"@id\" is missing.` );\n\n\t\tthis._schema.properties.set( propertyName, digestedDefinition );\n\t\treturn digestedDefinition;\n\t}\n\n}\n\nexport default Class;\n\n"]}