{"version":3,"sources":["SPARQL/QueryDocument/QueryDocumentBuilder.ts"],"names":[],"mappings":"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","file":"QueryDocumentBuilder.js","sourcesContent":["import { FilterToken, IRIToken, LiteralToken, OptionalToken, PredicateToken, PrefixedNameToken, SubjectToken, TermToken, ValuesToken } from \"sparqler/tokens\";\n\nimport { DigestedObjectSchema, DigestedPropertyDefinition, Digester, PropertyDefinition } from \"../../ObjectSchema\";\nimport { isObject } from \"../../Utils\";\nimport { IllegalArgumentError, IllegalStateError } from \"./../../Errors\";\nimport * as Pointer from \"./../../Pointer\";\nimport * as QueryContextBuilder from \"./QueryContextBuilder\";\nimport * as QueryObject from \"./QueryObject\";\nimport * as QueryPropertiesSchema from \"./QueryPropertiesSchema\";\nimport * as QueryProperty from \"./QueryProperty\";\nimport * as QueryPropertySchema from \"./QueryPropertySchema\";\nimport * as QueryValue from \"./QueryValue\";\nimport { createPropertyPattern } from \"./Utils\";\n\nconst inherit:Readonly<{}> = Object.freeze( {} );\n\nexport class Class {\n\tinherit:Readonly<{}> = inherit;\n\n\tprotected _context:QueryContextBuilder.Class;\n\tprotected _document:QueryProperty.Class;\n\n\tprivate _typesTriple:SubjectToken;\n\tprivate _values:ValuesToken;\n\n\tprivate _schema:DigestedObjectSchema;\n\n\tconstructor( queryContext:QueryContextBuilder.Class, property:QueryProperty.Class ) {\n\t\tthis._context = queryContext;\n\t\tthis._document = property.addOptionalPattern( new OptionalToken()\n\t\t\t.addPattern( new SubjectToken( property.variable )\n\t\t\t\t.addPredicate( new PredicateToken( \"a\" )\n\t\t\t\t\t.addObject( queryContext.getVariable( property.name + \"__types\" ) ) ) )\n\t\t);\n\n\t\tthis._typesTriple = new SubjectToken( property.variable ).addPredicate( new PredicateToken( \"a\" ) );\n\t\tthis._values = new ValuesToken().addValues( this._document.variable );\n\n\t\tthis._schema = this._context.getSchemaFor( { id: \"\" } );\n\t}\n\n\tproperty( name?:string ):QueryProperty.Class {\n\t\tif( name === void 0 ) return this._document;\n\n\t\tconst originalName:string = name;\n\n\t\tlet path:string = this._document.name;\n\t\twhile( path ) {\n\t\t\tname = `${ path }.${ originalName }`;\n\t\t\tif( this._context.hasProperty( name ) ) return this._context.getProperty( name );\n\t\t\tpath = path.split( \".\" ).slice( 0, - 1 ).join( \".\" );\n\t\t}\n\n\t\tthrow new IllegalArgumentError( `The \"${ originalName }\" property was not declared.` );\n\t}\n\n\tvalue( value:string | number | boolean | Date ):QueryValue.Class {\n\t\treturn new QueryValue.Class( this._context, value );\n\t}\n\n\tobject( object:Pointer.Class | string ):QueryObject.Class {\n\t\treturn new QueryObject.Class( this._context, object );\n\t}\n\n\twithType( type:string ):this {\n\t\tif( this._context.hasProperties( this._document.name ) ) throw new IllegalStateError( \"Types must be specified before the properties.\" );\n\n\t\ttype = this._context.expandIRI( type );\n\t\tif( ! this._typesTriple.predicates[ 0 ].objects.length )\n\t\t\tthis._document.addOptionalPattern( this._typesTriple );\n\n\t\tthis._typesTriple.predicates[ 0 ].addObject( this._context.compactIRI( type ) );\n\n\t\tif( ! this._context.context ) return this;\n\n\t\tconst schema:DigestedObjectSchema = this._context.context.getObjectSchema( type );\n\t\tif( schema ) {\n\t\t\tthis._schema = Digester.combineDigestedObjectSchemas( [ this._schema, schema ] );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tproperties( propertiesSchema:QueryPropertiesSchema.Class ):this {\n\t\tfor( const propertyName in propertiesSchema ) {\n\t\t\tconst queryPropertySchema:QueryPropertySchema.Class | string = propertiesSchema[ propertyName ];\n\t\t\tconst propertyDefinition:QueryPropertySchema.Class = isObject( queryPropertySchema ) ? queryPropertySchema : { \"@id\": queryPropertySchema };\n\n\t\t\tconst digestedDefinition:DigestedPropertyDefinition = this.addPropertyDefinition( propertyName, propertyDefinition );\n\t\t\tconst name:string = `${ this._document.name }.${ propertyName }`;\n\n\t\t\tconst propertyPattern:OptionalToken = createPropertyPattern(\n\t\t\t\tthis._context,\n\t\t\t\tthis._document.name,\n\t\t\t\tname,\n\t\t\t\tdigestedDefinition\n\t\t\t);\n\t\t\tconst property:QueryProperty.Class = this._context\n\t\t\t\t.addProperty( name )\n\t\t\t\t.addPattern( propertyPattern );\n\n\t\t\tif( \"query\" in propertyDefinition ) {\n\t\t\t\tconst builder:Class = new Class( this._context, property );\n\t\t\t\tif( builder !== propertyDefinition[ \"query\" ].call( void 0, builder ) )\n\t\t\t\t\tthrow new IllegalArgumentError( \"The provided query builder was not returned\" );\n\t\t\t}\n\n\t\t\tthis._document.addOptionalPattern( ...property.getPatterns() );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tfilter( constraint:string ):this {\n\t\tconst baseName:string = this._document.name.split( \".\" ).pop();\n\t\tthis._context\n\t\t\t.getProperty( baseName )\n\t\t\t.addPattern( new FilterToken( constraint ) );\n\n\t\treturn this;\n\t}\n\n\tvalues( ...values:( QueryValue.Class | QueryObject.Class )[] ):this {\n\t\tconst termTokens:( LiteralToken | IRIToken | PrefixedNameToken )[] = values.map( value => {\n\t\t\tconst token:TermToken = value.getToken();\n\t\t\tif( token.token === \"blankNode\" ) throw new IllegalArgumentError( `Blank node \"${ token.label }\" is not a valid value.` );\n\n\t\t\treturn token;\n\t\t} );\n\n\t\tif( ! this._values.values[ 0 ].length ) this._document.addPattern( this._values );\n\t\tthis._values.values[ 0 ].push( ...termTokens );\n\n\t\treturn this;\n\t}\n\n\tprivate addPropertyDefinition( propertyName:string, propertyDefinition:PropertyDefinition ):DigestedPropertyDefinition {\n\t\tconst uri:string = \"@id\" in propertyDefinition ? this._context.expandIRI( propertyDefinition[ \"@id\" ] ) : void 0;\n\n\t\tconst inheritDefinition:DigestedPropertyDefinition = this._context.getInheritTypeDefinition( propertyName, uri, this._schema );\n\t\tconst digestedDefinition:DigestedPropertyDefinition = Digester.digestPropertyDefinition( this._schema, propertyName, propertyDefinition );\n\n\t\tif( inheritDefinition ) {\n\t\t\tfor( const key in inheritDefinition ) {\n\t\t\t\tif( key !== \"uri\" && digestedDefinition[ key ] !== null ) continue;\n\t\t\t\tdigestedDefinition[ key ] = inheritDefinition[ key ];\n\t\t\t}\n\t\t}\n\n\t\tif( ! digestedDefinition.uri ) throw new IllegalArgumentError( `Invalid property \"${ propertyName }\" definition, \"@id\" is necessary.` );\n\n\t\tthis._document.getSchema()\n\t\t\t.properties.set( propertyName, digestedDefinition );\n\t\treturn digestedDefinition;\n\t}\n\n}\n\nexport default Class;\n"]}