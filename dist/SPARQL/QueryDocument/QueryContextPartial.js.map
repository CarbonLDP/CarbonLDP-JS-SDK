{"version":3,"sources":["SPARQL/QueryDocument/QueryContextPartial.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA,2CAAmD;AACnD,+CAA8C;AAE9C;IAAyC,uCAAY;IAIpD,6BAAa,QAA0B,EAAE,OAAsC;QAA/E,YACC,kBAAO,OAAO,CAAE,SAEhB;QADA,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;IAC3B,CAAC;IAED,0CAAY,GAAZ,UAAc,MAAa,EAAE,IAAY;QACxC,IAAI,IAAI,KAAK,KAAK,CAAC;YAAG,OAAO,iBAAM,YAAY,YAAE,MAAM,CAAE,CAAC;QAE1D,IAAM,KAAK,GAAY,IAAI,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;QACtD,IAAI,aAAa,GAAqB,IAAI,CAAC,SAAS,CAAC;QACrD,OAAO,KAAK,CAAC,MAAM,EAAG;YACrB,IAAM,IAAI,GAAU,KAAK,CAAC,KAAK,EAAE,CAAC;YAClC,IAAM,MAAM,GAAS,KAAK,CAAC,OAAO,CAAE,aAAa,CAAE,IAAI,CAAE,CAAE,CAAC,CAAC;gBAC5D,aAAa,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAAE,aAAa,CAAE,IAAI,CAAE,CAAE,CAAC;YAEnD,aAAa,GAAG,MAAM,CAAC,IAAI,CAAE,4BAAiB,CAAC,EAAE,CAAE,CAAC;YACpD,IAAI,CAAE,aAAa;gBAAG,OAAO,iBAAM,YAAY,YAAE,MAAM,CAAE,CAAC;SAC1D;QAED,OAAO,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC;IAC9C,CAAC;IACF,0BAAC;AAAD,CAzBA,AAyBC,CAzBwC,2BAAY,GAyBpD;AAzBY,kDAAmB","file":"QueryContextPartial.js","sourcesContent":["import { AbstractContext } from \"../../AbstractContext\";\nimport { DigestedObjectSchema } from \"../../ObjectSchema\";\nimport { Pointer } from \"../../Pointer\";\nimport { PersistedResource } from \"../../Resource\";\nimport { QueryContext } from \"./QueryContext\";\n\nexport class QueryContextPartial extends QueryContext {\n\n\tprivate readonly _resource:PersistedResource;\n\n\tconstructor( resource:PersistedResource, context?:AbstractContext<Pointer, any> ) {\n\t\tsuper( context );\n\t\tthis._resource = resource;\n\t}\n\n\tgetSchemaFor( object:object, path?:string ):DigestedObjectSchema {\n\t\tif( path === void 0 ) return super.getSchemaFor( object );\n\n\t\tconst parts:string[] = path.split( /\\./g ).slice( 1 );\n\t\tlet schemaLibrary:PersistedResource = this._resource;\n\t\twhile( parts.length ) {\n\t\t\tconst part:string = parts.shift();\n\t\t\tconst values:any[] = Array.isArray( schemaLibrary[ part ] ) ?\n\t\t\t\tschemaLibrary[ part ] : [ schemaLibrary[ part ] ];\n\n\t\t\tschemaLibrary = values.find( PersistedResource.is );\n\t\t\tif( ! schemaLibrary ) return super.getSchemaFor( object );\n\t\t}\n\n\t\treturn schemaLibrary._partialMetadata.schema;\n\t}\n}\n"]}