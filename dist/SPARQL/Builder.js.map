{"version":3,"sources":["SPARQL/Builder.ts"],"names":[],"mappings":";AAQA,qCAAwC;AAqBxC,IAAI,cAAc,GAAO,uBAAY,CAAC,SAAS,CAAC;AAChD,IAAI,SAAS,GAAY,cAAc,CAAC,cAAc,CAAC;AACvD,cAAc,CAAC,cAAc,GAAG;IAC/B,SAAS,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;IACvB,IAAI,IAAI,GAAgB,IAAoB,CAAC;IAG7C,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG;QAC9B,OAAO,EAAE;YACR,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAE,CAAC;QAC7F,CAAC;QACD,UAAU,EAAE;YACX,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAE,CAAC;QAChG,CAAC;KACD,CAAC;AACH,CAAC,CAAC;;AAEF,kBAAe,uBAAY,CAAC","file":"Builder.js","sourcesContent":["import Documents from \"./../Documents\";\n\nimport SELECTResults from \"./SELECTResults\";\nimport RawResults from \"./RawResults\";\n\nimport HTTPResponse from \"./../HTTP/Response\";\n\n\nimport { QueryBuilder } from \"sparqler\";\n\ndeclare module \"sparqler/Clauses\" {\n\n\texport interface FinishSelect {\n\t\texecute():Promise<[ SELECTResults, HTTPResponse ]>;\n\t\texecuteRaw():Promise<[ RawResults, HTTPResponse ]>;\n\t}\n\n}\n\ndeclare module \"sparqler/Sparqler\" {\n\n\texport interface QueryBuilder {\n\t\t_documents:Documents;\n\t\t_entryPoint:string;\n\t}\n\n}\n\n// Add execute functions to the query builder\nlet queryPrototype:any = QueryBuilder.prototype;\nlet superInit:Function = queryPrototype.initInterfaces;\nqueryPrototype.initInterfaces = function():void {\n\tsuperInit.call( this );\n\tlet self:QueryBuilder = this as QueryBuilder;\n\n\t// Add execution of select\n\tthis.interfaces.finishSelect = {\n\t\texecute: function():Promise<[ SELECTResults, HTTPResponse ]> {\n\t\t\treturn self._documents.executeSELECTQuery( self._entryPoint, self.getCompactSparqlQuery() );\n\t\t},\n\t\texecuteRaw: function():Promise<[ RawResults, HTTPResponse ]> {\n\t\t\treturn self._documents.executeRawSELECTQuery( self._entryPoint, self.getCompactSparqlQuery() );\n\t\t},\n\t};\n};\n\nexport default QueryBuilder;\n"]}