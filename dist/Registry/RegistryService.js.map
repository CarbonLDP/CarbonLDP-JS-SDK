{"version":3,"sources":["Registry/RegistryService.ts"],"names":[],"mappings":"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","file":"RegistryService.js","sourcesContent":["import { AbstractContext } from \"../AbstractContext\";\nimport { ModelDecorator } from \"../core\";\nimport { TransientDocument } from \"../Document\";\nimport { FreeResources } from \"../FreeResources\";\nimport { JSONLDConverter, } from \"../JSONLD\";\nimport {\n\tDigestedObjectSchema,\n\tObjectSchemaDigester,\n\tObjectSchemaResolver,\n\tObjectSchemaUtils,\n} from \"../ObjectSchema\";\nimport {\n\tPointer,\n\tPointerLibrary\n} from \"../Pointer\";\nimport {\n\tRDFNode,\n\tURI,\n} from \"../RDF\";\nimport {\n\tPersistedResource,\n\tTransientResource\n} from \"../Resource\";\nimport { MapUtils } from \"../Utils\";\nimport { Registry } from \"./Registry\";\n\n\nexport class RegistryService<M extends Pointer, C extends AbstractContext<M, any> = undefined> implements Registry<M>, ObjectSchemaResolver {\n\treadonly _context:C | undefined;\n\n\tget _registry():Registry<any> | undefined {\n\t\treturn this._context\n\t\t\t&& this._context.parentContext\n\t\t\t&& this._context.parentContext.registry\n\t\t\t;\n\t}\n\n\tprotected readonly _model:ModelDecorator<M>;\n\treadonly _resourcesMap:Map<string, M>;\n\n\tprotected readonly _documentDecorators:Map<string, ( object:object ) => object>;\n\tget documentDecorators():Map<string, ( object:object ) => object> { return this._documentDecorators; }\n\n\tprotected readonly _jsonldConverter:JSONLDConverter;\n\tget jsonldConverter():JSONLDConverter { return this._jsonldConverter; }\n\n\n\tinScope:Registry<M>[ \"inScope\" ] = Registry.PROTOTYPE.inScope;\n\n\thasPointer:Registry<M>[ \"hasPointer\" ] = Registry.PROTOTYPE.hasPointer;\n\tgetPointer:Registry<M>[ \"getPointer\" ] = Registry.PROTOTYPE.getPointer as Registry<M>[ \"getPointer\" ];\n\tgetPointers:Registry<M>[ \"getPointers\" ] = Registry.PROTOTYPE.getPointers as Registry<M>[ \"getPointers\" ];\n\tremovePointer:Registry<M>[ \"removePointer\" ] = Registry.PROTOTYPE.removePointer;\n\n\n\tconstructor( model:ModelDecorator<M>, context?:C ) {\n\t\tthis._context = context;\n\t\tthis._model = model;\n\n\t\tthis._resourcesMap = new Map();\n\n\t\tthis._documentDecorators = MapUtils.extend( new Map(), context && context.parentContext && context.parentContext.registry.documentDecorators );\n\t\tthis._jsonldConverter = new JSONLDConverter( context && context.parentContext && context.parentContext.registry.jsonldConverter.literalSerializers );\n\t}\n\n\n\t_getLocalID( id:string ):string {\n\t\tif( ! this._context ) return id;\n\n\t\tconst schema:DigestedObjectSchema = this._context.getObjectSchema();\n\t\tconst iri:string = ObjectSchemaUtils.resolveURI( id, schema );\n\n\t\tif( ! URI.isBaseOf( this._context.baseURI, iri ) )\n\t\t\treturn Registry.PROTOTYPE._getLocalID.call( this, id );\n\n\t\treturn URI.getRelativeURI( iri, this._context.baseURI );\n\t}\n\n\t_register<T extends object>( base:T & { id:string } ):T & M {\n\t\tconst pointer:T & Pointer = Registry.PROTOTYPE._register.call( this, base );\n\t\tconst resource:T & M = this._model.decorate( pointer );\n\n\t\tif( ! this._context ) return resource;\n\n\t\tconst schema:DigestedObjectSchema = this._context.getObjectSchema();\n\t\tresource.id = ObjectSchemaUtils\n\t\t\t.resolveURI( resource.id, schema, { base: true } );\n\n\t\treturn resource;\n\t}\n\n\n\tgetGeneralSchema():DigestedObjectSchema {\n\t\tif( ! this._context ) return new DigestedObjectSchema();\n\t\treturn this._context.getObjectSchema();\n\t}\n\n\thasSchemaFor( object:object, path?:string ):boolean {\n\t\treturn ! path;\n\t}\n\n\tgetSchemaFor( object:object ):DigestedObjectSchema {\n\t\tconst schema:DigestedObjectSchema = \"types\" in object ?\n\t\t\tthis._getSchemaForResource( object ) :\n\t\t\tthis._getSchemaForNode( object );\n\n\t\tif( ! PersistedResource.isDecorated( object ) || ! object.isPartial() )\n\t\t\treturn schema;\n\n\t\treturn ObjectSchemaDigester\n\t\t\t._combineSchemas( [\n\t\t\t\tschema,\n\t\t\t\tobject._partialMetadata.schema,\n\t\t\t] );\n\t}\n\n\tprotected _getSchemaForNode( node:{ \"@id\"?:string, \"@type\"?:string[] } ):DigestedObjectSchema {\n\t\tconst types:string[] = RDFNode.getTypes( node as any );\n\t\treturn this._getSchema( types, node[ \"@id\" ] );\n\t}\n\n\tprotected _getSchemaForResource( resource:{ id?:string, types?:string[] } ):DigestedObjectSchema {\n\t\tconst types:string[] = resource.types || [];\n\t\treturn this._getSchema( types, resource.id );\n\t}\n\n\tprotected _getSchema( objectTypes:string[], objectID?:string ):DigestedObjectSchema {\n\t\tif( ! this._context ) return new DigestedObjectSchema();\n\n\t\tif( objectID !== void 0 && ! URI.hasFragment( objectID ) && ! URI.isBNodeID( objectID ) && objectTypes.indexOf( TransientDocument.TYPE ) === - 1 )\n\t\t\tobjectTypes = objectTypes.concat( TransientDocument.TYPE );\n\n\t\tconst objectSchemas:DigestedObjectSchema[] = objectTypes\n\t\t\t.filter( type => this._context.hasObjectSchema( type ) )\n\t\t\t.map( type => this._context.getObjectSchema( type ) )\n\t\t;\n\n\t\treturn ObjectSchemaDigester\n\t\t\t._combineSchemas( [\n\t\t\t\tthis._context.getObjectSchema(),\n\t\t\t\t...objectSchemas,\n\t\t\t] );\n\t}\n\n\n\t_parseFreeNodes( freeNodes:RDFNode[] ):FreeResources {\n\t\tconst freeResourcesDocument:FreeResources = FreeResources\n\t\t\t.createFrom( { _registry: this, _context: this._context } );\n\n\t\tconst resources:TransientResource[] = freeNodes\n\t\t\t.map( node => freeResourcesDocument._register( { id: node[ \"@id\" ] } ) );\n\n\t\tthis._compactRDFNodes( freeNodes, resources, freeResourcesDocument );\n\n\t\treturn freeResourcesDocument;\n\t}\n\n\tprotected _compactRDFNodes( nodes:RDFNode[], targets:object[], library:PointerLibrary ):void {\n\t\tfor( let i:number = 0; i < nodes.length; i ++ ) {\n\t\t\tconst node:RDFNode = nodes[ i ];\n\t\t\tconst target:object = targets[ i ] || {};\n\t\t\tthis._compactRDFNode( node, target, library );\n\t\t}\n\t}\n\n\tprotected _compactRDFNode( node:RDFNode, target:object, library:PointerLibrary ):void {\n\t\tconst digestedSchema:DigestedObjectSchema = this.getSchemaFor( node );\n\t\tthis.jsonldConverter.compact( node, target, digestedSchema, library );\n\t}\n}\n"]}