{"version":3,"sources":["Registry/Registry.ts"],"names":[],"mappings":"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","file":"Registry.js","sourcesContent":["import { ModelDecorator } from \"../core\";\nimport {\n\tIDAlreadyInUseError,\n\tIllegalArgumentError,\n} from \"../Errors\";\nimport {\n\tPointer,\n\tPointerLibrary,\n\tPointerValidator,\n} from \"../Pointer\";\nimport {\n\tisObject,\n\tPickSelfProps\n} from \"../Utils\";\n\n\nexport interface Registry<M extends Pointer> extends PointerLibrary, PointerValidator {\n\t_registry:Registry<any> | undefined;\n\n\treadonly _resourcesMap:Map<string, M>;\n\n\n\tinScope( idOrPointer:string | Pointer ):boolean;\n\tinScope( idOrPointer:string | Pointer, local:true ):boolean;\n\n\n\thasPointer( id:string ):boolean;\n\thasPointer( id:string, local:true ):boolean;\n\n\tgetPointer( id:string ):Pointer;\n\tgetPointer( id:string, local:true ):M;\n\n\tgetPointers():Pointer[];\n\tgetPointers( local:true ):M[];\n\n\tremovePointer( idOrPointer:string | Pointer ):boolean;\n\tremovePointer( idOrPointer:string | Pointer, local:true ):boolean;\n\n\n\t_getLocalID( id:string ):string;\n\n\t_register<T extends object>( base:T & { id:string } ):T & M;\n}\n\n\nconst PROTOTYPE:PickSelfProps<Registry<Pointer>, {}> = {\n\tget _resourcesMap():Map<string, Pointer> { return new Map(); },\n\n\t_registry: void 0,\n\n\n\tinScope( this:Registry<Pointer>, idOrPointer:string | Pointer, local?:true ):boolean {\n\t\ttry {\n\t\t\tconst id:string = Pointer.getID( idOrPointer );\n\t\t\tthis._getLocalID( id );\n\t\t\treturn true;\n\t\t} catch {\n\t\t\tif( local === true || ! this._registry ) return false;\n\t\t\treturn this._registry.inScope( idOrPointer );\n\t\t}\n\t},\n\n\n\thasPointer( this:Registry<Pointer>, id:string, local?:true ):boolean {\n\t\tif( this.inScope( id, true ) ) {\n\t\t\tconst localID:string = this._getLocalID( id );\n\t\t\tif( this._resourcesMap.has( localID ) ) return true;\n\t\t}\n\n\t\tif( local === true || ! this._registry ) return false;\n\t\treturn this._registry.hasPointer( id );\n\t},\n\n\tgetPointer( this:Registry<Pointer>, id:string, local?:true ):Pointer {\n\t\tif( ! this.inScope( id, true ) ) {\n\t\t\tif( local === true || ! this._registry ) throw new IllegalArgumentError( `\"${ id }\" is out of scope.` );\n\t\t\treturn this._registry.getPointer( id );\n\t\t}\n\n\t\tconst localID:string = this._getLocalID( id );\n\t\tif( this._resourcesMap.has( localID ) ) return this._resourcesMap.get( localID );\n\n\t\tif( local !== true && this._registry && this._registry.hasPointer( id ) )\n\t\t\treturn this._registry.getPointer( id );\n\n\t\treturn this._register( { id } );\n\t},\n\n\tgetPointers( this:Registry<Pointer>, local?:true ):Pointer[] {\n\t\tconst pointers:Pointer[] = Array.from( this._resourcesMap.values() );\n\t\tif( local === true || ! this._registry ) return pointers;\n\n\t\treturn [\n\t\t\t...this._registry.getPointers(),\n\t\t\t...pointers,\n\t\t];\n\t},\n\n\tremovePointer( this:Registry<Pointer>, idOrPointer:string | Pointer, local?:true ):boolean {\n\t\tconst id:string = Pointer.getID( idOrPointer );\n\n\t\tif( this.inScope( id, true ) ) {\n\t\t\tconst localID:string = this._getLocalID( id );\n\t\t\tif( this._resourcesMap.delete( localID ) ) return true;\n\t\t}\n\n\t\tif( local === true || ! this._registry ) return false;\n\t\treturn this._registry.removePointer( idOrPointer );\n\t},\n\n\n\t_getLocalID( this:Registry<Pointer>, id:string ):string {\n\t\tthrow new IllegalArgumentError( `\"${ id }\" is out of scope.` );\n\t},\n\n\t_register<T extends object>( this:Registry<Pointer>, base:T & { id:string } ):T & Pointer {\n\t\tif( ! base.id ) throw new IllegalArgumentError( \"The resource ID is required.\" );\n\n\t\tconst localID:string = this._getLocalID( base.id );\n\t\tif( this._resourcesMap.has( localID ) ) throw new IDAlreadyInUseError( `\"${ base.id }\" is already being used.` );\n\n\t\tconst resource:T & Pointer = Pointer.decorate( base );\n\t\tresource._registry = this;\n\n\t\tthis._resourcesMap.set( localID, resource );\n\t\treturn resource;\n\t},\n};\n\n\nexport interface RegistryFactory {\n\tPROTOTYPE:PickSelfProps<Registry<Pointer>, {}>;\n\n\tisDecorated( object:object ):object is Registry<any>;\n\n\tdecorate<T extends object>( object:T ):T & Registry<any>;\n}\n\nexport const Registry:RegistryFactory = {\n\tPROTOTYPE,\n\n\tisDecorated( object:object ):object is Registry<any> {\n\t\treturn isObject( object )\n\t\t\t&& ModelDecorator\n\t\t\t\t.hasPropertiesFrom( PROTOTYPE, object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends object>( object:T ):T & Registry<any> {\n\t\tif( Registry.isDecorated( object ) ) return object;\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( PROTOTYPE, object );\n\t},\n};\n"]}