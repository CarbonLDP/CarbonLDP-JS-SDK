{"version":3,"sources":["Registry/DocumentsRegistry.ts"],"names":[],"mappings":"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","file":"DocumentsRegistry.js","sourcesContent":["import { CarbonLDP } from \"../CarbonLDP\";\nimport {\n\tDocument,\n\tTransientDocument,\n} from \"../Document\";\nimport { IllegalArgumentError } from \"../Errors\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { Response } from \"../HTTP\";\nimport {\n\tHTTPError,\n\tstatusCodeMap,\n\tUnknownError\n} from \"../HTTP/Errors\";\nimport { JSONLDParser } from \"../JSONLD\";\nimport { ErrorResponse } from \"../LDP\";\nimport {\n\tDigestedObjectSchema,\n\tObjectSchemaDigester\n} from \"../ObjectSchema\";\nimport { Pointer } from \"../Pointer\";\nimport {\n\tRDFNode,\n\tURI\n} from \"../RDF\";\nimport { FreeResources } from \"../FreeResources\";\nimport { RegistryService } from \"./RegistryService\";\n\n\nexport class DocumentsRegistry extends RegistryService<Document, CarbonLDP> {\n\n\treadonly _context:CarbonLDP | undefined;\n\n\tconstructor( context?:CarbonLDP ) {\n\t\tsuper( Document, context );\n\t}\n\n\n\tregister( id:string ):Document {\n\t\treturn this._register( { id } );\n\t}\n\n\t_register<T extends object>( base:T & { id:string } ):T & Document {\n\t\tconst document:T & Document = super._register( base );\n\t\tdocument._context = this._context;\n\n\t\treturn document;\n\t}\n\n\n\t_getLocalID( id:string ):string | null {\n\t\tif( URI.isBNodeID( id ) || URI.hasFragment( id ) ) return null;\n\n\t\treturn super._getLocalID( id );\n\t}\n\n\n\t_requestURLFor( pointer:Pointer, uri?:string ):string {\n\t\turi = uri ? URI.resolve( pointer.id, uri ) : pointer.id;\n\n\t\tif( URI.isBNodeID( uri ) )\n\t\t\tthrow new IllegalArgumentError( `\"${ uri }\" (Blank Node) can't be fetched directly.` );\n\t\tif( URI.hasFragment( uri ) )\n\t\t\tthrow new IllegalArgumentError( `\"${ uri }\" (Named Fragment) can't be fetched directly.` );\n\n\t\tconst localIRI:string = this._getLocalID( uri );\n\t\tif( localIRI === null )\n\t\t\tthrow new IllegalArgumentError( `\"${ uri }\" is outside ${ this._context ? `\"${ this._context.baseURI }\" ` : \"\" }scope.` );\n\n\t\tif( this._context )\n\t\t\treturn URI.resolve( this._context.baseURI, localIRI );\n\n\t\tif( URI.isRelative( uri ) )\n\t\t\tthrow new IllegalArgumentError( `\"${ uri }\" SÃ­` );\n\n\t\treturn localIRI;\n\t}\n\n\n\t_parseErrorResponse<T extends object>( response:Response | Error | null ):Promise<never> {\n\t\tif( ! response || response instanceof Error ) return Promise.reject( response );\n\n\t\tif( ! (response.status >= 400 && response.status < 600 && statusCodeMap.has( response.status )) )\n\t\t\treturn Promise.reject( new UnknownError( response.data, response ) );\n\n\t\tconst error:HTTPError = new (statusCodeMap.get( response.status ))( response.data, response );\n\t\tif( ! response.data ) return Promise.reject( error );\n\n\t\treturn new JSONLDParser()\n\t\t\t.parse( response.data )\n\t\t\t.then( ( freeNodes:RDFNode[] ) => {\n\t\t\t\tconst freeResources:FreeResources = this._parseFreeNodes( freeNodes );\n\t\t\t\tconst errorResponses:ErrorResponse[] = freeResources\n\t\t\t\t\t.getPointers()\n\t\t\t\t\t.filter( ErrorResponse.is );\n\t\t\t\tif( errorResponses.length === 0 ) return Promise.reject( new IllegalArgumentError( \"The response string does not contains a c:ErrorResponse.\" ) );\n\t\t\t\tif( errorResponses.length > 1 ) return Promise.reject( new IllegalArgumentError( \"The response string contains multiple c:ErrorResponse.\" ) );\n\n\t\t\t\tObject.assign( error, errorResponses[ 0 ] );\n\t\t\t\terror.message = ErrorResponse.getMessage( error );\n\t\t\t\treturn Promise.reject( error );\n\t\t\t}, () => {\n\t\t\t\treturn Promise.reject( error );\n\t\t\t} );\n\t}\n\n}\n"]}