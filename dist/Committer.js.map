{"version":3,"sources":["Committer.ts"],"names":[],"mappings":";AAAA,uBAAmB,UAAU,CAAC,CAAA;AAS9B,IAAI,MAAM,GAAU,IAAI,gBAAM,EAAE,CAAC;AAEjC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAW,GAAG,CAAE,CAAC,IAAI,CACxC,UAAE,EAAkF;QAAhF,gBAAQ,EAAE,gBAAQ;IACrB,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;AACzB,CAAC,CACD,CAAC","file":"Committer.js","sourcesContent":["import Carbon from \"./Carbon\";\nimport * as PersistedDocument from \"./PersistedDocument\";\nimport * as PersistedContainer from \"./LDP/PersistedContainer\";\nimport * as HTTP from \"./HTTP\";\n\ninterface Project {\n\tstringProperty:string;\n}\n\nlet carbon:Carbon = new Carbon();\n\ncarbon.documents.get<Project>( \"/\" ).then(\n\t( [ document, resource ]:[ Project & PersistedContainer.Class, HTTP.Response.Class ] ) => {\n\t\tconsole.log( document );\n\t}\n);\n\ninterface Committer<E> {\n\tcommit( object:E ):Promise<any>;\n}\n\nexport default Committer;\n"],"sourceRoot":"/source/"}