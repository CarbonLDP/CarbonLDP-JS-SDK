{"version":3,"file":"Carbon.min.js","sources":["bower_components/almond/almond.js","src/Carbon.js","src/Utils.js","src/namespaces/XSD.js","src/rdf/Literal.js","src/namespaces/RDF.js","src/rdf/RDFNode.js","src/rdf/Resource.js","src/rdf/URI.js","src/rdf/FragmentResource.js","src/rdf/DocumentResource.js","src/rdf/Value.js","src/rdf/PersistedDocumentResource.js","src/rdf/PersistedFragmentResource.js","src/rdf/PropertyDescription.js","src/rdf/RDFDocument.js","src/RDF.js","src/Apps.js","src/HTTP.js","src/REST.js","src/Documents.js","src/Resources.js","src/configuration.js"],"names":["this","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","nodeIdCompat","jsSuffixRegExp","test","replace","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","hasFunction","object","functionName","hasProperty","property","isNull","isArray","toString","isString","string","String","isBoolean","boolean","isNumber","number","Number","isInteger","isDouble","isDate","date","Date","isObject","isFunction","parseBoolean","toLowerCase","extend","target","_i","toMerge","S","startsWith","lastIndexOf","endsWith","contains","namespace","DataType","Utils","XSD","Factory","from","type","dateTime","toISOString","integer","JSON","stringify","literal","@value","parse","valueString","time","duration","gDay","gMonth","gMonthDay","gYear","gYearMonth","decimal","negativeInteger","nonNegativeInteger","nonPositiveInteger","positiveInteger","unsignedLong","unsignedInt","unsignedShort","unsignedByte","parseFloat","is","Util","areEqual","Predicate","node1","node2","Literal","RDF","RDFNode","hasType","values","propertyURI","getProperty","getProperties","getPropertyValue","propertyObject","getPropertyURI","getPropertyValues","propertyArray","tieArray","getPropertyURIs","uris","addProperty","propertyValue","@id","callbacks","_propertyAddedCallbacks","length_1","setProperty","deleteProperty","_propertyDeletedCallbacks","length_2","resource","array","items","Array","create","objectOrObjects","objects","resources","defineProperties","writable","enumerable","get","set","injectDescriptions","resourceOrResources","descriptions","descriptionLength","getter","setter","description","multi","genericMultipleGetter","genericGetter","literalsGetter","literalGetter","urisGetter","uriGetter","defineProperty","hasFragment","isAbsolute","isRelative","getDocumentURI","getFragment","resolve","parentURI","childURI","finalURI","substr","removeProtocol","Resource","URI","slug","fragment","fragments","injectBehaviour","FragmentResource","getFragmentSlug","fragmentURI","fragmentSlug","documentResource","_fragments","getFragments","createFragment","deleteFragment","addFragments","configurable","length_3","value1","value2","DocumentResource","Value","modificationsDeleteAllValues","deleteModifications","SpecialValue","ALL_VALUES","getModifications","modifications","ModificationType","ADD","_modifications","add","SET","DELETE","addModification","has","removeModification","registerAddModification","_dirty","registerDeleteModification","clean","Modifications","isDirty","commit","_committer","destroy","Map","parent","persisted","_parent","_clean","PropertyDescription","@graph","getResources","document","getDocumentResources","documentResources","getFragmentResources","documentURIToMatch","fragmentResources","documentURI","PersistedDocumentResource","PersistedFragmentResource","PropertyDescription_1","RDFDocument","Apps","containerURI","Promise","reject","StatusCode","HeaderUtil","parseHeaders","headersString","headers","headerStrings","headerString","trim","header","Header","existingHeader","valueOrValues","setValues","valuesString","valueStrings","HeaderValue","mainValue","secondaryKey","secondaryValue","mainKey","setValue","setMain","setSecondary","cleanString","secondary","toClean","result","Response","request","status","data","responseText","setHeaders","getAllResponseHeaders","HTTP","sendRequest","method","url","bodyOrOptions","options","defaultRequestOptions","body","XMLHttpRequest","open","Method","basic","addBasicAuthHeader","withCredentials","sendCredentialsOnCORS","timeout","onload","onLoad","onerror","onError","send","names","getAllKeys","setRequestHeader","credentials","authorization","atob","username","password","response","OPTIONS","head","HEAD","GET","post","POST","put","PUT","patch","PATCH","doDelete","jsonld","REST","input","error","expand","expanded","Documents","then","parsedObject","processedResponse","expandedResult","RDF_1","Resources","documents","_this","documentResourceNodes","documentResourceNode","fragmentNodes","domain","appsContainer","useSSL","Apps_1","Documents_1","Resources_1","configuration","Carbon","Definitions","relativeURI"],"mappings":"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","sourcesContent":["/**\n * @license almond 0.3.0 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"bower_components/almond/almond.js\", function(){});\n\n","define('Carbon/Carbon',[\"require\", \"exports\", './Apps', './Documents', './RDF', './Resources', './REST', './configuration'], function (require, exports, Apps_1, Documents_1, RDF, Resources_1, REST, configuration) {\n    exports.RDF = RDF;\n    exports.REST = REST;\n    var Carbon = (function () {\n        function Carbon(configuration) {\n            this.Definitions = new Map();\n            this.Apps = new Apps_1.default(this, configuration.appsContainer);\n            this.Documents = new Documents_1.default(this);\n            this.Resources = new Resources_1.default(this.Documents);\n        }\n        Carbon.prototype.resolve = function (relativeURI) {\n            var finalURI = this.configuration.useSSL ? 'https://' : 'http://';\n            finalURI += this.configuration.domain;\n            return RDF.URI.Util.resolve(finalURI, relativeURI);\n        };\n        return Carbon;\n    })();\n    exports.Carbon = Carbon;\n    exports.default = new Carbon(configuration);\n});\n//@formatter:on \n//# sourceMappingURL=Carbon.js.map;\ndefine('Carbon', ['Carbon/Carbon'], function (main) { return main; });\n\n","define('Carbon/Utils',[\"require\", \"exports\"], function (require, exports) {\n    function hasFunction(object, functionName) {\n        return typeof object[functionName] === 'function';\n    }\n    exports.hasFunction = hasFunction;\n    function hasProperty(object, property) {\n        if (!object)\n            return false;\n        return 'undefined' !== typeof object[property];\n    }\n    exports.hasProperty = hasProperty;\n    function isNull(value) {\n        return value === null;\n    }\n    exports.isNull = isNull;\n    function isArray(object) {\n        return Object.prototype.toString.call(object) === '[object Array]';\n    }\n    exports.isArray = isArray;\n    function isString(string) {\n        return typeof string == 'string' || string instanceof String;\n    }\n    exports.isString = isString;\n    function isBoolean(boolean) {\n        return typeof boolean == 'boolean';\n    }\n    exports.isBoolean = isBoolean;\n    function isNumber(number) {\n        return typeof number == 'number' || number instanceof Number;\n    }\n    exports.isNumber = isNumber;\n    function isInteger(number) {\n        if (!isNumber(number))\n            return false;\n        return number % 1 == 0;\n    }\n    exports.isInteger = isInteger;\n    function isDouble(number) {\n        if (!isNumber(number))\n            return false;\n        return number % 1 != 0;\n    }\n    exports.isDouble = isDouble;\n    function isDate(date) {\n        return typeof date == 'date' || date instanceof Date;\n    }\n    exports.isDate = isDate;\n    function isObject(object) {\n        return typeof object === 'object';\n    }\n    exports.isObject = isObject;\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n    exports.isFunction = isFunction;\n    function parseBoolean(value) {\n        if (!isString(value))\n            return false;\n        switch (value.toLowerCase()) {\n            case \"true\":\n            case \"yes\":\n            case \"y\":\n            case \"1\":\n                return true;\n            case \"false\":\n            case \"no\":\n            case \"n\":\n            case \"0\":\n            default:\n                return false;\n        }\n    }\n    exports.parseBoolean = parseBoolean;\n    function extend() {\n        var target = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            target[_i - 0] = arguments[_i];\n        }\n        if (arguments.length <= 1)\n            return;\n        for (var i = 1, length = arguments.length; i < length; i++) {\n            var toMerge = arguments[i];\n            if (isObject(toMerge)) {\n                for (var name in toMerge) {\n                    if (toMerge.hasOwnProperty(name)) {\n                        target[name] = toMerge[name];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    exports.extend = extend;\n    var S = (function () {\n        function S() {\n        }\n        S.startsWith = function (string, substring) {\n            return string.lastIndexOf(substring, 0) === 0;\n        };\n        S.endsWith = function (string, substring) {\n            return string.indexOf(substring, string.length - substring.length) !== -1;\n        };\n        S.contains = function (string, substring) {\n            return string.indexOf(substring) !== -1;\n        };\n        return S;\n    })();\n    exports.S = S;\n    ;\n});\n//# sourceMappingURL=Utils.js.map;\n","define('Carbon/namespaces/XSD',[\"require\", \"exports\"], function (require, exports) {\n    exports.namespace = \"http://www.w3.org/2001/XMLSchema#\";\n    (function (DataType) {\n        DataType[DataType[\"date\"] = (exports.namespace + \"date\")] = \"date\";\n        DataType[DataType[\"dateTime\"] = (exports.namespace + \"dateTime\")] = \"dateTime\";\n        DataType[DataType[\"duration\"] = (exports.namespace + \"duration\")] = \"duration\";\n        DataType[DataType[\"gDay\"] = (exports.namespace + \"gDay\")] = \"gDay\";\n        DataType[DataType[\"gMonth\"] = (exports.namespace + \"gMonth\")] = \"gMonth\";\n        DataType[DataType[\"gMonthDay\"] = (exports.namespace + \"gMonthDay\")] = \"gMonthDay\";\n        DataType[DataType[\"gYear\"] = (exports.namespace + \"gYear\")] = \"gYear\";\n        DataType[DataType[\"gYearMonth\"] = (exports.namespace + \"gYearMonth\")] = \"gYearMonth\";\n        DataType[DataType[\"time\"] = (exports.namespace + \"time\")] = \"time\";\n        DataType[DataType[\"byte\"] = (exports.namespace + \"byte\")] = \"byte\";\n        DataType[DataType[\"decimal\"] = (exports.namespace + \"decimal\")] = \"decimal\";\n        DataType[DataType[\"int\"] = (exports.namespace + \"int\")] = \"int\";\n        DataType[DataType[\"integer\"] = (exports.namespace + \"integer\")] = \"integer\";\n        DataType[DataType[\"long\"] = (exports.namespace + \"long\")] = \"long\";\n        DataType[DataType[\"negativeInteger\"] = (exports.namespace + \"negativeInteger\")] = \"negativeInteger\";\n        DataType[DataType[\"nonNegativeInteger\"] = (exports.namespace + \"nonNegativeInteger\")] = \"nonNegativeInteger\";\n        DataType[DataType[\"nonPositiveInteger\"] = (exports.namespace + \"nonPositiveInteger\")] = \"nonPositiveInteger\";\n        DataType[DataType[\"positiveInteger\"] = (exports.namespace + \"positiveInteger\")] = \"positiveInteger\";\n        DataType[DataType[\"short\"] = (exports.namespace + \"short\")] = \"short\";\n        DataType[DataType[\"unsignedLong\"] = (exports.namespace + \"unsignedLong\")] = \"unsignedLong\";\n        DataType[DataType[\"unsignedInt\"] = (exports.namespace + \"unsignedInt\")] = \"unsignedInt\";\n        DataType[DataType[\"unsignedShort\"] = (exports.namespace + \"unsignedShort\")] = \"unsignedShort\";\n        DataType[DataType[\"unsignedByte\"] = (exports.namespace + \"unsignedByte\")] = \"unsignedByte\";\n        DataType[DataType[\"double\"] = (exports.namespace + \"double\")] = \"double\";\n        DataType[DataType[\"float\"] = (exports.namespace + \"float\")] = \"float\";\n        DataType[DataType[\"boolean\"] = (exports.namespace + \"boolean\")] = \"boolean\";\n        DataType[DataType[\"string\"] = (exports.namespace + \"string\")] = \"string\";\n        DataType[DataType[\"object\"] = (exports.namespace + \"object\")] = \"object\";\n    })(exports.DataType || (exports.DataType = {}));\n    var DataType = exports.DataType;\n});\n//# sourceMappingURL=XSD.js.map;\n","define('Carbon/rdf/Literal',[\"require\", \"exports\", '../Utils', '../namespaces/XSD'], function (require, exports, Utils, XSD) {\n    var Factory = (function () {\n        function Factory() {\n        }\n        Factory.from = function (value) {\n            if (Utils.isNull(value))\n                throw new Error(\"IllegalArgument: null cannot be converted into a Literal\");\n            var type;\n            switch (true) {\n                case Utils.isDate(value):\n                    type = XSD.DataType.dateTime;\n                    value = value.toISOString();\n                    break;\n                case Utils.isNumber(value):\n                    if (Utils.isInteger(value))\n                        type = XSD.DataType.integer;\n                    else\n                        type = XSD.DataType.double;\n                    break;\n                case Utils.isString(value):\n                    type = XSD.DataType.string;\n                    break;\n                case Utils.isBoolean(value):\n                    type = XSD.DataType.boolean;\n                    break;\n                default:\n                    // Treat it as an unknown object\n                    type = XSD.DataType.object;\n                    value = JSON.stringify(value);\n                    break;\n            }\n            var literal = { '@value': value };\n            if (type)\n                literal['@type'] = type;\n            return literal;\n        };\n        Factory.parse = function (literal) {\n            if (!literal)\n                return null;\n            if (!Utils.hasProperty(literal, '@value'))\n                return null;\n            if (!Utils.hasProperty(literal, '@type'))\n                return literal['@value'];\n            var type = literal['@type'];\n            // The DataType isn't supported\n            if (!Utils.hasProperty(XSD.DataType, type))\n                return literal['@value'];\n            var valueString = literal['@value'];\n            var value;\n            switch (type) {\n                // Dates\n                case XSD.DataType.date:\n                case XSD.DataType.dateTime:\n                case XSD.DataType.time:\n                    value = new Date(valueString);\n                    break;\n                case XSD.DataType.duration:\n                    // TODO: Support duration values (create a class or something...)\n                    break;\n                case XSD.DataType.gDay:\n                case XSD.DataType.gMonth:\n                case XSD.DataType.gMonthDay:\n                case XSD.DataType.gYear:\n                case XSD.DataType.gYearMonth:\n                    // TODO: Decide. Should we return it as a Date?\n                    break;\n                // Numbers\n                case XSD.DataType.byte:\n                case XSD.DataType.decimal:\n                case XSD.DataType.int:\n                case XSD.DataType.integer:\n                case XSD.DataType.long:\n                case XSD.DataType.negativeInteger:\n                case XSD.DataType.nonNegativeInteger:\n                case XSD.DataType.nonPositiveInteger:\n                case XSD.DataType.positiveInteger:\n                case XSD.DataType.short:\n                case XSD.DataType.unsignedLong:\n                case XSD.DataType.unsignedInt:\n                case XSD.DataType.unsignedShort:\n                case XSD.DataType.unsignedByte:\n                case XSD.DataType.double:\n                case XSD.DataType.float:\n                    value = parseFloat(valueString);\n                    break;\n                // Misc\n                case XSD.DataType.boolean:\n                    value = Utils.parseBoolean(valueString);\n                    break;\n                case XSD.DataType.string:\n                    value = valueString;\n                    break;\n                case XSD.DataType.object:\n                    value = JSON.parse(valueString);\n                    break;\n                default:\n                    break;\n            }\n            return value;\n        };\n        Factory.is = function (value) {\n            if (!value)\n                return false;\n            if (!Utils.isObject(value))\n                return false;\n            return Utils.hasProperty(value, '@value');\n        };\n        return Factory;\n    })();\n    exports.Factory = Factory;\n    var Util = (function () {\n        function Util() {\n        }\n        Util.areEqual = function (literal1, literal2) {\n            // TODO: Implement\n            return false;\n        };\n        return Util;\n    })();\n    exports.Util = Util;\n});\n//# sourceMappingURL=Literal.js.map;\n","define('Carbon/namespaces/RDF',[\"require\", \"exports\"], function (require, exports) {\n    exports.namespace = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n    (function (Predicate) {\n        Predicate[Predicate[\"type\"] = (exports.namespace + \"type\")] = \"type\";\n    })(exports.Predicate || (exports.Predicate = {}));\n    var Predicate = exports.Predicate;\n});\n//# sourceMappingURL=RDF.js.map;\n","define('Carbon/rdf/RDFNode',[\"require\", \"exports\", '../Utils'], function (require, exports, Utils) {\n    var Factory = (function () {\n        function Factory() {\n        }\n        Factory.is = function (value) {\n            //@formatter:off\n            return ((!Utils.isNull(value)) &&\n                Utils.isObject(value) &&\n                Utils.hasProperty(value, '@id'));\n            //@formatter:on\n        };\n        return Factory;\n    })();\n    exports.Factory = Factory;\n    var Util = (function () {\n        function Util() {\n        }\n        Util.areEqual = function (node1, node2) {\n            return node1['@id'] === node2['@id'];\n        };\n        return Util;\n    })();\n    exports.Util = Util;\n});\n//# sourceMappingURL=RDFNode.js.map;\n","define('Carbon/rdf/Resource',[\"require\", \"exports\", './Literal', '../Utils', '../namespaces/RDF', './RDFNode'], function (require, exports, Literal, Utils, RDF, RDFNode) {\n    function hasType(type) {\n        var property = RDF.Predicate.type;\n        if (!this.hasOwnProperty(property))\n            return false;\n        var values = Utils.isArray(this[property]) ? this[property] : [this[property]];\n        return (function () {\n            for (var i = 0, length = values.length; i < length; i++) {\n                var value = values[i];\n                if (value['@id'] == type)\n                    return true;\n            }\n            return false;\n        })();\n    }\n    function hasProperty(propertyURI) {\n        return Utils.hasProperty(this, propertyURI);\n    }\n    function getProperty(propertyURI) {\n        var values = this.getProperties(propertyURI);\n        return values[0];\n    }\n    function getPropertyValue(propertyURI) {\n        var propertyObject = this.getProperty(propertyURI);\n        if (Utils.isNull(propertyObject))\n            return null;\n        if (!Literal.Factory.is(propertyObject))\n            return null;\n        return Literal.Factory.parse(propertyObject);\n    }\n    function getPropertyURI(propertyURI) {\n        var value = this.getProperty(propertyURI);\n        if (Utils.isNull(value))\n            return null;\n        if (!Utils.hasProperty(value, '@id'))\n            return null;\n        return value['@id'];\n    }\n    function getProperties(propertyURI) {\n        if (!this.hasProperty(propertyURI))\n            return [];\n        return Utils.isArray(this[propertyURI]) ? this[propertyURI] : [this[propertyURI]];\n    }\n    function getPropertyValues(propertyURI) {\n        var values = [];\n        if (this.hasProperty(propertyURI)) {\n            var propertyArray = this.getProperties(propertyURI);\n            for (var i = 0, length = propertyArray.length; i < length; i++) {\n                var value = propertyArray[i];\n                if (Literal.Factory.is(value))\n                    values.push(Literal.Factory.parse(value));\n            }\n        }\n        values = tieArray(this, propertyURI, values);\n        return values;\n    }\n    function getPropertyURIs(propertyURI) {\n        var uris = [];\n        if (this.hasProperty(propertyURI)) {\n            var values = this.getProperties(propertyURI);\n            for (var i = 0, length = values.length; i < length; i++) {\n                var value = values[i];\n                if (Utils.hasProperty(value, '@id'))\n                    uris.push(value['@id']);\n            }\n        }\n        uris = tieArray(this, propertyURI, uris);\n        return uris;\n    }\n    function addProperty(propertyURI, value) {\n        var propertyArray = this.getProperties(propertyURI);\n        var propertyValue;\n        if (RDFNode.Factory.is(value)) {\n            propertyValue = {\n                '@id': value['@id']\n            };\n        }\n        else\n            propertyValue = Literal.Factory.from(value);\n        var callbacks = this._propertyAddedCallbacks;\n        for (var i = 0, length_1 = callbacks.length; i < length_1; i++) {\n            var callback = callbacks[i];\n            callback.call(this, propertyURI, propertyValue);\n        }\n        propertyArray.push(propertyValue);\n        this[propertyURI] = propertyArray;\n    }\n    function setProperty(propertyURI, value) {\n        this.deleteProperty(propertyURI);\n        if (Utils.isNull(value))\n            return;\n        this.addProperty(propertyURI, value);\n    }\n    function deleteProperty(propertyURI) {\n        var callbacks = this._propertyDeletedCallbacks;\n        for (var i = 0, length_2 = callbacks.length; i < length_2; i++) {\n            var callback = callbacks[i];\n            callback.call(this, propertyURI);\n        }\n        delete this[propertyURI];\n    }\n    function tieArray(resource, property, array) {\n        array.push = (function () {\n            return function () {\n                var items = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    items[_i - 0] = arguments[_i];\n                }\n                for (var i = 0, length = items.length; i < length; i++) {\n                    resource.addProperty(property, items[i]);\n                }\n                return Array.prototype.push.call(array, items);\n            };\n        }());\n        // TODO: concat\n        // TODO: join\n        // TODO: pop\n        // TODO: reverse\n        // TODO: shift\n        // TODO: slice\n        // TODO: sort\n        // TODO: splice\n        // TODO: unshift\n        return array;\n    }\n    var Factory = (function () {\n        function Factory() {\n        }\n        Factory.is = function (value) {\n            return (RDFNode.Factory.is(value) &&\n                Utils.hasFunction(value, '_propertyAddedCallbacks') &&\n                Utils.hasFunction(value, '_propertyDeletedCallbacks') &&\n                Utils.hasProperty(value, 'uri') &&\n                Utils.hasFunction(value, 'hasType') &&\n                Utils.hasFunction(value, 'hasProperty') &&\n                Utils.hasFunction(value, 'getProperty') &&\n                Utils.hasFunction(value, 'getPropertyValue') &&\n                Utils.hasFunction(value, 'getPropertyURI') &&\n                Utils.hasFunction(value, 'getProperties') &&\n                Utils.hasFunction(value, 'getPropertyValues') &&\n                Utils.hasFunction(value, 'getPropertyURIs') &&\n                Utils.hasFunction(value, 'addProperty') &&\n                Utils.hasFunction(value, 'setProperty') &&\n                Utils.hasFunction(value, 'deleteProperty'));\n        };\n        Factory.create = function () {\n            var resource = {};\n            return Factory.from(resource);\n        };\n        Factory.from = function (objectOrObjects) {\n            var objects = Utils.isArray(objectOrObjects) ? objectOrObjects : [objectOrObjects];\n            var resources = [];\n            for (var i = 0, length = objects.length; i < length; i++) {\n                var resource = objects[i];\n                if (!Factory.is(resource)) {\n                    Object.defineProperties(resource, {\n                        '_propertyAddedCallbacks': {\n                            writable: false,\n                            enumerable: false,\n                            value: []\n                        },\n                        '_propertyDeletedCallbacks': {\n                            writable: false,\n                            enumerable: false,\n                            value: []\n                        },\n                        'uri': {\n                            get: function () {\n                                return this['@id'];\n                            },\n                            set: function (value) {\n                                this['@id'] = value;\n                            },\n                            enumerable: false\n                        }\n                    });\n                    resource.hasType = hasType;\n                    resource.hasProperty = hasProperty;\n                    resource.getProperty = getProperty;\n                    resource.getPropertyValue = getPropertyValue;\n                    resource.getPropertyURI = getPropertyURI;\n                    resource.getProperties = getProperties;\n                    resource.getPropertyValues = getPropertyValues;\n                    resource.getPropertyURIs = getPropertyURIs;\n                    resource.addProperty = addProperty;\n                    resource.setProperty = setProperty;\n                    resource.deleteProperty = deleteProperty;\n                }\n                resources.push(resource);\n            }\n            if (Utils.isArray(objectOrObjects))\n                return resources;\n            else\n                return resources[0];\n        };\n        Factory.injectDescriptions = function (resourceOrResources, descriptions) {\n            var resources = Utils.isArray(resourceOrResources) ? resourceOrResources : [resourceOrResources];\n            for (var i = 0, length = resources.length; i < length; i++) {\n                var resource = resources[i];\n                for (var j = 0, descriptionLength = descriptions.length; j < descriptionLength; j++) {\n                    var description = descriptions[j];\n                    var getter, setter;\n                    if (Utils.isNull(description.literal)) {\n                        // The type isn't known, inject generic versions\n                        if (description.multi)\n                            getter = Factory.genericMultipleGetter(description);\n                        else\n                            getter = Factory.genericGetter(description);\n                    }\n                    else if (!description.literal) {\n                        if (description.multi)\n                            getter = Factory.urisGetter(description);\n                        else\n                            getter = Factory.uriGetter(description);\n                    }\n                    else {\n                        if (description.multi)\n                            getter = Factory.literalsGetter(description);\n                        else\n                            getter = Factory.literalGetter(description);\n                    }\n                    setter = Factory.setter(description);\n                    Object.defineProperty(resource, description.name, {\n                        enumerable: false,\n                        get: getter,\n                        set: setter\n                    });\n                }\n            }\n            if (Utils.isArray(resourceOrResources))\n                return resources;\n            else\n                return resources[0];\n        };\n        Factory.genericGetter = function (description) {\n            var uri = description.uri;\n            return function () {\n                return this.getProperty(uri);\n            };\n        };\n        Factory.genericMultipleGetter = function (description) {\n            var uri = description.uri;\n            return function () {\n                return this.getProperties(uri);\n            };\n        };\n        Factory.uriGetter = function (description) {\n            var uri = description.uri;\n            return function () {\n                return this.getPropertyURI(uri);\n            };\n        };\n        Factory.urisGetter = function (description) {\n            var uri = description.uri;\n            return function () {\n                return this.getPropertyURIs(uri);\n            };\n        };\n        Factory.literalGetter = function (description) {\n            var uri = description.uri;\n            return function () {\n                return this.getPropertyValue(uri);\n            };\n        };\n        Factory.literalsGetter = function (description) {\n            var uri = description.uri;\n            return function () {\n                return this.getPropertyValues(uri);\n            };\n        };\n        Factory.setter = function (description) {\n            var uri = description.uri;\n            return function (value) {\n                this.setProperty(uri, value);\n            };\n        };\n        return Factory;\n    })();\n    exports.Factory = Factory;\n});\n//# sourceMappingURL=Resource.js.map;\n","define('Carbon/rdf/URI',[\"require\", \"exports\", '../Utils'], function (require, exports, Utils) {\n    var Util = (function () {\n        function Util() {\n        }\n        Util.hasFragment = function (uri) {\n            return uri.indexOf('#') != -1;\n        };\n        Util.isAbsolute = function (uri) {\n            if (Utils.S.startsWith(uri, 'http://'))\n                return true;\n            if (Utils.S.startsWith(uri, 'https://'))\n                return true;\n            if (Utils.S.startsWith(uri, '://'))\n                return true;\n        };\n        Util.isRelative = function (uri) {\n            return !Util.isAbsolute(uri);\n        };\n        Util.getDocumentURI = function (uri) {\n            var parts = uri.split('#');\n            if (parts.length > 2)\n                throw new Error('IllegalArgument: The URI provided has more than one # sign.');\n            return parts[0];\n        };\n        Util.getFragment = function (uri) {\n            var parts = uri.split('#');\n            if (parts.length < 2)\n                return null;\n            if (parts.length > 2)\n                throw new Error('IllegalArgument: The URI provided has more than one # sign.');\n            return parts[1];\n        };\n        Util.resolve = function (parentURI, childURI) {\n            var finalURI = parentURI;\n            if (!Utils.S.endsWith(parentURI, '/'))\n                finalURI += '/';\n            if (Utils.S.startsWith(childURI, '/'))\n                finalURI = finalURI + childURI.substr(1, childURI.length);\n            else\n                finalURI += childURI;\n            return finalURI;\n        };\n        Util.removeProtocol = function (uri) {\n            if (Utils.S.startsWith(uri, 'https://'))\n                return uri.substr(5, uri.length);\n            if (Utils.S.startsWith(uri, 'http://'))\n                return uri.substr(4, uri.length);\n            return uri;\n        };\n        return Util;\n    })();\n    exports.Util = Util;\n});\n//# sourceMappingURL=URI.js.map;\n","define('Carbon/rdf/FragmentResource',[\"require\", \"exports\", './Resource', './URI', '../Utils'], function (require, exports, Resource, URI, Utils) {\n    var Factory = (function () {\n        function Factory() {\n        }\n        Factory.is = function (resource) {\n            if (Utils.hasProperty(resource, 'slug'))\n                return true;\n            return false;\n        };\n        Factory.create = function (slug) {\n            slug = URI.Util.hasFragment(slug) ? URI.Util.getFragment(slug) : slug;\n            slug = '#' + slug;\n            var resource = Resource.Factory.create();\n            var fragment = Factory.from(resource);\n            fragment.slug = slug;\n            return fragment;\n        };\n        Factory.from = function (resourceOrResources) {\n            var resources = Utils.isArray(resourceOrResources) ? resourceOrResources : [resourceOrResources];\n            var fragments = [];\n            for (var i = 0, length_1 = resources.length; i < length_1; i++) {\n                var resource = resources[i];\n                resource = Resource.Factory.is(resource) ? resource : Resource.Factory.from(resource);\n                var fragment = resource;\n                if (!Factory.is(fragment))\n                    Factory.injectBehaviour(fragment);\n                fragments.push(fragment);\n            }\n            if (Utils.isArray(resourceOrResources))\n                return fragments;\n            else\n                return fragments[0];\n        };\n        Factory.injectBehaviour = function (fragment) {\n            Object.defineProperty(fragment, 'slug', {\n                writable: true,\n                enumerable: false\n            });\n            if (!fragment.uri)\n                fragment.slug = null;\n            else\n                fragment.slug = '#' + URI.Util.getFragment(fragment.uri);\n            return fragment;\n        };\n        return Factory;\n    })();\n    exports.Factory = Factory;\n    //@formatter:off\n});\n//@formatter:on \n//# sourceMappingURL=FragmentResource.js.map;\n","define('Carbon/rdf/DocumentResource',[\"require\", \"exports\", './Resource', './FragmentResource', './URI', '../Utils'], function (require, exports, Resource, FragmentResource, URI, Utils) {\n    function getFragmentSlug(fragmentURI) {\n        var fragmentSlug;\n        if (URI.Util.isAbsolute(fragmentURI)) {\n            // TODO: Handle\n            throw new Error('IllegalArgument: Absolute URIs are not currently supported.');\n        }\n        else {\n            if (URI.Util.hasFragment(fragmentURI))\n                fragmentSlug = URI.Util.getFragment(fragmentURI);\n            else\n                fragmentSlug = fragmentURI;\n        }\n        return '#' + fragmentSlug;\n    }\n    function hasFragment(uri) {\n        return !Utils.isNull(this.getFragment(uri));\n    }\n    function getFragment(uri) {\n        var fragmentSlug = getFragmentSlug(uri);\n        var documentResource = this;\n        var fragments = documentResource._fragments;\n        for (var i = 0, length_1 = fragments.length; i < length_1; i++) {\n            var fragment = fragments[i];\n            if (fragment.slug === fragmentSlug)\n                return fragment;\n        }\n        return null;\n    }\n    function getFragments() {\n        var documentResource = this;\n        return documentResource._fragments.slice();\n    }\n    function createFragment(uri) {\n        var fragmentSlug = getFragmentSlug(uri);\n        var documentResource = this;\n        if (documentResource.hasFragment(fragmentSlug))\n            throw new Error('Conflict: A fragment already exists with that slug.');\n        var fragment = FragmentResource.Factory.create(fragmentSlug);\n        documentResource._fragments.push(fragment);\n        return fragment;\n    }\n    function deleteFragment(uri) {\n        var fragmentSlug = getFragmentSlug(uri);\n        var documentResource = this;\n        for (var i = 0, length_2 = documentResource._fragments.length; i < length_2; i++) {\n            var fragment = documentResource._fragments[i];\n            if (fragment.slug === fragmentSlug) {\n                documentResource._fragments.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n    var Factory = (function () {\n        function Factory() {\n        }\n        Factory.is = function (value) {\n            //@formatter:off\n            return (Resource.Factory.is(value) &&\n                Utils.hasProperty(value, '_fragments') &&\n                Utils.hasFunction(value, 'hasFragment') &&\n                Utils.hasFunction(value, 'getFragment') &&\n                Utils.hasFunction(value, 'getFragments') &&\n                Utils.hasFunction(value, 'createFragment') &&\n                Utils.hasFunction(value, 'deleteFragment'));\n            //@formatter:on\n        };\n        Factory.from = function (resource, fragments) {\n            if (fragments === void 0) { fragments = []; }\n            resource = Resource.Factory.is(resource) ? resource : Resource.Factory.from(resource);\n            var documentResource = resource;\n            if (!Factory.is(documentResource))\n                Factory.injectBehaviour(documentResource);\n            Factory.addFragments(documentResource, fragments);\n            return documentResource;\n        };\n        Factory.injectBehaviour = function (resource) {\n            Object.defineProperty(resource, '_fragments', {\n                writable: false,\n                enumerable: false,\n                configurable: false,\n                value: []\n            });\n            var documentResource = resource;\n            documentResource.hasFragment = hasFragment;\n            documentResource.getFragment = getFragment;\n            documentResource.getFragments = getFragments;\n            documentResource.createFragment = createFragment;\n            documentResource.deleteFragment = deleteFragment;\n            return documentResource;\n        };\n        Factory.addFragments = function (documentResource, fragments) {\n            for (var i = 0, length_3 = fragments.length; i < length_3; i++) {\n                var resource = fragments[i];\n                var fragment = FragmentResource.Factory.from(resource);\n                documentResource._fragments.push(fragment);\n            }\n        };\n        return Factory;\n    })();\n    exports.Factory = Factory;\n});\n//# sourceMappingURL=DocumentResource.js.map;\n","define('Carbon/rdf/Value',[\"require\", \"exports\", './Literal', './RDFNode'], function (require, exports, Literal, RDFNode) {\n    var Util = (function () {\n        function Util() {\n        }\n        Util.areEqual = function (value1, value2) {\n            if (Literal.Factory.is(value1) && Literal.Factory.is(value2)) {\n                return Literal.Util.areEqual(value1, value2);\n            }\n            else if (RDFNode.Factory.is(value1) && RDFNode.Factory.is(value2)) {\n                return RDFNode.Util.areEqual(value1, value2);\n            }\n            else\n                return false;\n        };\n        return Util;\n    })();\n    exports.Util = Util;\n});\n//# sourceMappingURL=Value.js.map;\n","/// <reference path=\"../../typings/es6/es6.d.ts\" />\n/// <reference path=\"../../typings/es6-promise/es6-promise.d.ts\" />\ndefine('Carbon/rdf/PersistedDocumentResource',[\"require\", \"exports\", './DocumentResource', '../Utils', './Value'], function (require, exports, DocumentResource, Utils, Value) {\n    var Modifications = (function () {\n        function Modifications() {\n            this.add = new Map();\n            this.set = new Map();\n            this.delete = new Map();\n        }\n        return Modifications;\n    })();\n    var ModificationType;\n    (function (ModificationType) {\n        ModificationType[ModificationType[\"ADD\"] = 0] = \"ADD\";\n        ModificationType[ModificationType[\"SET\"] = 1] = \"SET\";\n        ModificationType[ModificationType[\"DELETE\"] = 2] = \"DELETE\";\n    })(ModificationType || (ModificationType = {}));\n    var SpecialValue;\n    (function (SpecialValue) {\n        SpecialValue[SpecialValue[\"ALL_VALUES\"] = 0] = \"ALL_VALUES\";\n    })(SpecialValue || (SpecialValue = {}));\n    function modificationsDeleteAllValues(deleteModifications) {\n        return deleteModifications.length === 1 && deleteModifications[0] === SpecialValue.ALL_VALUES;\n    }\n    function getModifications(type) {\n        var modifications;\n        switch (type) {\n            case ModificationType.ADD:\n                modifications = this._modifications.add;\n                break;\n            case ModificationType.SET:\n                modifications = this._modifications.set;\n                break;\n            case ModificationType.DELETE:\n                modifications = this._modifications.delete;\n                break;\n        }\n        return modifications;\n    }\n    function addModification(type, propertyURI, value) {\n        var modifications = getModifications.call(this, type, propertyURI);\n        var values;\n        if (modifications.has(propertyURI)) {\n            values = modifications.get(propertyURI);\n            for (var i = 0, length_1 = values.length; i < length_1; i++) {\n                if (Value.Util.areEqual(values[i], value))\n                    return;\n            }\n        }\n        else {\n            values = [];\n            modifications.set(propertyURI, values);\n        }\n        values.push(value);\n    }\n    function removeModification(type, propertyURI, value) {\n        var modifications = getModifications.call(this, type, propertyURI);\n        var values = modifications.get(propertyURI);\n        for (var i = 0, length_2 = values.length; i < length_2; i++) {\n            if (Value.Util.areEqual(values[i], value)) {\n                values.splice(i, 1);\n                break;\n            }\n        }\n    }\n    function registerAddModification(propertyURI, value) {\n        this._dirty = true;\n        if (this._modifications.delete.has(propertyURI)) {\n            var deleteModifications = this._modifications.delete.get(propertyURI);\n            if (modificationsDeleteAllValues(deleteModifications)) {\n                this._modifications.delete.delete(propertyURI);\n                addModification.call(this, ModificationType.SET, propertyURI, value);\n                return;\n            }\n            removeModification.call(this, ModificationType.DELETE, propertyURI, value);\n            for (var i = 0, length_3 = deleteModifications.length; i < length_3; i++) {\n                if (Value.Util.areEqual(deleteModifications[i], value)) {\n                    deleteModifications.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else if (this._modifications.set.has(propertyURI)) {\n            addModification.call(this, ModificationType.SET, propertyURI, value);\n        }\n        else {\n            addModification.call(this, ModificationType.ADD, propertyURI, value);\n        }\n    }\n    function registerDeleteModification(propertyURI, value) {\n        if (value === void 0) { value = null; }\n        this._dirty = true;\n        if (Utils.isNull(value))\n            value = SpecialValue.ALL_VALUES;\n        if (value === SpecialValue.ALL_VALUES) {\n            if (this._modifications.add.has(propertyURI))\n                this._modifications.add.delete(propertyURI);\n            if (this._modifications.set.has(propertyURI))\n                this._modifications.set.delete(propertyURI);\n            if (this._modifications.delete.has(propertyURI))\n                this._modifications.delete.delete(propertyURI);\n        }\n        else {\n            if (this._modifications.add.has(propertyURI))\n                removeModification.call(this, ModificationType.ADD, propertyURI, value);\n            if (this._modifications.set.has(propertyURI))\n                removeModification.call(this, ModificationType.SET, propertyURI, value);\n        }\n        addModification.call(this, ModificationType.DELETE, propertyURI, value);\n    }\n    function clean() {\n        this._modifications = new Modifications();\n        this._dirty = true;\n    }\n    function isDirty() {\n        return this._dirty;\n    }\n    function commit() {\n        return this._committer.commit(this);\n    }\n    function destroy() {\n        // TODO: Implement\n    }\n    var Factory = (function () {\n        function Factory() {\n        }\n        Factory.is = function (value) {\n            //@formatter:off\n            return (DocumentResource.Factory.is(value) &&\n                Utils.hasProperty(value, '_dirty') &&\n                Utils.hasProperty(value, '_modifications') &&\n                Utils.hasProperty(value, '_parent') &&\n                Utils.hasFunction(value, '_clean') &&\n                Utils.hasFunction(value, 'isDirty') &&\n                Utils.hasFunction(value, 'commit') &&\n                Utils.hasFunction(value, 'delete'));\n            //@formatter:on\n        };\n        Factory.from = function (documentResource, parent) {\n            var persisted = documentResource;\n            if (!Factory.is(persisted)) {\n                Object.defineProperties(persisted, {\n                    '_dirty': {\n                        writable: true,\n                        enumerable: false,\n                        value: false\n                    },\n                    '_modifications': {\n                        writable: false,\n                        enumerable: false,\n                        value: new Modifications()\n                    },\n                    '_parent': {\n                        writable: false,\n                        enumerable: false,\n                        value: parent\n                    }\n                });\n                persisted._propertyAddedCallbacks.push(registerAddModification);\n                persisted._propertyDeletedCallbacks.push(registerDeleteModification);\n                persisted._clean = clean;\n                persisted.isDirty = isDirty;\n                persisted.commit = commit;\n                persisted.delete = destroy;\n            }\n            return persisted;\n        };\n        return Factory;\n    })();\n    exports.Factory = Factory;\n});\n//# sourceMappingURL=PersistedDocumentResource.js.map;\n","define('Carbon/rdf/PersistedFragmentResource',[\"require\", \"exports\"], function (require, exports) {\n    //@formatter:off\n});\n//@formatter:on \n//# sourceMappingURL=PersistedFragmentResource.js.map;\n","define('Carbon/rdf/PropertyDescription',[\"require\", \"exports\"], function (require, exports) {\n    var PropertyDescription = (function () {\n        function PropertyDescription() {\n            this.multi = true;\n            this.literal = null;\n        }\n        return PropertyDescription;\n    })();\n    exports.default = PropertyDescription;\n});\n//# sourceMappingURL=PropertyDescription.js.map;\n","define('Carbon/rdf/RDFDocument',[\"require\", \"exports\", '../Utils', './URI'], function (require, exports, Utils, URI) {\n    var Factory = (function () {\n        function Factory() {\n        }\n        Factory.is = function (object) {\n            if (!Utils.hasProperty(object, '@graph'))\n                return false;\n            if (!Utils.hasProperty(object, '@id'))\n                return false;\n            return true;\n        };\n        Factory.create = function (uri, resources) {\n            return {\n                '@id': uri,\n                '@graph': resources\n            };\n        };\n        return Factory;\n    })();\n    exports.Factory = Factory;\n    var Util = (function () {\n        function Util() {\n        }\n        Util.getResources = function (document) {\n            if (Utils.isArray(document))\n                return document;\n            else\n                return document['@graph'];\n        };\n        Util.getDocumentResources = function (document) {\n            var resources = Util.getResources(document);\n            var documentResources = [];\n            for (var i = 0, length = resources.length; i < length; i++) {\n                var resource = resources[i];\n                var uri = resource['@id'];\n                if (!uri)\n                    continue;\n                if (!URI.Util.hasFragment(uri))\n                    documentResources.push(resource);\n            }\n            return documentResources;\n        };\n        Util.getFragmentResources = function (document, documentResource) {\n            var resources = Util.getResources(document);\n            var documentURIToMatch = null;\n            if (documentResource) {\n                if (Utils.isString(documentResource))\n                    documentURIToMatch = documentResource;\n                else\n                    documentURIToMatch = documentResource['@id'];\n            }\n            var fragmentResources = [];\n            for (var i = 0, length = resources.length; i < length; i++) {\n                var resource = resources[i];\n                var uri = resource['@id'];\n                if (!uri)\n                    continue;\n                if (!URI.Util.hasFragment(uri))\n                    continue;\n                if (!documentURIToMatch)\n                    fragmentResources.push(resource);\n                else {\n                    var documentURI = URI.Util.getDocumentURI(uri);\n                    if (documentURI === documentURIToMatch)\n                        fragmentResources.push(resource);\n                }\n            }\n            return fragmentResources;\n        };\n        return Util;\n    })();\n    exports.Util = Util;\n});\n//# sourceMappingURL=RDFDocument.js.map;\n","define('Carbon/RDF',[\"require\", \"exports\", './rdf/DocumentResource', './rdf/PersistedDocumentResource', './rdf/FragmentResource', './rdf/PersistedFragmentResource', './rdf/Literal', './rdf/PropertyDescription', './rdf/RDFDocument', './rdf/RDFNode', './rdf/Resource', './rdf/URI', './rdf/Value'], function (require, exports, DocumentResource, PersistedDocumentResource, FragmentResource, PersistedFragmentResource, Literal, PropertyDescription_1, RDFDocument, RDFNode, Resource, URI, Value) {\n    exports.DocumentResource = DocumentResource;\n    exports.PersistedDocumentResource = PersistedDocumentResource;\n    exports.FragmentResource = FragmentResource;\n    exports.PersistedFragmentResource = PersistedFragmentResource;\n    exports.Literal = Literal;\n    exports.PropertyDescription = PropertyDescription_1.default;\n    exports.RDFDocument = RDFDocument;\n    exports.RDFNode = RDFNode;\n    exports.Resource = Resource;\n    exports.URI = URI;\n    exports.Value = Value;\n    //@formatter:off\n});\n//@formatter:on \n//# sourceMappingURL=RDF.js.map;\n","define('Carbon/Apps',[\"require\", \"exports\", './RDF', './Utils'], function (require, exports, RDF, Utils) {\n    var Apps = (function () {\n        function Apps(parent, containerURI) {\n            this.parent = parent;\n            this.containerURI = containerURI;\n        }\n        Apps.prototype.get = function (uri) {\n            if (RDF.URI.Util.isRelative(uri)) {\n                if (!Utils.S.startsWith(uri, this.containerURI))\n                    uri = RDF.URI.Util.resolve(this.containerURI, uri);\n                this.parent.resolve(uri);\n            }\n            return new Promise(function (resolve, reject) {\n                // TODO: Implement\n                reject(\"Not implemented\");\n            });\n        };\n        return Apps;\n    })();\n    exports.default = Apps;\n});\n//# sourceMappingURL=Apps.js.map;\n","/// <reference path=\"../typings/es6/es6.d.ts\" />\ndefine('Carbon/HTTP',[\"require\", \"exports\", './Utils'], function (require, exports, Utils) {\n    var StatusCode;\n    (function (StatusCode) {\n        StatusCode[StatusCode[\"CONTINUE\"] = 100] = \"CONTINUE\";\n        StatusCode[StatusCode[\"SWITCHING_PROTOCOLS\"] = 101] = \"SWITCHING_PROTOCOLS\";\n        StatusCode[StatusCode[\"OK\"] = 200] = \"OK\";\n        StatusCode[StatusCode[\"CREATED\"] = 201] = \"CREATED\";\n        StatusCode[StatusCode[\"ACCEPTED\"] = 202] = \"ACCEPTED\";\n        StatusCode[StatusCode[\"NON_AUTHORITATIVE_INFORMATION\"] = 203] = \"NON_AUTHORITATIVE_INFORMATION\";\n        StatusCode[StatusCode[\"NO_CONTENT\"] = 204] = \"NO_CONTENT\";\n        StatusCode[StatusCode[\"RESET_CONTENT\"] = 205] = \"RESET_CONTENT\";\n        StatusCode[StatusCode[\"PARTIAL_CONTENT\"] = 206] = \"PARTIAL_CONTENT\";\n        StatusCode[StatusCode[\"MULTIPLE_CHOICES\"] = 300] = \"MULTIPLE_CHOICES\";\n        StatusCode[StatusCode[\"MOVED_PERMANENTLY\"] = 301] = \"MOVED_PERMANENTLY\";\n        StatusCode[StatusCode[\"FOUND\"] = 302] = \"FOUND\";\n        StatusCode[StatusCode[\"SEE_OTHER\"] = 303] = \"SEE_OTHER\";\n        StatusCode[StatusCode[\"NOT_MODIFIED\"] = 304] = \"NOT_MODIFIED\";\n        StatusCode[StatusCode[\"USE_PROXY\"] = 305] = \"USE_PROXY\";\n        StatusCode[StatusCode[\"TEMPORARY_REDIRECT\"] = 307] = \"TEMPORARY_REDIRECT\";\n        StatusCode[StatusCode[\"BAD_REQUEST\"] = 400] = \"BAD_REQUEST\";\n        StatusCode[StatusCode[\"UNAUTHORIZED\"] = 401] = \"UNAUTHORIZED\";\n        StatusCode[StatusCode[\"PAYMENT_REQUIRED\"] = 402] = \"PAYMENT_REQUIRED\";\n        StatusCode[StatusCode[\"FORBIDDEN\"] = 403] = \"FORBIDDEN\";\n        StatusCode[StatusCode[\"NOT_FOUND\"] = 404] = \"NOT_FOUND\";\n        StatusCode[StatusCode[\"METHOD_NOT_ALLOWED\"] = 405] = \"METHOD_NOT_ALLOWED\";\n        StatusCode[StatusCode[\"NOT_ACCEPTABLE\"] = 406] = \"NOT_ACCEPTABLE\";\n        StatusCode[StatusCode[\"PROXY_AUTHENTICATION_REQUIRED\"] = 407] = \"PROXY_AUTHENTICATION_REQUIRED\";\n        StatusCode[StatusCode[\"REQUEST_TIME_OUT\"] = 408] = \"REQUEST_TIME_OUT\";\n        StatusCode[StatusCode[\"CONFLICT\"] = 409] = \"CONFLICT\";\n        StatusCode[StatusCode[\"GONE\"] = 410] = \"GONE\";\n        StatusCode[StatusCode[\"LENGTH_REQUIRED\"] = 411] = \"LENGTH_REQUIRED\";\n        StatusCode[StatusCode[\"PRECONDITION_FAILED\"] = 412] = \"PRECONDITION_FAILED\";\n        StatusCode[StatusCode[\"REQUEST_ENTITY_TOO_LARGE\"] = 413] = \"REQUEST_ENTITY_TOO_LARGE\";\n        StatusCode[StatusCode[\"REQUEST_URI_TOO_LARGE\"] = 414] = \"REQUEST_URI_TOO_LARGE\";\n        StatusCode[StatusCode[\"UNSUPPORTED_MEDIA_TYPE\"] = 415] = \"UNSUPPORTED_MEDIA_TYPE\";\n        StatusCode[StatusCode[\"REQUESTED_RANGE_NOT_SATISFIABLE\"] = 416] = \"REQUESTED_RANGE_NOT_SATISFIABLE\";\n        StatusCode[StatusCode[\"EXPECTATION_FAILED\"] = 417] = \"EXPECTATION_FAILED\";\n        StatusCode[StatusCode[\"INTERNAL_SERVER_ERROR\"] = 500] = \"INTERNAL_SERVER_ERROR\";\n        StatusCode[StatusCode[\"NOT_IMPLEMENTED\"] = 501] = \"NOT_IMPLEMENTED\";\n        StatusCode[StatusCode[\"BAD_GATEWAY\"] = 502] = \"BAD_GATEWAY\";\n        StatusCode[StatusCode[\"SERVICE_UNAVAILABLE\"] = 503] = \"SERVICE_UNAVAILABLE\";\n        StatusCode[StatusCode[\"GATEWAY_TIME_OUT\"] = 504] = \"GATEWAY_TIME_OUT\";\n        StatusCode[StatusCode[\"HTTP_VERSION_NOT_SUPPORTED\"] = 505] = \"HTTP_VERSION_NOT_SUPPORTED\";\n    })(StatusCode || (StatusCode = {}));\n    exports.StatusCode = StatusCode;\n    var HeaderUtil = (function () {\n        function HeaderUtil() {\n        }\n        HeaderUtil.parseHeaders = function (headersString) {\n            var headers = new Map();\n            var headerStrings = headersString.split('\\r\\n');\n            for (var i = 0, length = headerStrings.length; i < length; i++) {\n                var headerString = headerStrings[i];\n                if (!headerString.trim())\n                    continue;\n                var parts = headerString.split(':');\n                if (parts.length != 2)\n                    throw new Error(\"ParseException: The header couldn't be parsed.\");\n                var name = parts[0].trim();\n                var header = new Header(parts[1].trim());\n                if (headers.has(name)) {\n                    var existingHeader = headers.get(name);\n                    existingHeader.values.concat(header.values);\n                }\n                else\n                    headers.set(name, header);\n            }\n            return headers;\n        };\n        return HeaderUtil;\n    })();\n    exports.HeaderUtil = HeaderUtil;\n    var Header = (function () {\n        function Header(valueOrValues) {\n            this.values = [];\n            if (!valueOrValues)\n                return;\n            else if (Array.isArray(valueOrValues))\n                this.values = valueOrValues;\n            else\n                this.setValues(valueOrValues);\n        }\n        Header.prototype.setValues = function (valuesString) {\n            this.values = [];\n            var valueStrings = valuesString.split(\",\");\n            for (var i = 0, length = valueStrings.length; i < length; i++) {\n                var valueString = valueStrings[i];\n                var value = new HeaderValue(valueString);\n                this.values.push(value);\n            }\n        };\n        Header.prototype.toString = function () {\n            return this.values.join(', ');\n        };\n        return Header;\n    })();\n    exports.Header = Header;\n    var HeaderValue = (function () {\n        function HeaderValue(value, mainValue, secondaryKey, secondaryValue) {\n            this.mainKey = null;\n            this.mainValue = null;\n            this.secondaryKey = null;\n            this.secondaryValue = null;\n            if (mainValue) {\n                this.mainKey = value;\n                this.mainValue = mainValue;\n                this.secondaryKey = secondaryKey;\n                this.secondaryValue = secondaryValue;\n            }\n            else\n                this.setValue(value);\n        }\n        HeaderValue.prototype.setValue = function (value) {\n            var parts = value.split(\";\");\n            this.setMain(parts[0]);\n            if (parts.length > 1)\n                this.setSecondary(parts[1]);\n        };\n        HeaderValue.prototype.setMain = function (main) {\n            var parts = main.split(\"=\");\n            if (parts.length === 1)\n                this.mainValue = HeaderValue.cleanString(parts[0]);\n            else if (parts.length === 2) {\n                this.mainKey = HeaderValue.cleanString(parts[0]);\n                this.mainValue = HeaderValue.cleanString(parts[1]);\n            }\n            else\n                throw new Error(\"ParseError: The header value contains multiple ';'\");\n        };\n        HeaderValue.prototype.setSecondary = function (secondary) {\n            var parts = secondary.split(\"=\");\n            if (parts.length === 1)\n                this.secondaryValue = HeaderValue.cleanString(parts[0]);\n            else if (parts.length === 2) {\n                this.secondaryKey = HeaderValue.cleanString(parts[0]);\n                this.secondaryValue = HeaderValue.cleanString(parts[1]);\n            }\n            else\n                throw new Error(\"ParseError: The header value contains multiple ';'\");\n        };\n        HeaderValue.cleanString = function (toClean) {\n            toClean = toClean.trim();\n            toClean = (Utils.S.startsWith(toClean, \"\\\"\") || Utils.S.startsWith(toClean, \"'\")) ? toClean.substr(1, toClean.length) : toClean;\n            toClean = (Utils.S.endsWith(toClean, \"\\\"\") || Utils.S.endsWith(toClean, \"'\")) ? toClean.substr(0, toClean.length - 1) : toClean;\n            return toClean;\n        };\n        HeaderValue.prototype.toString = function () {\n            var result = '';\n            if (this.mainKey)\n                result += this.mainKey + '=';\n            result += this.mainValue;\n            if (this.secondaryKey || this.secondaryValue)\n                result += '; ';\n            if (this.secondaryKey)\n                result += this.secondaryKey + '=';\n            if (this.secondaryValue)\n                result += this.secondaryValue;\n            return result;\n        };\n        return HeaderValue;\n    })();\n    exports.HeaderValue = HeaderValue;\n    var Response = (function () {\n        function Response(request) {\n            this.status = request.status;\n            this.data = request.responseText;\n            this.setHeaders(request);\n            this.request = request;\n        }\n        Response.prototype.setHeaders = function (request) {\n            var headersString = request.getAllResponseHeaders();\n            if (headersString)\n                this.headers = HeaderUtil.parseHeaders(headersString);\n            else\n                this.headers = new Map();\n        };\n        return Response;\n    })();\n    exports.Response = Response;\n    //@formatter:off\n});\n//@formatter:on \n//# sourceMappingURL=HTTP.js.map;\n","define('Carbon/REST',[\"require\", \"exports\", './HTTP', './Utils'], function (require, exports, HTTP, Utils) {\n    var Method;\n    (function (Method) {\n        Method[Method[\"OPTIONS\"] = 0] = \"OPTIONS\";\n        Method[Method[\"HEAD\"] = 1] = \"HEAD\";\n        Method[Method[\"GET\"] = 2] = \"GET\";\n        Method[Method[\"POST\"] = 3] = \"POST\";\n        Method[Method[\"PUT\"] = 4] = \"PUT\";\n        Method[Method[\"PATCH\"] = 5] = \"PATCH\";\n        Method[Method[\"DELETE\"] = 6] = \"DELETE\";\n    })(Method || (Method = {}));\n    var defaultRequestOptions = {\n        sendCredentialsOnCORS: true\n    };\n    function sendRequest(method, url, bodyOrOptions, options) {\n        if (bodyOrOptions === void 0) { bodyOrOptions = defaultRequestOptions; }\n        if (options === void 0) { options = defaultRequestOptions; }\n        var body = Utils.isString(bodyOrOptions) ? bodyOrOptions : null;\n        options = Utils.isString(bodyOrOptions) ? options : bodyOrOptions;\n        return new Promise(function (resolve, reject) {\n            var request = options.request ? options.request : new XMLHttpRequest();\n            request.open(Method[method], url, true);\n            if (options.headers)\n                setHeaders(request, options.headers);\n            if (options.basic)\n                addBasicAuthHeader(request, options.basic);\n            request.withCredentials = options.sendCredentialsOnCORS;\n            if (options.timeout)\n                request.timeout = options.timeout;\n            request.onload = onLoad(resolve, reject, request);\n            request.onerror = onError(reject, request);\n            if (body)\n                request.send(body);\n            else\n                request.send();\n        });\n    }\n    function setHeaders(request, headers) {\n        var names = headers.getAllKeys();\n        for (var i = 0, length = names.length; i < length; i++) {\n            var name = names[i];\n            var value = headers.get(name);\n            request.setRequestHeader(name, value.toString());\n        }\n    }\n    function addBasicAuthHeader(request, credentials) {\n        var header = new HTTP.Header();\n        var authorization = 'Basic ' + atob(credentials.username + ':' + credentials.password);\n        header.values.push(new HTTP.HeaderValue(authorization));\n        request.setRequestHeader('Authorization', header.toString());\n    }\n    function onLoad(resolve, reject, request) {\n        return function () {\n            var response = new HTTP.Response(request);\n            if (request.status >= 200 && request.status <= 299)\n                resolve(response);\n            else\n                reject(response);\n        };\n    }\n    function onError(reject, request) {\n        return function () {\n            var response = new HTTP.Response(request);\n            reject(response);\n        };\n    }\n    function options(url, options) {\n        if (options === void 0) { options = {}; }\n        return sendRequest(Method.OPTIONS, url, options);\n    }\n    exports.options = options;\n    function head(url, options) {\n        if (options === void 0) { options = {}; }\n        return sendRequest(Method.HEAD, url, options);\n    }\n    exports.head = head;\n    function get(url, options) {\n        if (options === void 0) { options = {}; }\n        return sendRequest(Method.GET, url, options);\n    }\n    exports.get = get;\n    // TODO: export function post( url:string, fields:HashMap<string, any>, options:RequestOptions = {} )\n    function post(url, body, options) {\n        if (options === void 0) { options = {}; }\n        return sendRequest(Method.POST, url, body, options);\n    }\n    exports.post = post;\n    function put(url, body, options) {\n        if (options === void 0) { options = {}; }\n        return sendRequest(Method.PUT, url, body, options);\n    }\n    exports.put = put;\n    function patch(url, body, options) {\n        if (options === void 0) { options = {}; }\n        return sendRequest(Method.PATCH, url, body, options);\n    }\n    exports.patch = patch;\n    function doDelete(url, body, options) {\n        if (options === void 0) { options = {}; }\n        return sendRequest(Method.DELETE, url, body, options);\n    }\n    exports.doDelete = doDelete;\n});\n//# sourceMappingURL=REST.js.map;\n","define('Carbon/Documents',[\"require\", \"exports\", \"jsonld\", './REST', './Utils', './RDF'], function (require, exports, jsonld, REST, Utils, RDF) {\n    /// <reference path=\"../typings/es6-promise/es6-promise.d.ts\" />\n    /// <reference path=\"../typings/jsonld.js/jsonld.js.d.ts\" />\n    function parse(input) {\n        try {\n            return JSON.parse(input);\n        }\n        catch (error) {\n            // TODO: Handle SyntaxError\n            throw error;\n        }\n    }\n    function expand(input, options) {\n        return new Promise(function (resolve, reject) {\n            jsonld.expand(input.result, options, function (error, expanded) {\n                if (!error) {\n                    input.result = expanded;\n                    resolve(input);\n                }\n                else\n                    reject(error);\n            });\n        });\n    }\n    var Documents = (function () {\n        function Documents(parent) {\n            if (parent === void 0) { parent = null; }\n            this.parent = parent;\n        }\n        Documents.prototype.get = function (uri) {\n            if (RDF.URI.Util.isRelative(uri)) {\n                if (!this.parent)\n                    throw new Error(\"IllegalArgument: This module doesn't support relative URIs.\");\n                uri = this.parent.resolve(uri);\n            }\n            return REST.get(uri).then(function (response) {\n                var parsedObject = parse(response.data);\n                return expand({\n                    result: parsedObject,\n                    response: response\n                });\n            }).then(function (processedResponse) {\n                var expandedResult = processedResponse.result;\n                if (!Utils.isArray(expandedResult)) {\n                    if (RDF.RDFDocument.Factory.is(expandedResult))\n                        return processedResponse;\n                    expandedResult = [expandedResult];\n                }\n                var uri;\n                // TODO: Get URI\n                var document = RDF.RDFDocument.Factory.create(uri, expandedResult);\n                return {\n                    result: document,\n                    response: processedResponse.response\n                };\n            });\n        };\n        return Documents;\n    })();\n    exports.default = Documents;\n});\n//# sourceMappingURL=Documents.js.map;\n","define('Carbon/Resources',[\"require\", \"exports\", \"jsonld\", './RDF'], function (require, exports, jsonld, RDF_1) {\n    /// <reference path=\"../typings/es6-promise/es6-promise.d.ts\" />\n    /// <reference path=\"../typings/jsonld.js/jsonld.js.d.ts\" />\n    //@formatter:on\n    var Resources = (function () {\n        function Resources(documents) {\n            this.documents = documents;\n        }\n        Resources.prototype.get = function (uri) {\n            var _this = this;\n            return this.documents.get(uri).then(function (processedResponse) {\n                var document = processedResponse.result;\n                var documentResourceNodes = RDF_1.RDFDocument.Util.getDocumentResources(document);\n                var documentResources = [];\n                for (var i = 0, length_1 = documentResourceNodes.length; i < length_1; i++) {\n                    var documentResourceNode = documentResourceNodes[i];\n                    var fragmentNodes = RDF_1.RDFDocument.Util.getFragmentResources(document, documentResourceNode);\n                    var documentResource = RDF_1.DocumentResource.Factory.from(documentResourceNode, fragmentNodes);\n                    var persistedDocumentResource = RDF_1.PersistedDocumentResource.Factory.from(documentResource, _this);\n                }\n                // TODO: Finish implementing\n                return null;\n            });\n        };\n        Resources.prototype.commit = function (object) {\n            if (object === void 0) { object = null; }\n            // TODO: Implement\n            return null;\n        };\n        return Resources;\n    })();\n    exports.default = Resources;\n});\n//# sourceMappingURL=Resources.js.map;\n","define('Carbon/configuration',[\"require\", \"exports\"], function (require, exports) {\n    exports.domain = 'carbonldp.com';\n    exports.appsContainer = 'apps/';\n    exports.useSSL = true;\n});\n//# sourceMappingURL=configuration.js.map;\n"]}