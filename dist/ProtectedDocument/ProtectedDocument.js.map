{"version":3,"sources":["ProtectedDocument/ProtectedDocument.ts"],"names":[],"mappings":";;;;;;;;;AAEA,wCAAuC;AAKvC,8CAAkC;AAClC,gDAAqC;AACrC,2EAGsC;AAyBzB,QAAA,iBAAiB,GAA4B;IACzD,IAAI,EAAE,uDAA0B,CAAC,IAAI;IACrC,MAAM,EAAE;QACP,mBAAmB,EAAE;YACpB,KAAK,EAAE,iBAAE,CAAC,iBAAiB;YAC3B,OAAO,EAAE,KAAK;SACd;QACD,SAAS,EAAE;YACV,KAAK,EAAE,iBAAE,CAAC,OAAO;YACjB,OAAO,EAAE,KAAK;SACd;QACD,QAAQ,EAAE;YACT,KAAK,EAAE,iBAAE,CAAC,KAAK;YACf,OAAO,EAAE,KAAK;YACd,YAAY,EAAE,MAAM;SACpB;KACD;IAED,WAAW,EAAX,UAAa,MAAa;QACzB,OAAO,KAAK,CAAC,QAAQ,CAAE,MAAM,CAAE;eAC3B,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,QAAQ,CAAE,CACvC;IACH,CAAC;IAED,EAAE,EAAF,UAAI,MAAa;QAChB,OAAO,yBAAiB,CAAC,WAAW,CAAE,MAAM,CAAE;eAC1C,mBAAQ,CAAC,EAAE,CAAE,MAAM,CAAE,CACvB;IACH,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ,EAAE,SAAmB;QACxD,IAAI,yBAAiB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAE5D,mBAAQ,CAAC,QAAQ,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEvC,IAAM,0BAA0B,GAAyB,MAA+B,CAAC;QACzF,MAAM,CAAC,gBAAgB,CAAE,0BAA0B,EAAE;YACpD,QAAQ,EAAE;gBACT,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,MAAM;aACb;SACD,CAAE,CAAC;QAEJ,OAAO,0BAA0B,CAAC;IACnC,CAAC;CAED,CAAC;AAGF,gBAAyC,cAA6B;IAAtE,iBAcC;IAbA,IAAI,IAAI,CAAC,iBAAiB;QAAG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,cAAc,CAAE,CAAC;IAErG,OAAO,IAAI,CAAC,OAAO,CAAE,UAAA,CAAC,IAAI,OAAA,CAAC;SACzB,QAAQ,CAAE,iBAAE,CAAC,iBAAiB,CAAE;SAChC,UAAU,CAAE;QACZ,iBAAiB,EAAE;YAClB,OAAO,EAAE,UAAA,EAAE,IAAI,OAAA,EAAE;iBACf,UAAU,CAAE,EAAE,CAAC,IAAI,CAAE,EADR,CACQ;SACvB;KACD,CAAE,EAPsB,CAOtB,CACH,CAAC,IAAI,CAAE;QACP,OAAO,KAAI,CAAC,iBAAwB,CAAC;IACtC,CAAC,CAAE,CAAC;AACL,CAAC","file":"ProtectedDocument.js","sourcesContent":["import { ACL } from \"../Auth\";\nimport { ModelDecorator } from \"../core/ModelDecorator\";\nimport { Document } from \"../Document\";\nimport { Documents } from \"../Documents\";\nimport { RequestOptions } from \"../HTTP\";\nimport { ObjectSchema } from \"../ObjectSchema\";\nimport { Pointer } from \"../Pointer\";\nimport * as Utils from \"../Utils\";\nimport { CS } from \"../Vocabularies\";\nimport {\n\tTransientProtectedDocument,\n\tTransientProtectedDocumentFactory,\n} from \"./TransientProtectedDocument\";\n\n\nexport interface ProtectedDocument extends Document {\n\taccessControlList?:Pointer;\n\n\tcreator?:Pointer;\n\towners?:Pointer;\n\n\tgetACL( requestOptions?:RequestOptions ):Promise<ACL>;\n}\n\n\nexport interface ProtectedDocumentFactory extends ModelDecorator<ProtectedDocument>, TransientProtectedDocumentFactory {\n\tSCHEMA:ObjectSchema;\n\n\n\tisDecorated( object:object ):object is ProtectedDocument;\n\n\tis( object:object ):object is ProtectedDocument;\n\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & ProtectedDocument;\n}\n\nexport const ProtectedDocument:ProtectedDocumentFactory = {\n\tTYPE: TransientProtectedDocument.TYPE,\n\tSCHEMA: {\n\t\t\"accessControlList\": {\n\t\t\t\"@id\": CS.accessControlList,\n\t\t\t\"@type\": \"@id\",\n\t\t},\n\t\t\"creator\": {\n\t\t\t\"@id\": CS.creator,\n\t\t\t\"@type\": \"@id\",\n\t\t},\n\t\t\"owners\": {\n\t\t\t\"@id\": CS.owner,\n\t\t\t\"@type\": \"@id\",\n\t\t\t\"@container\": \"@set\",\n\t\t},\n\t},\n\n\tisDecorated( object:object ):object is ProtectedDocument {\n\t\treturn Utils.isObject( object )\n\t\t\t&& Utils.hasFunction( object, \"getACL\" )\n\t\t\t;\n\t},\n\n\tis( object:object ):object is ProtectedDocument {\n\t\treturn ProtectedDocument.isDecorated( object )\n\t\t\t&& Document.is( object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & ProtectedDocument {\n\t\tif( ProtectedDocument.isDecorated( object ) ) return object;\n\n\t\tDocument.decorate( object, documents );\n\n\t\tconst persistedProtectedDocument:T & ProtectedDocument = object as T & ProtectedDocument;\n\t\tObject.defineProperties( persistedProtectedDocument, {\n\t\t\t\"getACL\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getACL,\n\t\t\t},\n\t\t} );\n\n\t\treturn persistedProtectedDocument;\n\t},\n\n};\n\n\nfunction getACL( this:ProtectedDocument, requestOptions:RequestOptions ):Promise<ACL> {\n\tif( this.accessControlList ) return this._documents.get( this.accessControlList.id, requestOptions );\n\n\treturn this.resolve( _ => _\n\t\t.withType( CS.ProtectedDocument )\n\t\t.properties( {\n\t\t\taccessControlList: {\n\t\t\t\t\"query\": __ => __\n\t\t\t\t\t.properties( __.full ),\n\t\t\t},\n\t\t} )\n\t).then( () => {\n\t\treturn this.accessControlList as ACL;\n\t} );\n}\n"]}