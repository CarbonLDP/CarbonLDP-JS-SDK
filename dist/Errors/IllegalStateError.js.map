{"version":3,"sources":["Errors/IllegalStateError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iDAA4C;AAE5C;IAAuC,qCAAa;IAGnD,2BAAa,OAAmB;QAAnB,wBAAA,EAAA,YAAmB;QAAhC,YACC,kBAAO,OAAO,CAAE,SAEhB;QADA,MAAM,CAAC,cAAc,CAAE,KAAI,EAAE,iBAAiB,CAAC,SAAS,CAAE,CAAC;;IAC5D,CAAC;IALD,sBAAI,mCAAI;aAAR,cAAoB,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;;;OAAA;IAMlD,wBAAC;AAAD,CAPA,AAOC,CAPsC,uBAAa,GAOnD;AAPY,8CAAiB;AAS9B,kBAAe,iBAAiB,CAAC","file":"IllegalStateError.js","sourcesContent":["import AbstractError from \"./AbstractError\";\n\nexport class IllegalStateError extends AbstractError {\n\tget name():string { return \"IllegalStateError\"; }\n\n\tconstructor( message:string = \"\" ) {\n\t\tsuper( message );\n\t\tObject.setPrototypeOf( this, IllegalStateError.prototype );\n\t}\n}\n\nexport default IllegalStateError;\n"]}