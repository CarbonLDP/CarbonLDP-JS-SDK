{"version":3,"sources":["Errors/AbstractError.ts"],"names":[],"mappings":";;;;;;AAAA;IAAqC,iCAAK;IAKzC,uBAAa,OAAc;QAA3B,YACC,kBAAO,OAAO,CAAE,SAGhB;QAFA,EAAE,CAAA,CAAE,mBAAmB,IAAI,KAAM,CAAC;YAAO,KAAM,CAAC,iBAAiB,CAAE,KAAI,EAAE,KAAI,CAAC,WAAW,CAAE,CAAC;QAC5F,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;IACxB,CAAC;IAND,sBAAI,+BAAI;aAAR,cAAoB,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;;;OAAA;IAQ7C,gCAAQ,GAAR;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;IACxC,CAAC;IACF,oBAAC;AAAD,CAdA,AAcC,CAdoC,KAAK,GAczC;;AAED,kBAAe,aAAa,CAAC","file":"AbstractError.js","sourcesContent":["abstract class AbstractError extends Error {\n\tpublic message:string;\n\n\tget name():string { return \"AbstractError\"; }\n\n\tconstructor( message:string ) {\n\t\tsuper( message );\n\t\tif( \"captureStackTrace\" in Error ) (<any>Error).captureStackTrace( this, this.constructor );\n\t\tthis.message = message;\n\t}\n\n\ttoString():string {\n\t\treturn this.name + \": \" + this.message;\n\t}\n}\n\nexport default AbstractError;\n"]}