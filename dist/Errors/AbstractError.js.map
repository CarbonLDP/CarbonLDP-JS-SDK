{"version":3,"sources":["Errors/AbstractError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;IAAoC,yBAAK;IAKxC,eAAa,OAAc;QAA3B,YACC,kBAAO,OAAO,CAAE,SAIhB;QAHA,MAAM,CAAC,cAAc,CAAE,KAAI,EAAE,KAAK,CAAC,SAAS,CAAE,CAAC;QAC/C,EAAE,CAAA,CAAE,mBAAmB,IAAI,KAAM,CAAC;YAAO,KAAM,CAAC,iBAAiB,CAAE,KAAI,EAAE,KAAI,CAAC,WAAW,CAAE,CAAC;QAC5F,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;IACxB,CAAC;IAPD,sBAAI,uBAAI;aAAR,cAAoB,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;;;OAAA;IAS7C,wBAAQ,GAAR;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;IACxC,CAAC;IACF,YAAC;AAAD,CAfA,AAeC,CAfmC,KAAK,GAexC;AAfqB,sBAAK;AAiB3B,kBAAe,KAAK,CAAC","file":"AbstractError.js","sourcesContent":["export abstract class Class extends Error {\n\tpublic message:string;\n\n\tget name():string { return \"AbstractError\"; }\n\n\tconstructor( message:string ) {\n\t\tsuper( message );\n\t\tObject.setPrototypeOf( this, Class.prototype );\n\t\tif( \"captureStackTrace\" in Error ) (<any>Error).captureStackTrace( this, this.constructor );\n\t\tthis.message = message;\n\t}\n\n\ttoString():string {\n\t\treturn this.name + \": \" + this.message;\n\t}\n}\n\nexport default Class;\n"]}