{"version":3,"sources":["BlankNode/TransientBlankNode.ts"],"names":[],"mappings":";;AAAA,oCAGmB;AACnB,wCAAiD;AACjD,8BAA6B;AAmBhB,QAAA,kBAAkB,GAA6B;IAC3D,EAAE,EAAF,UAAI,KAAS;QACZ,OAAO,4BAAiB,CAAC,EAAE,CAAE,KAAK,CAAE;YACnC,SAAG,CAAC,SAAS,CAAE,KAAK,CAAC,EAAE,CAAE,CACxB;IACH,CAAC;IAGD,MAAM,EAAN,UAA0B,IAAsB;QAC/C,IAAM,IAAI,GAAqB,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QACzD,OAAO,0BAAkB,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;IAC9C,CAAC;IAED,UAAU,EAAV,UAA8B,MAAwB;QACrD,IAAI,CAAE,MAAM,CAAC,EAAE,EAAG;YACjB,MAAM,CAAC,EAAE,GAAG,SAAG,CAAC,eAAe,EAAE,CAAC;SAClC;aAAM,IAAI,CAAE,SAAG,CAAC,SAAS,CAAE,MAAM,CAAC,EAAE,CAAE,EAAG;YACzC,MAAM,IAAI,6BAAoB,CAAE,cAAY,MAAM,CAAC,EAAE,kCAA+B,CAAE,CAAC;SACvF;QAED,OAAO,0BAAkB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;IAC9C,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ;QACnC,IAAM,QAAQ,GAAyB,4BAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAE5E,MAAM,CAAC,gBAAgB,CAAE,QAAQ,EAAE;YAClC,IAAI,EAAE;gBACL,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,GAAG,EAAH;oBACC,OAAO,IAAI,CAAC,GAAG,CAAC;gBACjB,CAAC;gBACD,GAAG,EAAH,UAA8B,KAAY;oBACzC,IAAI,CAAE,SAAG,CAAC,SAAS,CAAE,KAAK,CAAE;wBAAG,MAAM,IAAI,2BAAkB,CAAE,qBAAmB,KAAK,2BAAwB,CAAE,CAAC;oBAChH,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBAClB,CAAC;aACD;SACD,CAAE,CAAC;QAEJ,OAAO,QAAQ,CAAC;IACjB,CAAC;CACD,CAAC","file":"TransientBlankNode.js","sourcesContent":["import {\n\tIllegalActionError,\n\tIllegalArgumentError\n} from \"../Errors\";\nimport { TransientFragment, } from \"../Fragment\";\nimport { URI } from \"../RDF\";\nimport { BaseBlankNode } from \"./BaseBlankNode\";\n\n\nexport interface TransientBlankNode extends TransientFragment {\n}\n\n\nexport interface TransientBlankNodeFactory {\n\tis( value:any ):value is TransientBlankNode;\n\n\n\tcreate<T extends object>( data:T & BaseBlankNode ):T & TransientBlankNode;\n\n\tcreateFrom<T extends object>( object:T & BaseBlankNode ):T & TransientBlankNode;\n\n\tdecorate<T extends object>( object:T ):T & TransientBlankNode;\n}\n\nexport const TransientBlankNode:TransientBlankNodeFactory = {\n\tis( value:any ):value is TransientBlankNode {\n\t\treturn TransientFragment.is( value ) &&\n\t\t\tURI.isBNodeID( value.id )\n\t\t\t;\n\t},\n\n\n\tcreate<T extends object>( data:T & BaseBlankNode ):T & TransientBlankNode {\n\t\tconst copy:T & BaseBlankNode = Object.assign( {}, data );\n\t\treturn TransientBlankNode.createFrom( copy );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseBlankNode ):T & TransientBlankNode {\n\t\tif( ! object.id ) {\n\t\t\tobject.id = URI.generateBNodeID();\n\t\t} else if( ! URI.isBNodeID( object.id ) ) {\n\t\t\tthrow new IllegalArgumentError( `The id \"${ object.id }\" is not a blank node label.` );\n\t\t}\n\n\t\treturn TransientBlankNode.decorate( object );\n\t},\n\n\tdecorate<T extends object>( object:T ):T & TransientBlankNode {\n\t\tconst resource:T & TransientFragment = TransientFragment.decorate( object );\n\n\t\tObject.defineProperties( resource, {\n\t\t\t\"id\": {\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tget( this:TransientBlankNode ):string {\n\t\t\t\t\treturn this._id;\n\t\t\t\t},\n\t\t\t\tset( this:TransientBlankNode, value:string ):void {\n\t\t\t\t\tif( ! URI.isBNodeID( value ) ) throw new IllegalActionError( `Cannot assign \"${ value }\" as a blank node ID.` );\n\t\t\t\t\tthis._id = value;\n\t\t\t\t},\n\t\t\t},\n\t\t} );\n\n\t\treturn resource;\n\t},\n};\n"]}