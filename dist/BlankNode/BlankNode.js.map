{"version":3,"sources":["BlankNode/BlankNode.ts"],"names":[],"mappings":";;AAAA,gCAAyC;AACzC,wCAAuC;AACvC,wCAAgD;AAChD,2DAG8B;AAWjB,QAAA,SAAS,GAAoB;IACzC,EAAE,EAAF,UAAI,KAAS;QACZ,OAAO,uCAAkB,CAAC,EAAE,CAAE,KAAK,CAAE;eACjC,4BAAiB,CAAC,WAAW,CAAE,KAAK,CAAE,CACxC;IACH,CAAC;IAED,MAAM,EAAE,uCAAkB,CAAC,MAAM;IACjC,UAAU,EAAE,uCAAkB,CAAC,UAAU;IAGzC,QAAQ,EAAR,UAA4B,MAAQ;QACnC,OAAO,qBAAc;aACnB,gBAAgB,CAAE,MAAM,EAAE,uCAA+D,EAAE,mBAAQ,CAAE,CAAC;IACzG,CAAC;CACD,CAAC","file":"BlankNode.js","sourcesContent":["import { ModelDecorator } from \"../core\";\nimport { Fragment } from \"../Fragment\";\nimport { PersistedResource } from \"../Resource\";\nimport {\n\tTransientBlankNode,\n\tTransientBlankNodeFactory,\n} from \"./TransientBlankNode\";\n\n\nexport interface BlankNode extends Fragment {\n}\n\n\nexport interface BlankNodeFactory extends TransientBlankNodeFactory {\n\tis( value:any ):value is BlankNode;\n}\n\nexport const BlankNode:BlankNodeFactory = {\n\tis( value:any ):value is BlankNode {\n\t\treturn TransientBlankNode.is( value )\n\t\t\t&& PersistedResource.isDecorated( value )\n\t\t\t;\n\t},\n\n\tcreate: TransientBlankNode.create,\n\tcreateFrom: TransientBlankNode.createFrom,\n\n\n\tdecorate<T extends object>( object:T ):T & BlankNode {\n\t\treturn ModelDecorator\n\t\t\t.decorateMultiple( object, TransientBlankNode as any as ModelDecorator<TransientBlankNode>, Fragment );\n\t},\n};\n"]}