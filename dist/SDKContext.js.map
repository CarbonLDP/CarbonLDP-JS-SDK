{"version":3,"sources":["SDKContext.ts"],"names":[],"mappings":"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","file":"SDKContext.js","sourcesContent":["import * as Documents from \"./Documents\";\nimport * as Auth from \"./Auth\";\nimport * as Context from \"./Context\";\nimport * as Errors from \"./Errors\";\nimport * as LDP from \"./LDP\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as ProtectedDocument from \"./ProtectedDocument\";\nimport * as RDF from \"./RDF\";\nimport * as RDFRepresentation from \"./RDFRepresentation\";\nimport * as System from \"./System\";\nimport * as SHACL from \"./SHACL\";\n\nexport class Class implements Context.Class {\n\tauth:Auth.Class;\n\tdocuments:Documents.Class;\n\n\tget baseURI():string { return \"\"; }\n\n\tget parentContext():Context.Class { return null; }\n\n\tprotected settings:Map<string, any>;\n\n\tprotected generalObjectSchema:ObjectSchema.DigestedObjectSchema;\n\tprotected typeObjectSchemaMap:Map<string, ObjectSchema.DigestedObjectSchema>;\n\n\tconstructor() {\n\t\tthis.settings = new Map<string, any>();\n\n\t\tthis.generalObjectSchema = new ObjectSchema.DigestedObjectSchema();\n\t\tthis.typeObjectSchemaMap = new Map<string, ObjectSchema.DigestedObjectSchema>();\n\n\t\tthis.auth = new Auth.Class( this );\n\t\tthis.documents = new Documents.Class( this );\n\n\t\tthis.registerDefaultObjectSchemas();\n\t}\n\n\tresolve( relativeURI:string ):string {\n\t\treturn relativeURI;\n\t}\n\n\t/**\n\t * Resolve the URI provided in the scope of the system container of a Carbon LDP.\n\t *\n\t * If no `system.container` setting has been set an IllegalStateError will be thrown.\n\t * If the URI provided is outside the system container an IllegalArgumentError will be thrown.\n\t *\n\t * @param relativeURI Relative URI to be resolved.\n\t * @returns The absolute URI that has been resolved.\n\t */\n\tresolveSystemURI( relativeURI:string ):string {\n\t\tif( ! this.hasSetting( \"system.container\" ) ) throw new Errors.IllegalStateError( `The \"system.container\" setting hasn't been defined.` );\n\t\tconst systemContainer:string = this.resolve( this.getSetting( \"system.container\" ) );\n\n\t\tconst systemURI:string = RDF.URI.Util.resolve( systemContainer, relativeURI );\n\t\tif( ! systemURI.startsWith( systemContainer ) ) throw new Errors.IllegalArgumentError( `The provided URI \"${ relativeURI }\" doesn't belong to the system container of your Carbon LDP.` );\n\n\t\treturn systemURI;\n\t}\n\n\thasSetting( name:string ):boolean {\n\t\treturn ( this.settings.has( name ) )\n\t\t\t|| ( ! ! this.parentContext && this.parentContext.hasSetting( name ) );\n\t}\n\n\tgetSetting( name:string ):any {\n\t\tif( this.settings.has( name ) ) return this.settings.get( name );\n\t\tif( this.parentContext && this.parentContext.hasSetting( name ) ) return this.parentContext.getSetting( name );\n\t\treturn null;\n\t}\n\n\tsetSetting( name:string, value:any ):void {\n\t\tthis.settings.set( name, value );\n\t}\n\n\tdeleteSetting( name:string ):void {\n\t\tthis.settings.delete( name );\n\t}\n\n\thasObjectSchema( type:string ):boolean {\n\t\ttype = this.resolveTypeURI( type );\n\t\tif( this.typeObjectSchemaMap.has( type ) ) return true;\n\t\treturn ! ! this.parentContext && this.parentContext.hasObjectSchema( type );\n\t}\n\n\tgetObjectSchema( type:string = null ):ObjectSchema.DigestedObjectSchema {\n\t\tif( ! ! type ) {\n\t\t\t// Type specific schema\n\t\t\ttype = this.resolveTypeURI( type );\n\t\t\tif( this.typeObjectSchemaMap.has( type ) ) return this.typeObjectSchemaMap.get( type );\n\t\t\tif( ! ! this.parentContext && this.parentContext.hasObjectSchema( type ) ) return this.parentContext.getObjectSchema( type );\n\n\t\t\treturn null;\n\t\t} else {\n\t\t\t// General schema\n\t\t\tif( ! ! this.generalObjectSchema ) return this.generalObjectSchema;\n\t\t\tif( ! ! this.parentContext ) return this.parentContext.getObjectSchema();\n\n\t\t\tthrow new Errors.IllegalStateError();\n\t\t}\n\t}\n\n\textendObjectSchema( type:string, objectSchema:ObjectSchema.Class ):void;\n\textendObjectSchema( objectSchema:ObjectSchema.Class ):void;\n\textendObjectSchema( typeOrObjectSchema:any, objectSchema:ObjectSchema.Class = null ):void {\n\t\tlet type:string = objectSchema ? typeOrObjectSchema : null;\n\t\tobjectSchema = ! ! objectSchema ? objectSchema : typeOrObjectSchema;\n\t\tlet digestedSchema:ObjectSchema.DigestedObjectSchema = ObjectSchema.Digester.digestSchema( objectSchema );\n\n\t\tif( ! type ) {\n\t\t\tthis.extendGeneralObjectSchema( digestedSchema );\n\t\t} else {\n\t\t\tthis.extendTypeObjectSchema( digestedSchema, type );\n\t\t}\n\t}\n\n\tclearObjectSchema( type:string = null ):void {\n\t\tif( ! type ) {\n\t\t\tthis.generalObjectSchema = ! ! this.parentContext ? null : new ObjectSchema.DigestedObjectSchema();\n\t\t} else {\n\t\t\ttype = this.resolveTypeURI( type );\n\t\t\tthis.typeObjectSchemaMap.delete( type );\n\t\t}\n\t}\n\n\tprotected extendGeneralObjectSchema( digestedSchema:ObjectSchema.DigestedObjectSchema ):void {\n\t\tlet digestedSchemaToExtend:ObjectSchema.DigestedObjectSchema;\n\t\tif( ! ! this.generalObjectSchema ) {\n\t\t\tdigestedSchemaToExtend = this.generalObjectSchema;\n\t\t} else if( ! ! this.parentContext ) {\n\t\t\tdigestedSchemaToExtend = this.parentContext.getObjectSchema();\n\t\t} else {\n\t\t\tdigestedSchemaToExtend = new ObjectSchema.DigestedObjectSchema();\n\t\t}\n\n\t\tthis.generalObjectSchema = ObjectSchema.Digester.combineDigestedObjectSchemas( [\n\t\t\tnew ObjectSchema.DigestedObjectSchema(),\n\t\t\tdigestedSchemaToExtend,\n\t\t\tdigestedSchema,\n\t\t] );\n\t}\n\n\tprotected extendTypeObjectSchema( digestedSchema:ObjectSchema.DigestedObjectSchema, type:string ):void {\n\t\ttype = this.resolveTypeURI( type );\n\t\tlet digestedSchemaToExtend:ObjectSchema.DigestedObjectSchema;\n\n\t\tif( this.typeObjectSchemaMap.has( type ) ) {\n\t\t\tdigestedSchemaToExtend = this.typeObjectSchemaMap.get( type );\n\t\t} else if( ! ! this.parentContext && this.parentContext.hasObjectSchema( type ) ) {\n\t\t\tdigestedSchemaToExtend = this.parentContext.getObjectSchema( type );\n\t\t} else {\n\t\t\tdigestedSchemaToExtend = new ObjectSchema.DigestedObjectSchema();\n\t\t}\n\n\t\tlet extendedDigestedSchema:ObjectSchema.DigestedObjectSchema = ObjectSchema.Digester.combineDigestedObjectSchemas( [\n\t\t\tdigestedSchemaToExtend,\n\t\t\tdigestedSchema,\n\t\t] );\n\n\t\tthis.typeObjectSchemaMap.set( type, extendedDigestedSchema );\n\t}\n\n\tprivate registerDefaultObjectSchemas():void {\n\t\tthis.extendObjectSchema( ProtectedDocument.RDF_CLASS, ProtectedDocument.SCHEMA );\n\n\t\tthis.extendObjectSchema( System.PlatformMetadata.RDF_CLASS, System.PlatformMetadata.SCHEMA );\n\t\tthis.extendObjectSchema( System.InstanceMetadata.RDF_CLASS, System.InstanceMetadata.SCHEMA );\n\n\t\tthis.extendObjectSchema( RDFRepresentation.RDF_CLASS, RDFRepresentation.SCHEMA );\n\n\t\tthis.extendObjectSchema( LDP.Entry.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.Error.RDF_CLASS, LDP.Error.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.ErrorResponse.RDF_CLASS, LDP.ErrorResponse.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.ResponseMetadata.RDF_CLASS, LDP.ResponseMetadata.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.DocumentMetadata.RDF_CLASS, LDP.DocumentMetadata.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.AddMemberAction.RDF_CLASS, LDP.AddMemberAction.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.RemoveMemberAction.RDF_CLASS, LDP.RemoveMemberAction.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.Map.RDF_CLASS, LDP.Map.SCHEMA );\n\t\tthis.extendObjectSchema( LDP.ValidationError.RDF_CLASS, LDP.ValidationError.SCHEMA );\n\n\t\tthis.extendObjectSchema( Auth.Role.RDF_CLASS, Auth.Role.SCHEMA );\n\t\tthis.extendObjectSchema( Auth.ACE.RDF_CLASS, Auth.ACE.SCHEMA );\n\t\tthis.extendObjectSchema( Auth.ACL.RDF_CLASS, Auth.ACL.SCHEMA );\n\t\tthis.extendObjectSchema( Auth.User.RDF_CLASS, Auth.User.SCHEMA );\n\t\tthis.extendObjectSchema( Auth.Credentials.RDF_CLASS, Auth.Credentials.SCHEMA );\n\t\tthis.extendObjectSchema( Auth.Ticket.RDF_CLASS, Auth.Ticket.SCHEMA );\n\t\tthis.extendObjectSchema( Auth.Token.RDF_CLASS, Auth.Token.SCHEMA );\n\n\t\tthis.extendObjectSchema( SHACL.ValidationReport.RDF_CLASS, SHACL.ValidationReport.SCHEMA );\n\t\tthis.extendObjectSchema( SHACL.ValidationResult.RDF_CLASS, SHACL.ValidationResult.SCHEMA );\n\t}\n\n\tprivate resolveTypeURI( uri:string ):string {\n\t\tif( RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\t\tlet schema:ObjectSchema.DigestedObjectSchema = this.getObjectSchema();\n\t\tlet vocab:string;\n\t\tif( this.hasSetting( \"vocabulary\" ) ) vocab = this.resolve( this.getSetting( \"vocabulary\" ) );\n\n\n\t\tif( RDF.URI.Util.isPrefixed( uri ) ) {\n\t\t\turi = ObjectSchema.Digester.resolvePrefixedURI( uri, schema );\n\t\t} else if( vocab ) {\n\t\t\turi = vocab + uri;\n\t\t}\n\n\t\treturn uri;\n\t}\n}\n\nexport const instance:Class = new Class();\n\nexport default instance;\n"]}