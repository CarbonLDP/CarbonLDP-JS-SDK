{"version":3,"sources":["Apps/Roles.ts"],"names":[],"mappings":";AACA,IAAY,IAAI,WAAM,cAAc,CAAC,CAAA;AAmCpC,YAAI;AAhCL,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AACpC,IAAY,MAAM,WAAM,aAAa,CAAC,CAAA;AAEtC;IAGC,eAAa,OAAkB;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAID,sBAAM,GAAN,UAAQ,WAAe,EAAE,aAAyB;QACjD,IAAI,YAAY,GAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,IAAI,CAAC,eAAe,EAAE,CAAE,CAAC;QACzE,IAAI,IAAI,GAAU,KAAK,CAAC,QAAQ,CAAE,WAAW,CAAE,GAAG,WAAW,GAAG,IAAI,CAAC;QACrE,aAAa,GAAG,aAAa,IAAI,WAAW,CAAC;QAE7C,EAAE,CAAC,CAAE,CAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAE,aAAa,CAAG,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAO,IAAI,MAAM,CAAC,oBAAoB,CAAE,8DAA8D,CAAE,CAAE,CAAC;QAE1K,EAAE,CAAA,CAAE,IAAK,CAAC;YACT,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAE,YAAY,EAAE,IAAI,EAAE,aAAa,CAAE,CAAC;QAEhF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAE,YAAY,EAAE,aAAa,CAAE,CAAC;IAC1E,CAAC;IAEO,+BAAe,GAAvB;QACC,EAAE,CAAC,CAAE,CAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,+BAA+B,CAAG,CAAC;YAAC,MAAM,IAAI,MAAM,CAAC,iBAAiB,CAAE,+CAA+C,CAAE,CAAC;QAC1J,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,+BAA+B,CAAE,CAAC;IACnE,CAAC;IACF,YAAC;AAAD,CA1BA,AA0BC,IAAA;AA1BY,aAAK,QA0BjB,CAAA;AAMD;kBAAe,KAAK,CAAC","file":"Apps/Roles.js","sourcesContent":["import { Context as AppContext } from \"./../App\";\nimport * as Role from \"./Roles/Role\";\nimport * as Pointer from \"./../Pointer\";\nimport * as Response from \"./../HTTP/Response\";\nimport * as Utils from \"./../Utils\";\nimport * as Errors from \"./../Errors\";\n\nexport class Class {\n\tprivate context:AppContext;\n\n\tconstructor( context:AppContext ) {\n\t\tthis.context = context;\n\t}\n\n\tcreate( agentDocument:Role.Class ):Promise<[ Pointer.Class, Response.Class]>;\n\tcreate( slug:string, agentDocument:Role.Class ):Promise<[ Pointer.Class, Response.Class]>;\n\tcreate( slugOrAgent:any, agentDocument?:Role.Class ):Promise<[ Pointer.Class, Response.Class]> {\n\t\tlet containerURI:string = this.context.resolve( this.getContainerURI() );\n\t\tlet slug:string = Utils.isString( slugOrAgent ) ? slugOrAgent : null;\n\t\tagentDocument = agentDocument || slugOrAgent;\n\n\t\tif ( ! Role.Factory.is( agentDocument ) ) return Promise.reject<any>( new Errors.IllegalArgumentError( \"The Document is not a `Carbon.Apps.Roles.Role.Class` object.\" ) );\n\n\t\tif( slug )\n\t\t\treturn this.context.documents.createChild( containerURI, slug, agentDocument );\n\n\t\treturn this.context.documents.createChild( containerURI, agentDocument );\n\t}\n\n\tprivate getContainerURI():string {\n\t\tif ( ! this.context.hasSetting( \"platform.apps.roles.container\" ) ) throw new Errors.IllegalStateError( \"The apps roles container URI hasn't been set.\" );\n\t\treturn this.context.getSetting( \"platform.apps.roles.container\" );\n\t}\n}\n\nexport {\n\tRole,\n};\n\nexport default Class;\n"],"sourceRoot":"/source/"}