{"version":3,"sources":["Apps/Roles/Role.ts"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,eAAe,CAAC,CAAA;AACvC,IAAY,QAAQ,WAAM,kBAAkB,CAAC,CAAA;AAC7C,IAAY,EAAE,WAAM,YAAY,CAAC,CAAA;AAEjC,qCAAiC,qCAAqC,CAAC,CAAA;AAE1D,iBAAS,GAAU,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;AAEvC,cAAM,GAAsB;IACxC,MAAM,EAAE;QACP,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI;QAC3B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;CACD,CAAC;AAMF;IAAA;IA4BA,CAAC;IA3BO,0BAAkB,GAAzB,UAA2B,QAAe;QACzC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;IACrD,CAAC;IAEM,UAAE,GAAT,UAAW,MAAa;QACvB,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE;eAChD,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE;eACjB,MAAQ,CAAC,KAAK,CAAC,OAAO,CAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAE,KAAK,CAAC,CAAC,CAAC;IAC7E,CAAC;IAEM,cAAM,GAAb,UAAe,IAAW;QACzB,MAAM,CAAC,OAAO,CAAC,UAAU,CAAU,EAAE,EAAE,IAAI,CAAE,CAAC;IAC/C,CAAC;IAEM,kBAAU,GAAjB,UAAqC,MAAQ,EAAE,IAAW;QACzD,EAAE,CAAC,CAAE,CAAE,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAG,CAAC;YACrD,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;QAEhD,EAAE,CAAC,CAAE,CAAE,IAAK,CAAC;YAAC,MAAM,IAAI,8BAAoB,CAAE,2BAA2B,CAAE,CAAC;QAE5E,IAAI,GAAG,GAAyB,MAAM,CAAC;QACvC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;QAChB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAE,CAAC;QAEtC,MAAM,CAAC,GAAG,CAAC;IACZ,CAAC;IAEF,cAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BY,eAAO,UA4BnB,CAAA","file":"Apps/Roles/Role.js","sourcesContent":["import * as Utils from \"./../../Utils\";\nimport * as Document from \"./../../Document\";\nimport * as NS from \"./../../NS\";\nimport * as ObjectSchema from \"./../../ObjectSchema\";\nimport IllegalArgumentError from \"./../../Errors/IllegalArgumentError\";\n\nexport const RDF_CLASS:string = NS.CS.Class.AppRole;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"name\": {\n\t\t\"@id\": NS.CS.Predicate.name,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n};\n\nexport interface Class extends Document.Class {\n\tname:string;\n}\n\nexport class Factory {\n\tstatic hasClassProperties( resource:Object ):boolean {\n\t\treturn Utils.hasPropertyDefined( resource, \"name\" );\n\t}\n\n\tstatic is( object:Object ):boolean {\n\t\treturn Document.Factory.hasClassProperties( object )\n\t\t\t&& Factory.hasClassProperties( object )\n\t\t\t&& ( <Document.Class> object ).types.indexOf( NS.CS.Class.AppRole ) !== -1;\n\t}\n\n\tstatic create( name:string ):Class {\n\t\treturn Factory.createFrom<Object>( {}, name );\n\t}\n\n\tstatic createFrom<T extends Object>( object:T, name:string ):T & Class {\n\t\tif ( ! Document.Factory.hasClassProperties( object ) )\n\t\t\tobject = Document.Factory.createFrom( object );\n\n\t\tif ( ! name ) throw new IllegalArgumentError( \"The name cannot be empty.\" );\n\n\t\tlet app:T & Class = <T & Class> object;\n\t\tapp.name = name;\n\t\tapp.types.push( NS.CS.Class.AppRole );\n\n\t\treturn app;\n\t}\n\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}