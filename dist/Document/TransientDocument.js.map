{"version":3,"sources":["Document/TransientDocument.ts"],"names":[],"mappings":";;AAAA,0CAAmD;AAEnD,gCAGiB;AACjB,oCAAkD;AAKlD,oCAA4C;AAC5C,kDAG0B;AAC1B,gDAAwD;AACxD,sCAAsC;AACtC,8BAIgB;AAChB,wCAGqB;AACrB,wCAAgD;AAChD,kCAKkB;AAClB,gDAAoC;AA+CpC,2BAA4B,MAAU;IACrC,IAAI,IAAI,IAAI,MAAM;QAAG,OAAO,MAAM,CAAC,EAAE,CAAC;IAEtC,IAAI,MAAM,IAAI,MAAM;QAAG,OAAO,SAAG,CAAC,WAAW,CAAE,MAAM,CAAC,IAAI,CAAE,CAAC,CAAC;YAC7D,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;IAEjC,OAAO,EAAE,CAAC;AACX,CAAC;AAED,2BAA4B,QAA0B,EAAE,MAAa,EAAE,OAA+B;IAA/B,wBAAA,EAAA,cAA0B,GAAG,EAAE;IACrG,MAAM;SACJ,IAAI,CAAE,MAAM,CAAE;SACd,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,MAAM,CAAE,GAAG,CAAE,EAAb,CAAa,CAAE;SAC3B,OAAO,CAAE,UAAA,IAAI;QACb,IAAI,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE;YACxB,OAAO,iBAAiB,CAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAGrD,IAAI,CAAE,qBAAa,CAAE,IAAI,CAAE;YAAG,OAAO;QACrC,IAAI,yBAAiB,CAAC,EAAE,CAAE,IAAI,CAAE;YAAG,OAAO;QAC1C,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ;YAAG,OAAO;QAG3D,IAAM,QAAQ,GAAU,iBAAiB,CAAE,IAAI,CAAE,CAAC;QAClD,IAAI,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE;YAAG,OAAO;QACrC,IAAI,CAAE,CAAE,QAAQ,IAAI,CAAE,QAAQ,CAAC,OAAO,CAAE,QAAQ,CAAE;YAAG,OAAO;QAG5D,IAAM,QAAQ,GAAqB,QAAQ,CAAC,UAAU,CAAE,QAAQ,EAAE,IAAI,CAAE,CAAC,CAAC;YACzE,QAAQ,CAAC,UAAU,CAAE,QAAQ,EAAE,IAAI,CAAE,CAAC,CAAC;YACvC,QAAQ,CAAC,SAAS,CAAE,IAAI,CAAE,CAC1B;QAED,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAC,EAAE,CAAE,CAAC;QAC3B,iBAAiB,CAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAE,CAAC;IAClD,CAAC,CAAE,CACH;AACF,CAAC;AAUD,IAAM,SAAS,GAAgI;IAC9I,QAAQ,EAAE,KAAK,CAAC;IAChB,SAAS,EAAE,KAAK,CAAC;IAGjB,UAAU,EAAV;QACC,IAAM,aAAa,GAAe,IAAI,GAAG,EAAE,CAAC;QAC5C,iBAAiB,CAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAE,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAE,IAAI,CAAE;aACtB,GAAG,CAAE,iBAAO,CAAC,KAAK,CAAE;aACpB,MAAM,CAAE,SAAG,CAAC,SAAS,CAAE;aACvB,MAAM,CAAE,UAAA,EAAE,IAAI,OAAA,CAAE,aAAa,CAAC,GAAG,CAAE,EAAE,CAAE,EAAzB,CAAyB,CAAE;aACzC,OAAO,CAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAE,CACpC;IACF,CAAC;IAGD,WAAW,EAAX,UAAqC,EAAS;QAC7C,EAAE,GAAG,mBAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;QAErD,IAAI,SAAG,CAAC,SAAS,CAAE,EAAE,CAAE;YAAG,OAAO,EAAE,CAAC;QAEpC,IAAI,SAAG,CAAC,YAAY,CAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAE;YAAG,OAAO,SAAG,CAAC,WAAW,CAAE,EAAE,CAAE,CAAC;QAEnE,IAAI,SAAG,CAAC,UAAU,CAAE,EAAE,CAAE;YAAG,OAAO,EAAE,CAAC;QAErC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,SAAS,EAAT,UAAqD,IAAqC;QACzF,IAAI,IAAI,CAAC,IAAI;YAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,IAAI,CAAE,IAAI,CAAC,EAAE;YAAG,IAAI,CAAC,EAAE,GAAG,SAAG,CAAC,eAAe,EAAE,CAAC;QAEhD,IAAM,OAAO,GAAe,mBAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QAG5E,IAAI,SAAG,CAAC,SAAS,CAAE,OAAO,CAAC,EAAE,CAAE;YAC9B,OAAO,8BAAkB,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QAE/C,IAAM,QAAQ,GAA8B,sCAAsB,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACvF,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAE,QAAQ,CAAC,GAAG,CAAE,CAAC;QAEjD,OAAO,QAAQ,CAAC;IACjB,CAAC;IAGD,WAAW,EAAX,UAAqC,EAAS;QAC7C,IAAI,CAAE,IAAI,CAAC,OAAO,CAAE,EAAE,CAAE;YAAG,OAAO,KAAK,CAAC;QAExC,IAAM,OAAO,GAAU,IAAI,CAAC,WAAW,CAAE,EAAE,CAAE,CAAC;QAC9C,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;IAC1C,CAAC;IAGD,WAAW,EAAX,UAAuD,EAAS;QAC/D,IAAI,CAAE,IAAI,CAAC,OAAO,CAAE,EAAE,CAAE;YAAG,MAAM,IAAI,6BAAoB,CAAE,OAAK,EAAE,6CAA0C,CAAE,CAAC;QAE/G,IAAM,OAAO,GAAU,IAAI,CAAC,WAAW,CAAE,EAAE,CAAE,CAAC;QAE9C,IAAM,QAAQ,GAAqB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;QACrE,IAAI,CAAE,QAAQ;YAAG,OAAO,IAAI,CAAC;QAE7B,OAAO,QAAiC,CAAC;IAC1C,CAAC;IAED,gBAAgB,EAAhB,UAA4D,IAAW;QACtE,IAAI,SAAG,CAAC,SAAS,CAAE,IAAI,CAAE;YAAG,MAAM,IAAI,6BAAoB,CAAE,mCAAiC,IAAI,oCAA+B,CAAE,CAAC;QACnI,OAAO,IAAI,CAAC,WAAW,CAAE,IAAI,CAAE,CAAC;IACjC,CAAC;IAED,YAAY,EAAZ;QACC,OAAO,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAE,CAAC;IAClD,CAAC;IAGD,cAAc,EAAd,UAA0D,UAAsB,EAAE,EAAU;QAC3F,IAAM,MAAM,GAAoB,gBAAQ,CAAE,UAAU,CAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAO,CAAC;QAE9E,EAAE,GAAG,gBAAQ,CAAE,UAAU,CAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9C,IAAI,EAAE;YAAG,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;QAExB,IAAM,QAAQ,GAAyB,IAAI,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;QAEhE,yBAAiB,CAAC,qBAAqB,CAAE,IAAI,EAAE,QAAQ,CAAE,CAAC;QAC1D,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,mBAAmB,EAAnB,UAA+D,YAAuB,EAAE,IAAY;QACnG,IAAI,GAAG,gBAAQ,CAAE,YAAY,CAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;QAEtD,IAAI,CAAE,IAAI;YAAG,MAAM,IAAI,6BAAoB,CAAE,0BAA0B,CAAE,CAAC;QAC1E,IAAI,SAAG,CAAC,SAAS,CAAE,IAAI,CAAE;YAAG,MAAM,IAAI,6BAAoB,CAAE,mCAAiC,IAAI,oCAA+B,CAAE,CAAC;QAEnI,IAAM,MAAM,GAAK,gBAAQ,CAAE,YAAY,CAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAO,CAAC;QACnE,IAAM,IAAI,GAAyB,MAAM,CAAC,MAAM,CAAE,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE,CAAE,CAAC;QACrE,IAAM,QAAQ,GAA8B,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;QAEnE,yBAAiB,CAAC,qBAAqB,CAAE,IAAI,EAAE,QAAQ,CAAE,CAAC;QAC1D,OAAO,QAAQ,CAAC;IACjB,CAAC;IAGD,mBAAmB,EAAnB,UAA6C,cAA8C;QAC1F,IAAM,EAAE,GAAU,iBAAO,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;QAElD,IAAI,SAAG,CAAC,SAAS,CAAE,EAAE,CAAE;YAAG,MAAM,IAAI,6BAAoB,CAAE,OAAK,EAAE,sCAAmC,CAAE,CAAC;QACvG,OAAO,IAAI,CAAC,eAAe,CAAE,EAAE,CAAE,CAAC;IACnC,CAAC;IAED,eAAe,EAAf,UAAyC,cAAyC;QACjF,IAAI,CAAE,IAAI,CAAC,OAAO,CAAE,cAAc,CAAE;YAAG,OAAO,KAAK,CAAC;QACpD,OAAO,IAAI,CAAC,aAAa,CAAE,cAAc,CAAE,CAAC;IAC7C,CAAC;IAGD,MAAM,EAAN,UAAgC,aAAyC;QACxE,IAAM,QAAQ,GAAqB,gBAAQ,CAAE,aAAa,CAAE,CAAC,CAAC;YAC7D,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAEhC,IAAM,aAAa,GAAwB,QAAQ,CAAC,CAAC;YACpD,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,mCAAoB,EAAE,CAAC;QAE1D,IAAM,eAAe,GAAmB,QAAQ,CAAC,CAAC;YACjD,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,wBAAe,EAAE,CAAC;QAElD,IAAM,iBAAiB,GAAa,CAAE,IAAI,SAAK,IAAI,CAAC,YAAY,EAAE,EAChE,GAAG,CAAE,UAAA,QAAQ;YACb,IAAM,cAAc,GAAwB,QAAQ,CAAC,CAAC;gBACrD,QAAQ,CAAC,YAAY,CAAE,QAAQ,CAAE,CAAC,CAAC;gBACnC,IAAI,mCAAoB,EAAE,CAC1B;YAED,OAAO,eAAe,CAAC,MAAM,CAAE,QAAQ,EAAE,aAAa,EAAE,cAAc,CAAE,CAAC;QAC1E,CAAC,CAAE,CACH;QAED,OAAO;YACN,KAAK,EAAE,IAAI,CAAC,EAAE;YACd,QAAQ,EAAE,iBAAiB;SAC3B,CAAC;IACH,CAAC;CACD,CAAC;AA6BW,QAAA,iBAAiB,GAA4B;IACzD,SAAS,WAAA;IAET,IAAI,EAAE,gBAAC,CAAC,QAAQ;IAEhB,WAAW,EAAE,UAAE,MAAM;QACpB,OAAA,gBAAQ,CAAE,MAAM,CAAE;eACf,qBAAc;iBACf,iBAAiB,CAAE,SAAS,EAAE,MAAM,CAAE;IAFxC,CAEwC;IAGzC,EAAE,EAAE,UAAE,KAAK;QACV,OAAA,4BAAiB,CAAC,EAAE,CAAE,KAAK,CAAE;YAC7B,mBAAQ,CAAC,WAAW,CAAE,KAAK,CAAE;YAC7B,yBAAiB,CAAC,WAAW,CAAE,KAAK,CAAE;IAFtC,CAEsC;IAIvC,QAAQ,EAAR,UAA4B,MAAQ;QACnC,IAAI,yBAAiB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAE5D,IAAM,QAAQ,GAAiF,qBAAc;aAC3G,gBAAgB,CAAE,MAAM,EAAE,4BAAiB,EAAE,mBAAQ,CAAE,CAAC;QAE1D,OAAO,qBAAc;aACnB,oBAAoB,CAAE,SAAS,EAAE,QAAQ,CAAE,CAC3C;IACH,CAAC;IAED,UAAU,EAAE,UAAoB,MAAuB;QACtD,IAAI,yBAAiB,CAAC,EAAE,CAAE,MAAM,CAAE;YAAG,MAAM,IAAI,6BAAoB,CAAE,4CAA4C,CAAE,CAAC;QAEpH,IAAM,QAAQ,GAAyB,yBAAiB,CAAC,QAAQ,CAAK,MAAM,CAAE,CAAC;QAC/E,yBAAiB,CAAC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE9D,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,MAAM,EAAE,UAAoB,IAAsB;QACjD,IAAM,IAAI,GAAK,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QACzC,OAAO,yBAAiB,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;IAC7C,CAAC;IAGD,qBAAqB,EAArB,UAAyC,QAA0B,EAAE,MAAQ;QAC5E,iBAAiB,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;QACtC,OAAO,MAAM,CAAC;IACf,CAAC;CACD,CAAC","file":"TransientDocument.js","sourcesContent":["import { TransientBlankNode, } from \"../BlankNode\";\nimport { CarbonLDP } from \"../CarbonLDP\";\nimport {\n\tModelDecorator,\n\tModelFactory,\n} from \"../core\";\nimport { IllegalArgumentError, } from \"../Errors\";\nimport {\n\tBaseFragment,\n\tTransientFragment\n} from \"../Fragment\";\nimport { JSONLDConverter } from \"../JSONLD\";\nimport {\n\tBaseNamedFragment,\n\tTransientNamedFragment,\n} from \"../NamedFragment\";\nimport { DigestedObjectSchema, } from \"../ObjectSchema\";\nimport { Pointer, } from \"../Pointer\";\nimport {\n\tRDFDocument,\n\tRDFNode,\n\tURI,\n} from \"../RDF\";\nimport {\n\tDocumentsRegistry,\n\tRegistry\n} from \"../Registry\";\nimport { TransientResource } from \"../Resource\";\nimport {\n\tisObject,\n\tisPlainObject,\n\tisString,\n\tPickSelfProps,\n} from \"../Utils\";\nimport { C } from \"../Vocabularies\";\nimport { BaseDocument } from \"./BaseDocument\";\n\n\nexport interface TransientDocument extends TransientResource, Registry<TransientBlankNode | TransientNamedFragment> {\n\t_context:CarbonLDP | undefined;\n\t_registry:DocumentsRegistry | undefined;\n\n\tdefaultInteractionModel?:Pointer;\n\tisMemberOfRelation?:Pointer;\n\thasMemberRelation?:Pointer;\n\n\n\thasFragment( slug:string ):boolean;\n\n\n\tgetFragment<T extends object>( slug:string ):(T & TransientFragment) | null;\n\n\tgetNamedFragment<T extends object>( slug:string ):(T & TransientNamedFragment) | null;\n\n\tgetFragments():TransientFragment[];\n\n\n\tcreateFragment<T extends object>( object:T, slug?:string ):T & TransientFragment;\n\tcreateFragment( slug?:string ):TransientFragment;\n\n\tcreateNamedFragment<T extends object>( object:T, slug:string ):T & TransientNamedFragment;\n\tcreateNamedFragment( slug:string ):TransientNamedFragment;\n\n\n\tremoveNamedFragment( slugOrFragment:string | TransientNamedFragment ):boolean;\n\n\t_removeFragment( slugOrFragment:string | TransientFragment ):boolean;\n\n\n\t_normalize():void;\n\n\n\t_getLocalID( id:string ):string;\n\n\t_register<T extends object>( base:T & { id?:string } ):T & TransientFragment;\n\n\n\ttoJSON( registry?:DocumentsRegistry ):RDFDocument;\n}\n\n\nfunction getNestedObjectId( object:any ):string {\n\tif( \"id\" in object ) return object.id;\n\n\tif( \"slug\" in object ) return URI.hasFragment( object.slug ) ?\n\t\tobject.slug : \"#\" + object.slug;\n\n\treturn \"\";\n}\n\nfunction internalConverter( resource:TransientDocument, target:object, tracker:Set<string> = new Set() ):void {\n\tObject\n\t\t.keys( target )\n\t\t.map( key => target[ key ] )\n\t\t.forEach( next => {\n\t\t\tif( Array.isArray( next ) )\n\t\t\t\treturn internalConverter( resource, next, tracker );\n\n\n\t\t\tif( ! isPlainObject( next ) ) return;\n\t\t\tif( TransientDocument.is( next ) ) return;\n\t\t\tif( next._registry && next._registry !== resource ) return;\n\n\n\t\t\tconst idOrSlug:string = getNestedObjectId( next );\n\t\t\tif( tracker.has( idOrSlug ) ) return;\n\t\t\tif( ! ! idOrSlug && ! resource.inScope( idOrSlug ) ) return;\n\n\n\t\t\tconst fragment:TransientFragment = resource.hasPointer( idOrSlug, true ) ?\n\t\t\t\tresource.getPointer( idOrSlug, true ) :\n\t\t\t\tresource._register( next )\n\t\t\t;\n\n\t\t\ttracker.add( fragment.id );\n\t\t\tinternalConverter( resource, fragment, tracker );\n\t\t} )\n\t;\n}\n\n\ntype OverloadedProps =\n\t| \"_context\"\n\t| \"_registry\"\n\t| \"_getLocalID\"\n\t| \"_register\"\n\t;\n\nconst PROTOTYPE:PickSelfProps<TransientDocument, TransientResource & Registry<TransientBlankNode | TransientNamedFragment>, OverloadedProps> = {\n\t_context: void 0,\n\t_registry: void 0,\n\n\n\t_normalize( this:TransientDocument ):void {\n\t\tconst usedFragments:Set<string> = new Set();\n\t\tinternalConverter( this, this, usedFragments );\n\n\t\tthis.getPointers( true )\n\t\t\t.map( Pointer.getID )\n\t\t\t.filter( URI.isBNodeID )\n\t\t\t.filter( id => ! usedFragments.has( id ) )\n\t\t\t.forEach( this.removePointer, this )\n\t\t;\n\t},\n\n\n\t_getLocalID( this:TransientDocument, id:string ):string | null {\n\t\tid = Registry.PROTOTYPE._getLocalID.call( this, id );\n\n\t\tif( URI.isBNodeID( id ) ) return id;\n\n\t\tif( URI.isFragmentOf( id, this.id ) ) return URI.getFragment( id );\n\n\t\tif( URI.isRelative( id ) ) return id;\n\n\t\treturn null;\n\t},\n\n\t_register<T extends object>( this:TransientDocument, base:T & { id?:string, slug?:string } ):T & TransientFragment {\n\t\tif( base.slug ) base.id = base.slug;\n\t\tif( ! base.id ) base.id = URI.generateBNodeID();\n\n\t\tconst pointer:T & Pointer = Registry.PROTOTYPE._register.call( this, base );\n\n\n\t\tif( URI.isBNodeID( pointer.id ) )\n\t\t\treturn TransientBlankNode.decorate( pointer );\n\n\t\tconst resource:T & TransientNamedFragment = TransientNamedFragment.decorate( pointer );\n\t\tresource.slug = this._getLocalID( resource._id );\n\n\t\treturn resource;\n\t},\n\n\n\thasFragment( this:TransientDocument, id:string ):boolean {\n\t\tif( ! this.inScope( id ) ) return false;\n\n\t\tconst localID:string = this._getLocalID( id );\n\t\treturn this._resourcesMap.has( localID );\n\t},\n\n\n\tgetFragment<T extends object>( this:TransientDocument, id:string ):(T & TransientFragment) | null {\n\t\tif( ! this.inScope( id ) ) throw new IllegalArgumentError( `\"${ id }\" is outside the scope of the registry.` );\n\n\t\tconst localID:string = this._getLocalID( id );\n\n\t\tconst resource:TransientFragment = this._resourcesMap.get( localID );\n\t\tif( ! resource ) return null;\n\n\t\treturn resource as T & TransientFragment;\n\t},\n\n\tgetNamedFragment<T extends object>( this:TransientDocument, slug:string ):(T & TransientNamedFragment) | null {\n\t\tif( URI.isBNodeID( slug ) ) throw new IllegalArgumentError( `Invalid named fragment slug \"${ slug }\", it can't start with \"_:\".` );\n\t\treturn this.getFragment( slug );\n\t},\n\n\tgetFragments( this:TransientDocument ):TransientFragment[] {\n\t\treturn Array.from( this._resourcesMap.values() );\n\t},\n\n\n\tcreateFragment<T extends object>( this:TransientDocument, isOrObject?:string | T, id?:string ):T & TransientFragment {\n\t\tconst object:T & BaseFragment = isObject( isOrObject ) ? isOrObject : {} as T;\n\n\t\tid = isString( isOrObject ) ? isOrObject : id;\n\t\tif( id ) object.id = id;\n\n\t\tconst fragment:T & TransientFragment = this._register( object );\n\n\t\tTransientDocument._convertNestedObjects( this, fragment );\n\t\treturn fragment;\n\t},\n\n\tcreateNamedFragment<T extends object>( this:TransientDocument, slugOrObject:string | T, slug?:string ):T & TransientNamedFragment {\n\t\tslug = isString( slugOrObject ) ? slugOrObject : slug;\n\n\t\tif( ! slug ) throw new IllegalArgumentError( `The slug can't be empty.` );\n\t\tif( URI.isBNodeID( slug ) ) throw new IllegalArgumentError( `Invalid named fragment slug \"${ slug }\", it can't start with \"_:\".` );\n\n\t\tconst object:T = isObject( slugOrObject ) ? slugOrObject : {} as T;\n\t\tconst base:T & BaseNamedFragment = Object.assign( object, { slug } );\n\t\tconst fragment:T & TransientNamedFragment = this._register( base );\n\n\t\tTransientDocument._convertNestedObjects( this, fragment );\n\t\treturn fragment;\n\t},\n\n\n\tremoveNamedFragment( this:TransientDocument, fragmentOrSlug:TransientNamedFragment | string ):boolean {\n\t\tconst id:string = Pointer.getID( fragmentOrSlug );\n\n\t\tif( URI.isBNodeID( id ) ) throw new IllegalArgumentError( `\"${ id }\" is not a valid named fragment.` );\n\t\treturn this._removeFragment( id );\n\t},\n\n\t_removeFragment( this:TransientDocument, fragmentOrSlug:string | TransientFragment ):boolean {\n\t\tif( ! this.inScope( fragmentOrSlug ) ) return false;\n\t\treturn this.removePointer( fragmentOrSlug );\n\t},\n\n\n\ttoJSON( this:TransientDocument, registryOrKey?:DocumentsRegistry | string ):RDFDocument {\n\t\tconst registry:DocumentsRegistry = isObject( registryOrKey ) ?\n\t\t\tregistryOrKey : this._registry;\n\n\t\tconst generalSchema:DigestedObjectSchema = registry ?\n\t\t\tregistry.getGeneralSchema() : new DigestedObjectSchema();\n\n\t\tconst jsonldConverter:JSONLDConverter = registry ?\n\t\t\tregistry.jsonldConverter : new JSONLDConverter();\n\n\t\tconst expandedResources:RDFNode[] = [ this, ...this.getFragments(), ]\n\t\t\t.map( resource => {\n\t\t\t\tconst resourceSchema:DigestedObjectSchema = registry ?\n\t\t\t\t\tregistry.getSchemaFor( resource ) :\n\t\t\t\t\tnew DigestedObjectSchema()\n\t\t\t\t;\n\n\t\t\t\treturn jsonldConverter.expand( resource, generalSchema, resourceSchema );\n\t\t\t} )\n\t\t;\n\n\t\treturn {\n\t\t\t\"@id\": this.id,\n\t\t\t\"@graph\": expandedResources,\n\t\t};\n\t},\n};\n\n\nexport interface TransientDocumentFactory extends ModelFactory<TransientDocument>, ModelDecorator<TransientDocument> {\n\tPROTOTYPE:PickSelfProps<TransientDocument,\n\t\tTransientResource & Registry<TransientBlankNode | TransientNamedFragment>,\n\t\t| \"_context\"\n\t\t| \"_registry\"\n\t\t| \"_getLocalID\"\n\t\t| \"_register\">;\n\n\tTYPE:C[ \"Document\" ];\n\n\n\tis( value:any ):value is TransientDocument;\n\n\tisDecorated( object:object ):object is TransientDocument;\n\n\n\tcreate<T extends object>( data?:T & BaseDocument ):T & TransientDocument;\n\n\tcreateFrom<T extends object>( object:T & BaseDocument ):T & TransientDocument;\n\n\tdecorate<T extends object>( object:T ):T & TransientDocument;\n\n\n\t_convertNestedObjects<T extends object>( resource:TransientDocument, target:T ):T;\n}\n\nexport const TransientDocument:TransientDocumentFactory = {\n\tPROTOTYPE,\n\n\tTYPE: C.Document,\n\n\tisDecorated: ( object ):object is TransientDocument =>\n\t\tisObject( object )\n\t\t&& ModelDecorator\n\t\t\t.hasPropertiesFrom( PROTOTYPE, object )\n\t,\n\n\tis: ( value ):value is TransientDocument =>\n\t\tTransientResource.is( value ) &&\n\t\tRegistry.isDecorated( value ) &&\n\t\tTransientDocument.isDecorated( value )\n\t,\n\n\n\tdecorate<T extends object>( object:T ):T & TransientDocument {\n\t\tif( TransientDocument.isDecorated( object ) ) return object;\n\n\t\tconst resource:T & TransientResource & Registry<TransientBlankNode | TransientNamedFragment> = ModelDecorator\n\t\t\t.decorateMultiple( object, TransientResource, Registry );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( PROTOTYPE, resource )\n\t\t\t;\n\t},\n\n\tcreateFrom: <T extends object>( object:T & BaseDocument ) => {\n\t\tif( TransientDocument.is( object ) ) throw new IllegalArgumentError( \"The object provided is already a Document.\" );\n\n\t\tconst document:T & TransientDocument = TransientDocument.decorate<T>( object );\n\t\tTransientDocument._convertNestedObjects( document, document );\n\n\t\treturn document;\n\t},\n\n\tcreate: <T extends object>( data?:T & BaseDocument ) => {\n\t\tconst copy:T = Object.assign( {}, data );\n\t\treturn TransientDocument.createFrom( copy );\n\t},\n\n\n\t_convertNestedObjects<T extends object>( resource:TransientDocument, target:T ):T {\n\t\tinternalConverter( resource, target );\n\t\treturn target;\n\t},\n};\n"]}