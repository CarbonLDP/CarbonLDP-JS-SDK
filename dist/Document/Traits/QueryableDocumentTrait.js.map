{"version":3,"sources":["Document/Traits/QueryableDocumentTrait.ts"],"names":[],"mappings":";;AAEA,yDAAkE;AAIlE,6DAA4D;AAG5D,0EAAyE;AAKzE,uDAAsD;AA4DzC,QAAA,sBAAsB,GAAiC;IACnE,SAAS,EAAE;QACV,WAAW,EAAX,UAA4D,4BAAyE,EAAE,uBAA4D,EAAE,cAAkC;YAChO,IAAA,2EAAkF,EAAhF,cAAI,EAAE,gBAAK,CAAsE;YAGzF,MAAM,CAAC,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,WAAW,YAAE,IAAI,SAAK,KAAK,GAAG;;QACvD,CAAC;QAED,UAAU,EAAV,UAA2D,4BAAyE,EAAE,uBAA4D,EAAE,cAAkC;YAC/N,IAAA,2EAAkF,EAAhF,cAAI,EAAE,gBAAK,CAAsE;YAGzF,MAAM,CAAC,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,UAAU,YAAE,IAAI,SAAK,KAAK,GAAG;;QACtD,CAAC;QAGD,YAAY,EAAZ,UAA6D,YAAoC,EAAE,cAA8B;YAC1H,IAAA,2DAAkE,EAAhE,cAAI,EAAE,gBAAK,CAAsD;YAGzE,MAAM,CAAC,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,YAAY,YAAE,IAAI,SAAK,KAAK,GAAG;;QACxD,CAAC;QAED,WAAW,EAAX,UAA4D,YAAoC,EAAE,cAA8B;YACzH,IAAA,2DAAkE,EAAhE,cAAI,EAAE,gBAAK,CAAsD;YAGzE,MAAM,CAAC,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,WAAW,YAAE,IAAI,SAAK,KAAK,GAAG;;QACvD,CAAC;KACD;IAGD,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,+BAAc;aACnB,iBAAiB,CAAE,8BAAsB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IACjE,CAAC;IAED,QAAQ,EAAR,UAAgD,MAAQ;QACvD,EAAE,CAAA,CAAE,8BAAsB,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAGjE,IAAM,MAAM,GAAW,MAAiB,CAAC;QAEzC,IAAM,MAAM,GAAiD,+BAAc;aACzE,gBAAgB,CAAE,MAAM,EAAE,mCAAgB,EAAE,mCAAgB,CAAE,CAAC;QAEjE,MAAM,CAAC,+BAAc;aACnB,oBAAoB,CAAE,8BAAsB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IACpE,CAAC;CACD,CAAC","file":"QueryableDocumentTrait.js","sourcesContent":["import { QueryableDocumentsRepositoryTrait } from \"../../DocumentsRepository/Traits/QueryableDocumentsRepositoryTrait\";\n\nimport { _parseURIParams } from \"../../DocumentsRepository/Utils\";\n\nimport { GETOptions, RequestOptions } from \"../../HTTP/Request\";\n\nimport { ModelDecorator } from \"../../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../../Model/ModelPrototype\";\n\nimport { QueryablePointer } from \"../../QueryDocuments/QueryablePointer\";\nimport { QueryDocumentBuilder } from \"../../QueryDocuments/QueryDocumentBuilder\";\nimport { QueryDocumentsBuilder } from \"../../QueryDocuments/QueryDocumentsBuilder\";\n\nimport { Document } from \"../Document\";\nimport { LDPDocumentTrait } from \"./LDPDocumentTrait\";\n\n\nexport interface BaseQueryableDocumentTrait {\n\t$repository:QueryableDocumentsRepositoryTrait;\n}\n\nexport interface QueryableDocumentTrait extends LDPDocumentTrait, QueryablePointer {\n\t$repository:QueryableDocumentsRepositoryTrait;\n\n\n\tget<T extends object>( queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tget<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tget<T extends object>( uri:string, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tget<T extends object>( uri:string, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\tresolve<T extends object>( queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & this & Document>;\n\tresolve<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & this & Document>;\n\tresolve<T extends object>( document:Document, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tresolve<T extends object>( document:Document, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\n\tgetChildren<T extends object>( requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetChildren<T extends object>( queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetChildren<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetChildren<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\tgetMembers<T extends object>( requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetMembers<T extends object>( queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetMembers<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetMembers<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\n\tlistChildren<T extends object>( requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\tlistChildren<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\n\tlistMembers<T extends object>( requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\tlistMembers<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n}\n\n\ntype QueryDocsBuilderFn = Function & (( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder);\n\ntype ForcedMembers = {\n\tget<T extends object>( queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tget<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tget<T extends object>( uri:string, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tget<T extends object>( uri:string, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\tresolve<T extends object>( queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tresolve<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tresolve<T extends object>( document:Document, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tresolve<T extends object>( document:Document, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n};\n\nexport type QueryableDocumentTraitFactory =\n\t& ModelPrototype<QueryableDocumentTrait, LDPDocumentTrait & QueryablePointer>\n\t& ModelDecorator<QueryableDocumentTrait, BaseQueryableDocumentTrait>\n\t;\n\nexport const QueryableDocumentTrait:QueryableDocumentTraitFactory = {\n\tPROTOTYPE: {\n\t\tgetChildren<T extends object>( this:QueryableDocumentTrait, uriOrQueryBuilderFnOrOptions:string | QueryDocsBuilderFn | RequestOptions, queryBuilderFnOrOptions?:QueryDocsBuilderFn | RequestOptions, queryBuilderFn?:QueryDocsBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrQueryBuilderFnOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.getChildren( _uri, ..._args );\n\t\t},\n\n\t\tgetMembers<T extends object>( this:QueryableDocumentTrait, uriOrQueryBuilderFnOrOptions:string | QueryDocsBuilderFn | RequestOptions, queryBuilderFnOrOptions?:QueryDocsBuilderFn | RequestOptions, queryBuilderFn?:QueryDocsBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrQueryBuilderFnOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.getMembers( _uri, ..._args );\n\t\t},\n\n\n\t\tlistChildren<T extends object>( this:QueryableDocumentTrait, uriOrOptions:string | RequestOptions, requestOptions?:RequestOptions ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.listChildren( _uri, ..._args );\n\t\t},\n\n\t\tlistMembers<T extends object>( this:QueryableDocumentTrait, uriOrOptions:string | RequestOptions, requestOptions?:RequestOptions ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.listMembers( _uri, ..._args );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is QueryableDocumentTrait {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( QueryableDocumentTrait.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseQueryableDocumentTrait>( object:T ):T & QueryableDocumentTrait {\n\t\tif( QueryableDocumentTrait.isDecorated( object ) ) return object;\n\n\t\ttype ForcedT = T & ForcedMembers;\n\t\tconst forced:ForcedT = object as ForcedT;\n\n\t\tconst target:ForcedT & LDPDocumentTrait & QueryablePointer = ModelDecorator\n\t\t\t.decorateMultiple( forced, LDPDocumentTrait, QueryablePointer );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( QueryableDocumentTrait.PROTOTYPE, target );\n\t},\n};\n"]}