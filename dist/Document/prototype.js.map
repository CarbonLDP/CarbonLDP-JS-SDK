{"version":3,"sources":["Document/prototype.ts"],"names":[],"mappings":"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","file":"prototype.js","sourcesContent":["import * as BlankNode from \"../BlankNode\";\nimport * as Errors from \"../Errors\";\nimport * as Fragment from \"../Fragment\";\nimport * as JSONLDConverter from \"../JSONLD/Converter\";\nimport * as NamedFragment from \"../NamedFragment\";\nimport * as ObjectSchema from \"../ObjectSchema\";\nimport * as Pointer from \"../Pointer\";\nimport * as RDF from \"../RDF\";\nimport * as Utils from \"../Utils\";\n\nimport { Document } from \"./\";\n\nexport function hasPointer( this:Document, id:string ):boolean {\n\tif( id === this.id ) return true;\n\tif( ! this.inScope( id ) ) return false;\n\n\treturn this.hasFragment( id );\n}\n\nexport function getPointer( this:Document, id:string ):Pointer.Class {\n\tif( ! this.inScope( id ) ) return null;\n\tif( id === this.id ) return this;\n\n\treturn this.hasFragment( id ) ?\n\t\tthis.getFragment( id ) :\n\t\tthis.createFragment( id );\n}\n\nexport function inScope( this:Document, idOrPointer:string | Pointer.Class ):boolean {\n\tconst id:string = Pointer.Factory.is( idOrPointer ) ? idOrPointer.id : idOrPointer;\n\n\tif( id === this.id ) return true;\n\tif( RDF.URI.Util.isBNodeID( id ) ) return true;\n\tif( RDF.URI.Util.isFragmentOf( id, this.id ) ) return true;\n\treturn id.startsWith( \"#\" );\n}\n\nexport function hasFragment( this:Document, id:string ):boolean {\n\tif( RDF.URI.Util.isAbsolute( id ) ) {\n\t\tif( ! RDF.URI.Util.isFragmentOf( id, this.id ) ) return false;\n\t\tid = RDF.URI.Util.hasFragment( id ) ? RDF.URI.Util.getFragment( id ) : id;\n\t} else if( Utils.S.startsWith( id, \"#\" ) ) {\n\t\tid = id.substring( 1 );\n\t}\n\n\treturn this._fragmentsIndex.has( id );\n}\n\nexport function getFragment( this:Document, id:string ):Fragment.Class {\n\tif( ! RDF.URI.Util.isBNodeID( id ) ) return this.getNamedFragment( id );\n\treturn this._fragmentsIndex.get( id ) || null;\n}\n\nexport function getNamedFragment( this:Document, id:string ):NamedFragment.Class {\n\tif( RDF.URI.Util.isBNodeID( id ) ) throw new Errors.IllegalArgumentError( \"Named fragments can't have a id that starts with '_:'.\" );\n\tif( RDF.URI.Util.isAbsolute( id ) ) {\n\t\tif( ! RDF.URI.Util.isFragmentOf( id, this.id ) ) throw new Errors.IllegalArgumentError( \"The id is out of scope.\" );\n\t\tid = RDF.URI.Util.hasFragment( id ) ? RDF.URI.Util.getFragment( id ) : id;\n\t} else if( Utils.S.startsWith( id, \"#\" ) ) {\n\t\tid = id.substring( 1 );\n\t}\n\n\treturn <NamedFragment.Class> this._fragmentsIndex.get( id ) || null;\n}\n\nexport function getFragments( this:Document ):Fragment.Class[] {\n\treturn Utils.A.from( this._fragmentsIndex.values() );\n}\n\nexport function createFragment<T extends object>( object:T, slug?:string ):T & Fragment.Class;\nexport function createFragment( slug?:string ):Fragment.Class;\nexport function createFragment<T extends object>( this:Document, slugOrObject?:any, slug?:string ):T & Fragment.Class {\n\tslug = Utils.isString( slugOrObject ) ? slugOrObject : slug;\n\tconst object:T = ! Utils.isString( slugOrObject ) && ! ! slugOrObject ? slugOrObject : <T> {};\n\n\tif( slug ) {\n\t\tif( ! RDF.URI.Util.isBNodeID( slug ) ) return this.createNamedFragment<T>( object, slug );\n\t\tif( this._fragmentsIndex.has( slug ) ) throw new Errors.IDAlreadyInUseError( \"The slug provided is already being used by a fragment.\" );\n\t}\n\n\tconst fragment:T & BlankNode.Class = BlankNode.Factory.createFrom<T>( object, slug, this );\n\tthis._fragmentsIndex.set( fragment.id, fragment );\n\n\tconvertNestedObjects( this, fragment );\n\treturn fragment;\n}\n\nexport function createNamedFragment<T extends Object>( object:T, slug:string ):NamedFragment.Class & T;\nexport function createNamedFragment( slug:string ):NamedFragment.Class;\nexport function createNamedFragment<T extends Object>( this:Document, slugOrObject:any, slug?:string ):T & NamedFragment.Class {\n\tslug = Utils.isString( slugOrObject ) ? slugOrObject : slug;\n\tconst object:T = ! Utils.isString( slugOrObject ) && ! ! slugOrObject ? slugOrObject : <T> {};\n\n\tif( RDF.URI.Util.isBNodeID( slug ) ) throw new Errors.IllegalArgumentError( \"Named fragments can't have a slug that starts with '_:'.\" );\n\n\tif( RDF.URI.Util.isAbsolute( slug ) ) {\n\t\tif( ! RDF.URI.Util.isFragmentOf( slug, this.id ) ) throw new Errors.IllegalArgumentError( \"The slug is out of scope.\" );\n\t\tslug = RDF.URI.Util.hasFragment( slug ) ? RDF.URI.Util.getFragment( slug ) : slug;\n\t} else if( Utils.S.startsWith( slug, \"#\" ) ) slug = slug.substring( 1 );\n\n\tif( this._fragmentsIndex.has( slug ) ) throw new Errors.IDAlreadyInUseError( \"The slug provided is already being used by a fragment.\" );\n\n\tconst fragment:T & NamedFragment.Class = NamedFragment.Factory.createFrom<T>( object, slug, this );\n\tthis._fragmentsIndex.set( slug, fragment );\n\n\tconvertNestedObjects( this, fragment );\n\treturn fragment;\n}\n\nexport function removeFragment( this:Document, fragmentOrSlug:string | Fragment.Class ):void {\n\tlet id:string = Utils.isString( fragmentOrSlug ) ? fragmentOrSlug : fragmentOrSlug.id;\n\n\tif( RDF.URI.Util.isAbsolute( id ) ) {\n\t\tif( ! RDF.URI.Util.isFragmentOf( id, this.id ) ) return;\n\t\tid = RDF.URI.Util.hasFragment( id ) ? RDF.URI.Util.getFragment( id ) : id;\n\t} else if( Utils.S.startsWith( id, \"#\" ) ) {\n\t\tid = id.substring( 1 );\n\t}\n\n\tthis._fragmentsIndex.delete( id );\n}\n\nexport function removeNamedFragment( this:Document, fragmentOrSlug:NamedFragment.Class | string ):void {\n\tconst id:string = Utils.isString( fragmentOrSlug ) ? fragmentOrSlug : fragmentOrSlug.id;\n\n\tif( RDF.URI.Util.isBNodeID( id ) ) throw new Errors.IllegalArgumentError( \"You can only remove NamedFragments.\" );\n\tthis._removeFragment( id );\n}\n\nexport function toJSON( this:Document, key:string ):RDF.Document.Class;\nexport function toJSON( this:Document, objectSchemaResolver?:ObjectSchema.Resolver, jsonldConverter?:JSONLDConverter.Class ):RDF.Document.Class;\nexport function toJSON( this:Document, keyOrObjectSchemaResolver?:string | ObjectSchema.Resolver, jsonldConverter:JSONLDConverter.Class = new JSONLDConverter.Class() ):RDF.Document.Class {\n\tconst objectSchemaResolver:ObjectSchema.Resolver = Utils.isObject( keyOrObjectSchemaResolver ) ? keyOrObjectSchemaResolver : null;\n\tconst generalSchema:ObjectSchema.DigestedObjectSchema = objectSchemaResolver ?\n\t\tobjectSchemaResolver.getGeneralSchema() : new ObjectSchema.DigestedObjectSchema();\n\n\tconst resources:object[] = [ this, ...this.getFragments() ];\n\tconst expandedResources:RDF.Node.Class[] = resources.map( resource => {\n\t\tconst resourceSchema:ObjectSchema.DigestedObjectSchema = objectSchemaResolver ? objectSchemaResolver.getSchemaFor( resource ) : new ObjectSchema.DigestedObjectSchema();\n\t\treturn jsonldConverter.expand( resource, generalSchema, resourceSchema );\n\t} );\n\n\treturn {\n\t\t\"@id\": this.id,\n\t\t\"@graph\": expandedResources,\n\t};\n}\n\nexport function normalize( this:Document ):void {\n\tconst currentFragments:Fragment.Class[] = this.getFragments()\n\t\t.filter( fragment => RDF.URI.Util.isBNodeID( fragment.id ) );\n\tconst usedFragmentsIDs:Set<string> = new Set();\n\n\tconvertNestedObjects( this, this, usedFragmentsIDs );\n\tcurrentFragments.forEach( fragment => {\n\t\tif( usedFragmentsIDs.has( fragment.id ) ) return;\n\t\tthis._fragmentsIndex.delete( fragment.id );\n\t} );\n}\n\nexport const convertNestedObjects:( parent:Document, actual:any, fragmentsTracker?:Set<string> ) => void = ( parent, actual, fragmentsTracker = new Set() ) => {\n\tlet next:any;\n\tlet idOrSlug:string;\n\tlet fragment:Fragment.Class;\n\n\tlet keys:string[] = Object.keys( actual );\n\tfor( let key of keys ) {\n\t\tnext = actual[ key ];\n\n\t\tif( Utils.isArray( next ) ) {\n\t\t\tconvertNestedObjects( parent, next, fragmentsTracker );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( ! Utils.isPlainObject( next ) ) continue;\n\t\tif( Pointer.Factory.is( next ) ) {\n\t\t\tif( parent.hasFragment( next.id ) && ! fragmentsTracker.has( next.id ) ) {\n\t\t\t\tfragmentsTracker.add( next.id );\n\t\t\t\tconvertNestedObjects( parent, next, fragmentsTracker );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tidOrSlug = ( \"id\" in next ) ? next.id : ( ( \"slug\" in next ) ? RDF.URI.Util.hasFragment( next.slug ) ? next.slug : \"#\" + next.slug : \"\" );\n\t\tif( ! ! idOrSlug && ! parent.inScope( idOrSlug ) ) continue;\n\n\t\tlet parentFragment:Fragment.Class = parent.getFragment( idOrSlug );\n\n\t\tif( ! parentFragment ) {\n\t\t\tfragment = parent.createFragment( <Object> next, idOrSlug );\n\t\t\tconvertNestedObjects( parent, fragment, fragmentsTracker );\n\n\t\t} else if( parentFragment !== next ) {\n\t\t\tObject.assign( parentFragment, next );\n\t\t\tfragment = actual[ key ] = parentFragment;\n\t\t\tconvertNestedObjects( parent, fragment, fragmentsTracker );\n\t\t}\n\n\t}\n\n};\n"]}