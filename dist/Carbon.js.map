{"version":3,"sources":["Carbon.ts"],"names":[],"mappings":"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","file":"Carbon.js","sourcesContent":["import * as SockJS from \"sockjs-client\";\nimport * as webstomp from \"webstomp-client\";\nimport { Client, Frame } from \"webstomp-client\";\n\nimport * as AbstractContext from \"./AbstractContext\";\nimport * as AccessPoint from \"./AccessPoint\";\nimport * as Auth from \"./Auth\";\nimport * as Document from \"./Document\";\nimport * as Documents from \"./Documents\";\nimport * as Errors from \"./Errors\";\nimport * as Fragment from \"./Fragment\";\nimport * as HTTP from \"./HTTP\";\nimport * as JSONLD from \"./JSONLD\";\nimport * as LDP from \"./LDP\";\nimport * as Messaging from \"./Messaging\";\nimport * as NamedFragment from \"./NamedFragment\";\nimport * as NS from \"./NS\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as PersistedDocument from \"./PersistedDocument\";\nimport * as PersistedFragment from \"./PersistedFragment\";\nimport * as PersistedNamedFragment from \"./PersistedNamedFragment\";\nimport * as PersistedResource from \"./PersistedResource\";\nimport * as Pointer from \"./Pointer\";\nimport * as RDF from \"./RDF\";\nimport * as Resource from \"./Resource\";\nimport * as SDKContext from \"./SDKContext\";\nimport * as Settings from \"./Settings\";\nimport * as SPARQL from \"./SPARQL\";\nimport * as System from \"./System\";\nimport * as Utils from \"./Utils\";\n\n// Fix of incorrect webstomp-client typings\ndeclare module \"webstomp-client\" {\n\t// noinspection TsLint\n\texport interface Client {\n\t\tconnected:boolean;\n\n\t\tconnect( headers:ConnectionHeaders, connectCallback:( frame?:Frame ) => any, errorCallback?:( error:Frame | CloseEvent ) => any ):void;\n\t}\n\n\t// noinspection TsLint\n\texport interface Frame {\n\t\tcommand:string;\n\t\tbody:string;\n\t\theaders:ExtendedHeaders,\n\t}\n}\n\nexport class Class extends AbstractContext.Class {\n\n\t/* tslint:disable: variable-name */\n\tstatic AccessPoint:typeof AccessPoint = AccessPoint;\n\tstatic Auth:typeof Auth = Auth;\n\tstatic Document:typeof Document = Document;\n\tstatic Documents:typeof Documents = Documents;\n\tstatic Errors:typeof Errors = Errors;\n\tstatic Fragment:typeof Fragment = Fragment;\n\tstatic HTTP:typeof HTTP = HTTP;\n\tstatic JSONLD:typeof JSONLD = JSONLD;\n\tstatic LDP:typeof LDP = LDP;\n\tstatic Messaging:typeof Messaging = Messaging;\n\tstatic NamedFragment:typeof NamedFragment = NamedFragment;\n\tstatic NS:typeof NS = NS;\n\tstatic ObjectSchema:typeof ObjectSchema = ObjectSchema;\n\tstatic PersistedDocument:typeof PersistedDocument = PersistedDocument;\n\tstatic PersistedFragment:typeof PersistedFragment = PersistedFragment;\n\tstatic PersistedNamedFragment:typeof PersistedNamedFragment = PersistedNamedFragment;\n\tstatic PersistedResource:typeof PersistedResource = PersistedResource;\n\tstatic Pointer:typeof Pointer = Pointer;\n\tstatic RDF:typeof RDF = RDF;\n\tstatic Resource:typeof Resource = Resource;\n\tstatic SDKContext:typeof SDKContext = SDKContext;\n\tstatic Settings:typeof Settings = Settings;\n\tstatic SPARQL:typeof SPARQL = SPARQL;\n\tstatic System:typeof System = System;\n\tstatic Utils:typeof Utils = Utils;\n\n\t/* tslint:enable: variable-name */\n\n\tstatic get version():string { return \"1.0.0-alpha.1\"; }\n\n\t// noinspection JSMethodCanBeStatic\n\tget version():string { return Class.version; }\n\n\tprotected _baseURI:string;\n\n\tprotected _messagingOptions?:Messaging.Options;\n\tprotected _messagingClient?:Client;\n\tget messagingClient():Client { return this._messagingClient; }\n\n\tconstructor( domain:string, ssl?:boolean, settings?:Settings.Class );\n\tconstructor( domain:string, ssl:boolean = true, settings?:Settings.Class ) {\n\t\tsuper();\n\t\tdomain = RDF.URI.Util.hasProtocol( domain ) ? RDF.URI.Util.removeProtocol( domain ) : domain;\n\t\tdomain = Utils.S.endsWith( domain, \"/\" ) ? domain : domain + \"/\";\n\t\tthis._baseURI = ( ssl ? \"https://\" : \"http://\" ) + domain;\n\n\t\tsettings = settings ? Utils.extend( {}, Settings.defaultSettings, settings ) : Settings.defaultSettings;\n\t\tUtils.M.extend( this.settings, Utils.M.from( settings ) );\n\t}\n\n\t/**\n\t * Retrieves the Metadata related to the CarbonLDP Platform.\n\t */\n\tgetPlatformMetadata():Promise<System.PlatformMetadata.Class> {\n\t\treturn this.getDocumentMetadata<System.PlatformMetadata.Class>( \"system.platform.metadata\" );\n\t}\n\n\t/**\n\t * Retrieves the Metadata related to your instance of the Carbon LDP Platform.\n\t */\n\tgetInstanceMetadata():Promise<System.InstanceMetadata.Class> {\n\t\treturn this.getDocumentMetadata<System.InstanceMetadata.Class>( \"system.instance.metadata\" );\n\t}\n\n\tconnectMessaging( options:Messaging.Options, onConnect:() => void, onError?:( error:Error ) => void ):void;\n\tconnectMessaging( onConnect:() => void, onError?:( error:Error ) => void ):void;\n\tconnectMessaging( optionsOrOnConnect:Messaging.Options | ( () => void ), onConnectOrOnError?:( () => void ) | ( ( error:Error ) => void ), onError?:( error:Error ) => void ):void {\n\t\tif( ! onError ) onError = onConnectOrOnError;\n\t\tif( this._messagingClient ) {\n\t\t\tconst error:Error = new Errors.IllegalStateError( \"The messaging service is already connected.\" );\n\t\t\tif( onError ) onError( error );\n\t\t\tthrow error;\n\t\t}\n\n\t\tthis._messagingOptions = {\n\t\t\tmaxReconnectAttempts: 10,\n\t\t\treconnectDelay: 1000,\n\t\t\t...Utils.isObject( optionsOrOnConnect ) ? optionsOrOnConnect : {},\n\t\t};\n\n\t\tconst onConnect:() => void = Utils.isFunction( optionsOrOnConnect ) ? optionsOrOnConnect : onConnectOrOnError as () => void;\n\t\tonError = onConnectOrOnError ? onConnectOrOnError : ( error:Error ):void => {\n\t\t\t// TODO: Broadcast the error\n\t\t};\n\n\t\tconst sock:SockJS.Socket = new SockJS( this.resolve( \"/broker\" ) );\n\t\tthis._messagingClient = webstomp.over( sock, {\n\t\t\tprotocols: webstomp.VERSIONS.supportedProtocols(),\n\t\t\tdebug: false,\n\t\t\theartbeat: false,\n\t\t\tbinary: false,\n\t\t} );\n\t\tthis._messagingClient.connect( {}, () => {\n\t\t\tonConnect.call( void 0 );\n\t\t}, ( errorFrameOrEvent:Frame | CloseEvent ) => {\n\t\t\tlet errorMessage:string;\n\t\t\tif( isCloseError( errorFrameOrEvent ) ) {\n\t\t\t\t// TODO: Detect connection error to reconnect messaging\n\t\t\t\tthis._messagingClient = null;\n\t\t\t\terrorMessage = `CloseEventError: ${ errorFrameOrEvent.reason }`;\n\t\t\t} else if( isFrameError( errorFrameOrEvent ) ) {\n\t\t\t\terrorMessage = `${ errorFrameOrEvent.headers[ \"message\" ]}: ${ errorFrameOrEvent.body.trim() }`;\n\t\t\t} else {\n\t\t\t\terrorMessage = `Unknown error: ${ errorFrameOrEvent }`;\n\t\t\t}\n\t\t\tonError( new Error( errorMessage ) );\n\t\t} );\n\t}\n\n\tprivate getDocumentMetadata<T>( metadataSetting:\"system.platform.metadata\" | \"system.instance.metadata\" ):Promise<T> {\n\t\tif( ! this.hasSetting( metadataSetting ) )\n\t\t\treturn Promise.reject( new Errors.IllegalStateError( `The \"${ metadataSetting }\" setting hasn't been defined.` ) );\n\n\t\treturn Promise.resolve()\n\t\t\t.then( () => this.resolveSystemURI( this.getSetting( metadataSetting ) ) )\n\t\t\t.then( metadataURI => this.documents.get<T>( metadataURI ) )\n\t\t\t.then( ( [ metadataDocument ] ) => metadataDocument );\n\t}\n}\n\nfunction isCloseError( object:any ):object is CloseEvent {\n\treturn \"reason\" in object;\n}\n\nfunction isFrameError( object:any ):object is Frame {\n\treturn \"body\" in object;\n}\n\nexport default Class;\n"]}