{"version":3,"sources":["Carbon.ts"],"names":[],"mappings":"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","file":"Carbon.js","sourcesContent":["import * as AbstractContext from \"./AbstractContext\";\nimport * as AccessPoint from \"./AccessPoint\";\nimport * as Auth from \"./Auth\";\nimport * as Document from \"./Document\";\nimport * as Documents from \"./Documents\";\nimport * as Errors from \"./Errors\";\nimport * as Fragment from \"./Fragment\";\nimport * as HTTP from \"./HTTP\";\nimport * as JSONLD from \"./JSONLD\";\nimport * as LDP from \"./LDP\";\nimport * as NamedFragment from \"./NamedFragment\";\nimport * as NS from \"./NS\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as PersistedDocument from \"./PersistedDocument\";\nimport * as PersistedFragment from \"./PersistedFragment\";\nimport * as PersistedNamedFragment from \"./PersistedNamedFragment\";\nimport * as PersistedResource from \"./PersistedResource\";\nimport * as Pointer from \"./Pointer\";\nimport * as RDF from \"./RDF\";\nimport * as Resource from \"./Resource\";\nimport * as SDKContext from \"./SDKContext\";\nimport * as Settings from \"./Settings\";\nimport * as SPARQL from \"./SPARQL\";\nimport * as System from \"./System\";\nimport * as Utils from \"./Utils\";\n\nexport class Class extends AbstractContext.Class {\n\n\t/* tslint:disable: variable-name */\n\tstatic AccessPoint:typeof AccessPoint = AccessPoint;\n\tstatic Auth:typeof Auth = Auth;\n\tstatic Document:typeof Document = Document;\n\tstatic Documents:typeof Documents = Documents;\n\tstatic Errors:typeof Errors = Errors;\n\tstatic Fragment:typeof Fragment = Fragment;\n\tstatic HTTP:typeof HTTP = HTTP;\n\tstatic JSONLD:typeof JSONLD = JSONLD;\n\tstatic LDP:typeof LDP = LDP;\n\tstatic NamedFragment:typeof NamedFragment = NamedFragment;\n\tstatic NS:typeof NS = NS;\n\tstatic ObjectSchema:typeof ObjectSchema = ObjectSchema;\n\tstatic PersistedDocument:typeof PersistedDocument = PersistedDocument;\n\tstatic PersistedFragment:typeof PersistedFragment = PersistedFragment;\n\tstatic PersistedNamedFragment:typeof PersistedNamedFragment = PersistedNamedFragment;\n\tstatic PersistedResource:typeof PersistedResource = PersistedResource;\n\tstatic Pointer:typeof Pointer = Pointer;\n\tstatic RDF:typeof RDF = RDF;\n\tstatic Resource:typeof Resource = Resource;\n\tstatic SDKContext:typeof SDKContext = SDKContext;\n\tstatic Settings:typeof Settings = Settings;\n\tstatic SPARQL:typeof SPARQL = SPARQL;\n\tstatic System:typeof System = System;\n\tstatic Utils:typeof Utils = Utils;\n\t/* tslint:enable: variable-name */\n\n\tstatic get version():string { return \"0.42.0\"; }\n\n\tget version():string { return Class.version; }\n\n\tprivate domain:string;\n\tprivate ssl:boolean;\n\n\tconstructor( domain:string, ssl?:boolean );\n\tconstructor( domain:string, ssl?:boolean, settings?:Settings.Class );\n\tconstructor( domain:string, ssl?:boolean, settings?:Settings.Class ) {\n\t\tsuper();\n\n\t\tthis.domain = domain;\n\t\tthis.ssl = ssl;\n\n\t\tsettings = settings ? Utils.extend( {}, Settings.defaultSettings, settings ) : Settings.defaultSettings;\n\t\tUtils.M.extend( this.settings, Utils.M.from( settings ) );\n\t}\n\n\tresolve( relativeURI:string ):string {\n\t\tif( RDF.URI.Util.isAbsolute( relativeURI ) ) return relativeURI;\n\n\t\tlet baseURI:string = ( this.ssl ? \"https://\" : \"http://\" ) + this.domain;\n\t\treturn RDF.URI.Util.resolve( baseURI, relativeURI );\n\t}\n\n\t/**\n\t * Retrieves the Metadata related to the CarbonLDP Platform.\n\t */\n\tgetPlatformMetadata():Promise<System.PlatformMetadata.Class> {\n\t\treturn this.getResourceMetadata<System.PlatformMetadata.Class>( \"system.platform.metadata\" );\n\t}\n\n\t/**\n\t * Retrieves the Metadata related to your instance of the Carbon LDP Platform.\n\t */\n\tgetInstanceMetadata():Promise<System.InstanceMetadata.Class> {\n\t\treturn this.getResourceMetadata<System.InstanceMetadata.Class>( \"system.instance.metadata\" );\n\t}\n\n\tprivate getResourceMetadata<T>( metadataSetting:string ):Promise<T> {\n\t\tif( ! this.hasSetting( \"system.container\" ) )\n\t\t\treturn Promise.reject( new Errors.IllegalStateError( `The \"system.container\" setting hasn't been defied.` ) );\n\t\tif( ! this.hasSetting( metadataSetting ) )\n\t\t\treturn Promise.reject( new Errors.IllegalStateError( `The \"${ metadataSetting }\" setting hasn't been defined.` ) );\n\n\t\treturn Promise.resolve()\n\t\t\t.then( systemURI => RDF.URI.Util.resolve( this.getSetting( \"system.container\" ), this.getSetting( metadataSetting ) ) )\n\t\t\t.then( metadataURI => this.documents.get<T>( metadataURI ) )\n\t\t\t.then( ( [ metadataDocument ] ) => metadataDocument );\n\t}\n}\n\nexport default Class;\n"]}