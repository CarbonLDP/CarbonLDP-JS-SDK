{"version":3,"sources":["AbstractContext.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA,2CAGsB;AAEtB;IAA8C,mCAAU;IAOvD,yBAAa,aAAsB;QAAnC,YACC,iBAAO,SAMP;QAJA,KAAI,CAAC,cAAc,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,0BAAa,CAAC;QAEpE,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,KAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAA6C,CAAC;;IACjF,CAAC;IAZD,sBAAI,oCAAO;aAAX,cAAuB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAG9C,sBAAI,0CAAa;aAAjB,cAA8B,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;;;OAAA;IAW5D,sBAAC;AAAD,CAhBA,AAgBC,CAhB6C,uBAAU,GAgBvD;AAhBqB,0CAAe","file":"AbstractContext.js","sourcesContent":["import { AuthService } from \"./Auth\";\nimport { Context } from \"./Context\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport {\n\tglobalContext,\n\tSDKContext,\n} from \"./SDKContext\";\n\nexport abstract class AbstractContext extends SDKContext {\n\tprotected abstract _baseURI:string;\n\tget baseURI():string { return this._baseURI; }\n\n\tprotected _parentContext:Context;\n\tget parentContext():Context { return this._parentContext; }\n\n\tconstructor( parentContext?:Context ) {\n\t\tsuper();\n\n\t\tthis._parentContext = parentContext ? parentContext : globalContext;\n\n\t\tthis.generalObjectSchema = null;\n\t\tthis.typeObjectSchemaMap = new Map<string, ObjectSchema.DigestedObjectSchema>();\n\t}\n\n}\n"]}