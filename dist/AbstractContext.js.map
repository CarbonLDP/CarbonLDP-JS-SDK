{"version":3,"sources":["AbstractContext.ts"],"names":[],"mappings":"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","file":"AbstractContext.js","sourcesContent":["import { Authenticator } from \"./Auth\";\nimport { Context } from \"./Context\";\nimport {\n\tIllegalArgumentError,\n\tIllegalStateError\n} from \"./Errors\";\nimport {\n\tDigestedObjectSchema,\n\tObjectSchema,\n\tObjectSchemaDigester,\n\tObjectSchemaUtils,\n} from \"./ObjectSchema\";\nimport { Pointer } from \"./Pointer\";\nimport { URI } from \"./RDF\";\nimport { RegistryService } from \"./Registry\";\nimport {\n\tContextSettings,\n\tDocumentPaths,\n} from \"./Settings\";\nimport {\n\tisObject,\n\tisString,\n} from \"./Utils\";\n\n\nexport abstract class AbstractContext<M extends Pointer, P extends AbstractContext<any, any> = undefined> implements Context {\n\tabstract readonly registry:RegistryService<M, AbstractContext<M, P>>;\n\tabstract readonly auth:Authenticator<any> | undefined;\n\n\tprotected abstract _baseURI:string;\n\tget baseURI():string { return this._baseURI; }\n\n\tprotected _parentContext:P | undefined;\n\tget parentContext():P | undefined { return this._parentContext; }\n\n\tprotected _settings?:ContextSettings;\n\n\tprotected _generalObjectSchema?:DigestedObjectSchema;\n\tprotected _typeObjectSchemaMap:Map<string, DigestedObjectSchema>;\n\n\n\tconstructor( parentContext?:P ) {\n\t\tthis._parentContext = parentContext;\n\t\tthis._typeObjectSchemaMap = new Map<string, DigestedObjectSchema>();\n\t}\n\n\n\tresolve( relativeURI:string ):string {\n\t\treturn URI.resolve( this.baseURI, relativeURI );\n\t}\n\n\t/**\n\t * Resolves the path provided into an URL using the `path` settings of the context.\n\t * If such path does hasn't been declared an IllegalStateError will be thrown.\n\t *\n\t * Example: The path `system.platform` with the default setting:\n\t * ```javascript\n\t * {\n\t *  paths: {\n\t *      system: {\n\t *          slug: \".system/\",\n\t *          paths: { platform: \"platform/\" }\n\t *      }\n\t *  }\n\t * }```,\n\t * This should resolve to something like `https://example.com/.system/platform/`.\n\t *\n\t * @param path The dot notation string that refers the path declared in the settings\n\t * of the context.\n\t *\n\t * @returns The absolute URI of the path provided.\n\t */\n\t_resolvePath( path:string ):string {\n\t\tconst leftSearchedPaths:string[] = path.split( \".\" );\n\t\tconst currentSearchedPaths:string[] = [];\n\n\t\tlet url:string = \"\";\n\t\tlet documentPaths:DocumentPaths[ \"paths\" ] = this._settings && this._settings.paths;\n\t\twhile( leftSearchedPaths.length ) {\n\t\t\tconst containerKey:string = leftSearchedPaths.shift();\n\t\t\tcurrentSearchedPaths.push( containerKey );\n\n\t\t\tconst containerPath:string | DocumentPaths = documentPaths ? documentPaths[ containerKey ] : null;\n\t\t\tif( ! containerPath ) throw new IllegalStateError( `The path \"${ currentSearchedPaths.join( \".\" ) }\" hasn't been declared.` );\n\n\t\t\tconst slug:string = isString( containerPath ) ? containerPath : containerPath.slug;\n\t\t\tif( ! slug ) throw new IllegalStateError( `The path \"${ currentSearchedPaths.join( \".\" ) }\" doesn't have a slug set.` );\n\n\t\t\turl = URI.resolve( url, slug );\n\t\t\tdocumentPaths = isObject( containerPath ) ? containerPath.paths : null;\n\t\t}\n\n\t\treturn this.resolve( url );\n\t}\n\n\n\thasObjectSchema( type:string ):boolean {\n\t\ttype = this._resolveTypeURI( type );\n\t\tif( this._typeObjectSchemaMap.has( type ) ) return true;\n\t\treturn ! ! this.parentContext && this.parentContext.hasObjectSchema( type );\n\t}\n\n\tgetObjectSchema( type?:string ):DigestedObjectSchema {\n\t\tif( ! ! type ) {\n\t\t\t// Type specific schema\n\t\t\ttype = this._resolveTypeURI( type );\n\t\t\tif( this._typeObjectSchemaMap.has( type ) ) return this._typeObjectSchemaMap.get( type );\n\t\t\tif( this.parentContext && this.parentContext.hasObjectSchema( type ) ) return this.parentContext.getObjectSchema( type );\n\n\t\t\tthrow new IllegalArgumentError( `\"${ type }\" hasn't an object schema.` );\n\t\t} else {\n\t\t\t// General schema\n\t\t\tconst generalSchema:DigestedObjectSchema = ! this._generalObjectSchema ?\n\t\t\t\tthis.parentContext ?\n\t\t\t\t\tthis.parentContext.getObjectSchema() :\n\t\t\t\t\tnew DigestedObjectSchema() :\n\t\t\t\tObjectSchemaDigester\n\t\t\t\t\t.combineDigestedObjectSchemas( [ this._generalObjectSchema ] )\n\t\t\t;\n\n\t\t\tif( generalSchema.vocab === void 0 && this._settings && this._settings.vocabulary )\n\t\t\t\tgeneralSchema.vocab = this.resolve( this._settings.vocabulary );\n\n\t\t\tif( ! generalSchema.base )\n\t\t\t\tgeneralSchema.base = this.baseURI;\n\n\t\t\treturn generalSchema;\n\t\t}\n\t}\n\n\textendObjectSchema( type:string, objectSchema:ObjectSchema ):this;\n\textendObjectSchema( objectSchema:ObjectSchema ):this;\n\textendObjectSchema( typeOrObjectSchema:any, objectSchema?:ObjectSchema ):this {\n\t\tconst type:string = objectSchema ? typeOrObjectSchema : null;\n\t\tobjectSchema = objectSchema ? objectSchema : typeOrObjectSchema;\n\n\t\tconst digestedSchema:DigestedObjectSchema = ObjectSchemaDigester.digestSchema( objectSchema );\n\n\t\tif( ! type ) {\n\t\t\tthis._extendGeneralSchema( digestedSchema );\n\t\t} else {\n\t\t\tthis._extendTypeSchema( digestedSchema, type );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclearObjectSchema( type?:string ):void {\n\t\tif( ! type ) {\n\t\t\tthis._generalObjectSchema = this.parentContext ? null : new DigestedObjectSchema();\n\t\t} else {\n\t\t\ttype = this._resolveTypeURI( type );\n\t\t\tthis._typeObjectSchemaMap.delete( type );\n\t\t}\n\t}\n\n\t_getTypeObjectSchemas():DigestedObjectSchema[] {\n\t\tconst types:string[] = this._getObjectSchemasTypes();\n\t\treturn types.map( this.getObjectSchema, this );\n\t}\n\n\tprotected _getObjectSchemasTypes():string[] {\n\t\tconst localTypes:string[] = Array.from( this._typeObjectSchemaMap.keys() );\n\n\t\tif( ! this._parentContext ) return localTypes;\n\n\t\tconst allTypes:string[] = this._parentContext._getObjectSchemasTypes();\n\t\tfor( const type of localTypes ) {\n\t\t\tif( allTypes.indexOf( type ) !== - 1 ) continue;\n\t\t\tallTypes.push( type );\n\t\t}\n\n\t\treturn allTypes;\n\t}\n\n\tprotected _extendGeneralSchema( digestedSchema:DigestedObjectSchema ):void {\n\t\tlet digestedSchemaToExtend:DigestedObjectSchema;\n\t\tif( ! ! this._generalObjectSchema ) {\n\t\t\tdigestedSchemaToExtend = this._generalObjectSchema;\n\t\t} else if( ! ! this.parentContext ) {\n\t\t\tdigestedSchemaToExtend = this.parentContext.getObjectSchema();\n\t\t} else {\n\t\t\tdigestedSchemaToExtend = new DigestedObjectSchema();\n\t\t}\n\n\t\tthis._generalObjectSchema = ObjectSchemaDigester._combineSchemas( [\n\t\t\tdigestedSchemaToExtend,\n\t\t\tdigestedSchema,\n\t\t] );\n\t}\n\n\tprotected _extendTypeSchema( digestedSchema:DigestedObjectSchema, type:string ):void {\n\t\ttype = this._resolveTypeURI( type );\n\t\tlet digestedSchemaToExtend:DigestedObjectSchema;\n\n\t\tif( this._typeObjectSchemaMap.has( type ) ) {\n\t\t\tdigestedSchemaToExtend = this._typeObjectSchemaMap.get( type );\n\t\t} else if( ! ! this.parentContext && this.parentContext.hasObjectSchema( type ) ) {\n\t\t\tdigestedSchemaToExtend = this.parentContext.getObjectSchema( type );\n\t\t} else {\n\t\t\tdigestedSchemaToExtend = new DigestedObjectSchema();\n\t\t}\n\n\t\tlet extendedDigestedSchema:DigestedObjectSchema = ObjectSchemaDigester.combineDigestedObjectSchemas( [\n\t\t\tdigestedSchemaToExtend,\n\t\t\tdigestedSchema,\n\t\t] );\n\n\t\tthis._typeObjectSchemaMap.set( type, extendedDigestedSchema );\n\t}\n\n\tprivate _resolveTypeURI( uri:string ):string {\n\t\treturn ObjectSchemaUtils.resolveURI( uri, this.getObjectSchema(), { vocab: true } );\n\t}\n}\n"]}