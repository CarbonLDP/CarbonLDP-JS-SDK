{"version":3,"sources":["PersistedFragment.ts"],"names":[],"mappings":";;;;;;;;;AAAA,uCAAsC;AACtC,2DAA+C;AAE/C,qEAAyD;AACzD,yCAA6B;AAM7B,oBAAiC,GAAU;IAC1C,EAAE,CAAA,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAE,GAAG,CAAG,CAAC;QAAC,MAAM,CAAC,GAAG,CAAC;IAEhD,IAAI,MAAM,GAAqC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;IAC5F,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,UAAU,CAAE,GAAG,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAE,CAAC;AAClF,CAAC;AAED,uBAAwB,aAAqC;IAC5D,MAAM,CAAC,UAAU,IAAW;QAC3B,IAAI,GAAG,UAAU,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACrC,aAAa,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IAClC,CAAC,CAAC;AACH,CAAC;AAED,uBAAwB,aAAwC;IAC/D,MAAM,CAAC,UAAU,IAAW;QAC3B,IAAI,GAAG,UAAU,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACrC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACzC,CAAC,CAAC;AACH,CAAC;AAED,0BAA2B,aAAqC;IAC/D,MAAM,CAAC,UAAU,IAAW;QAC3B,IAAI,GAAG,UAAU,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACrC,aAAa,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IAClC,CAAC,CAAC;AACH,CAAC;AAED;IAAA;IAkCA,CAAC;IAhCO,UAAE,GAAT,UAAW,MAAa;QACvB,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE;eACzD,mBAAQ,CAAC,WAAW,CAAE,MAAM,CAAE,CAChC;IACH,CAAC;IAEM,gBAAQ,GAAf,UAAqC,QAAU;QAC9C,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;QAE/C,MAAM,CAAC,gBAAgB,CAAE,QAAQ,EAAE;YAClC,SAAS,EAAE;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,aAAa,CAAE,QAAQ,CAAC,OAAO,CAAE;aACxC;YACD,SAAS,EAAE;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,aAAa,CAAE,QAAQ,CAAC,OAAO,CAAE;aACxC;YACD,YAAY,EAAE;gBACb,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,gBAAgB,CAAE,QAAQ,CAAC,UAAU,CAAE;aAC9C;SACD,CAAE,CAAC;QAEJ,MAAM,CAAO,QAAQ,CAAC;IACvB,CAAC;IACF,cAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,0BAAO","file":"PersistedFragment.js","sourcesContent":["import { Fragment } from \"./Fragment\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as PersistedDocument from \"./PersistedDocument\";\nimport * as PersistedResource from \"./PersistedResource\";\nimport * as RDF from \"./RDF\";\n\nexport interface Class extends PersistedResource.Class, Fragment {\n\t_document:PersistedDocument.Class;\n}\n\nfunction resolveURI( this:Class, uri:string ):string {\n\tif( RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\tlet schema:ObjectSchema.DigestedObjectSchema = this._document._documents.getGeneralSchema();\n\treturn ObjectSchema.ObjectSchemaUtils.resolveURI( uri, schema, { vocab: true } );\n}\n\nfunction extendAddType( superFunction:( type:string ) => void ):( type:string ) => void {\n\treturn function( type:string ):void {\n\t\ttype = resolveURI.call( this, type );\n\t\tsuperFunction.call( this, type );\n\t};\n}\n\nfunction extendHasType( superFunction:( type:string ) => boolean ):( type:string ) => boolean {\n\treturn function( type:string ):boolean {\n\t\ttype = resolveURI.call( this, type );\n\t\treturn superFunction.call( this, type );\n\t};\n}\n\nfunction extendRemoveType( superFunction:( type:string ) => void ):( type:string ) => void {\n\treturn function( type:string ):void {\n\t\ttype = resolveURI.call( this, type );\n\t\tsuperFunction.call( this, type );\n\t};\n}\n\nexport class Factory {\n\n\tstatic is( object:object ):object is Class {\n\t\treturn PersistedResource.Factory.hasClassProperties( object )\n\t\t\t&& Fragment.isDecorated( object )\n\t\t\t;\n\t}\n\n\tstatic decorate<T extends Fragment>( fragment:T ):T & Class {\n\t\tPersistedResource.Factory.decorate( fragment );\n\n\t\tObject.defineProperties( fragment, {\n\t\t\t\"addType\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: extendAddType( fragment.addType ),\n\t\t\t},\n\t\t\t\"hasType\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: extendHasType( fragment.hasType ),\n\t\t\t},\n\t\t\t\"removeType\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: extendRemoveType( fragment.removeType ),\n\t\t\t},\n\t\t} );\n\n\t\treturn <any> fragment;\n\t}\n}\n\nexport default Class;\n"]}