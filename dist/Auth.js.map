{"version":3,"sources":["Auth.ts"],"names":[],"mappings":"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","file":"Auth.js","sourcesContent":["import * as ACE from \"./Auth/ACE\";\nimport * as ACL from \"./Auth/ACL\";\nimport Authenticator from \"./Auth/Authenticator\";\nimport BasicAuthenticator from \"./Auth/BasicAuthenticator\";\nimport * as Credentials from \"./Auth/Credentials\";\nimport * as PersistedACE from \"./Auth/PersistedACE\";\nimport * as PersistedACL from \"./Auth/PersistedACL\";\nimport * as PersistedCredentials from \"./Auth/PersistedCredentials\";\nimport * as PersistedRole from \"./Auth/PersistedRole\";\nimport * as PersistedUser from \"./Auth/PersistedUser\";\nimport * as Role from \"./Auth/Role\";\nimport * as Roles from \"./Auth/Roles\";\nimport * as Ticket from \"./Auth/Ticket\";\nimport TokenAuthenticator from \"./Auth/TokenAuthenticator\";\nimport * as TokenCredentials from \"./Auth/TokenCredentials\";\nimport * as User from \"./Auth/User\";\nimport UsernameAndPasswordCredentials from \"./Auth/BasicCredentials\";\nimport BasicToken from \"./Auth/BasicToken\";\nimport * as Users from \"./Auth/Users\";\n\nimport Context from \"./Context\";\nimport * as Errors from \"./Errors\";\nimport * as FreeResources from \"./FreeResources\";\nimport * as HTTP from \"./HTTP\";\nimport * as JSONLD from \"./JSONLD\";\nimport * as NS from \"./NS\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as RDF from \"./RDF\";\nimport * as Resource from \"./Resource\";\nimport * as Utils from \"./Utils\";\n\nexport {\n\tACE,\n\tACL,\n\tUser,\n\tUsers,\n\tAuthenticator,\n\tBasicAuthenticator,\n\tCredentials,\n\tPersistedACE,\n\tPersistedACL,\n\tPersistedCredentials,\n\tPersistedRole,\n\tPersistedUser,\n\tRole,\n\tRoles,\n\tTicket,\n\tTokenCredentials,\n\tTokenAuthenticator,\n\tBasicToken\n};\n\nexport enum Method {\n\tBASIC = \"BASIC\",\n\tTOKEN = \"TOKEN\",\n}\n\nexport class Class {\n\tpublic users:Users.Class;\n\tpublic roles:Roles.Class;\n\n\tprotected _authenticatedUser:PersistedUser.Class;\n\n\tprivate context:Context;\n\tprivate authenticators:{ [ P in Method ]:Authenticator<object, object> };\n\tprivate authenticator:Authenticator<object, object>;\n\n\tpublic get authenticatedUser():PersistedUser.Class {\n\t\tif( this._authenticatedUser ) return this._authenticatedUser;\n\t\tif( this.context.parentContext ) return this.context.parentContext.auth.authenticatedUser;\n\n\t\treturn null;\n\t}\n\n\tconstructor( context:Context ) {\n\t\tthis.roles = new Roles.Class( this.context );\n\t\tthis.users = new Users.Class( this.context );\n\n\t\tthis.context = context;\n\n\t\tthis.authenticators = {\n\t\t\t[ Method.BASIC ]: new BasicAuthenticator(),\n\t\t\t[ Method.TOKEN ]: new TokenAuthenticator( this.context ),\n\t\t};\n\t}\n\n\tisAuthenticated( askParent:boolean = true ):boolean {\n\t\treturn (\n\t\t\t(this.authenticator && this.authenticator.isAuthenticated()) ||\n\t\t\t(askParent && ! ! this.context.parentContext && ! ! this.context.parentContext.auth && this.context.parentContext.auth.isAuthenticated())\n\t\t);\n\t}\n\n\tauthenticate( username:string, password:string ):Promise<TokenCredentials.Class> {\n\t\treturn this.authenticateUsing( Method.TOKEN, username, password );\n\t}\n\n\tauthenticateUsing( method:Method.BASIC, username:string, password:string ):Promise<UsernameAndPasswordCredentials>;\n\tauthenticateUsing( method:Method.TOKEN, username:string, password:string ):Promise<TokenCredentials.Class>;\n\tauthenticateUsing( method:Method.TOKEN, token:TokenCredentials.Class ):Promise<TokenCredentials.Class>;\n\tauthenticateUsing( method:Method, userOrCredentials:string | TokenCredentials.Class, password?:string ):Promise<UsernameAndPasswordCredentials | TokenCredentials.Class> {\n\t\tswitch( method ) {\n\t\t\tcase Method.BASIC:\n\t\t\t\treturn this.authenticateWithBasic( userOrCredentials as string, password );\n\t\t\tcase Method.TOKEN:\n\t\t\t\treturn this.authenticateWithToken( userOrCredentials, password );\n\t\t\tdefault:\n\t\t\t\treturn Promise.reject( new Errors.IllegalArgumentError( `No exists the authentication method '${method}'` ) );\n\t\t}\n\t}\n\n\taddAuthentication( requestOptions:HTTP.Request.Options ):void {\n\t\tif( this.isAuthenticated( false ) ) {\n\t\t\tthis.authenticator.addAuthentication( requestOptions );\n\t\t} else if( ! ! this.context.parentContext && ! ! this.context.parentContext.auth ) {\n\t\t\tthis.context.parentContext.auth.addAuthentication( requestOptions );\n\t\t} else {\n\t\t\tconsole.warn( \"There is no authentication to add to the request.\" );\n\t\t}\n\t}\n\n\tclearAuthentication():void {\n\t\tif( ! this.authenticator ) return;\n\n\t\tthis.authenticator.clearAuthentication();\n\t\tthis.authenticator = null;\n\t\tthis._authenticatedUser = null;\n\t}\n\n\tcreateTicket( uri:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ Ticket.Class, HTTP.Response.Class ]> {\n\t\tconst resourceURI:string = this.context.resolve( uri );\n\n\t\tconst freeResources:FreeResources.Class = FreeResources.Factory.create( this.context.documents );\n\t\tTicket.Factory.createFrom( freeResources.createResource(), resourceURI );\n\n\t\tif( this.isAuthenticated() ) this.addAuthentication( requestOptions );\n\t\tHTTP.Request.Util.setAcceptHeader( \"application/ld+json\", requestOptions );\n\t\tHTTP.Request.Util.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\t\tHTTP.Request.Util.setPreferredInteractionModel( NS.LDP.Class.RDFSource, requestOptions );\n\n\t\treturn Utils\n\t\t\t.promiseMethod( () => {\n\t\t\t\tconst containerURI:string = this._resolveSecurityURL( Ticket.TICKETS_CONTAINER );\n\t\t\t\treturn HTTP.Request.Service.post( containerURI, freeResources.toJSON(), requestOptions, new JSONLD.Parser.Class() );\n\t\t\t} )\n\t\t\t.then<[ Ticket.Class, HTTP.Response.Class ]>( ( [ expandedResult, response ]:[ any, HTTP.Response.Class ] ) => {\n\t\t\t\tconst freeNodes:RDF.Node.Class[] = RDF.Node.Util.getFreeNodes( expandedResult );\n\n\t\t\t\tconst ticketNodes:RDF.Node.Class[] = freeNodes.filter( freeNode => RDF.Node.Util.hasType( freeNode, Ticket.RDF_CLASS ) );\n\t\t\t\tif( ticketNodes.length === 0 ) throw new HTTP.Errors.BadResponseError( `No ${ Ticket.RDF_CLASS } was returned.`, response );\n\t\t\t\tif( ticketNodes.length > 1 ) throw new HTTP.Errors.BadResponseError( `Multiple ${ Ticket.RDF_CLASS } were returned.`, response );\n\n\t\t\t\tconst expandedTicket:RDF.Node.Class = ticketNodes[ 0 ];\n\t\t\t\tconst ticket:Ticket.Class = <any> Resource.Factory.create();\n\n\t\t\t\tconst digestedSchema:ObjectSchema.DigestedObjectSchema = this.context.documents.getSchemaFor( expandedTicket );\n\t\t\t\tthis.context.documents.jsonldConverter.compact( expandedTicket, ticket, digestedSchema, this.context.documents );\n\n\t\t\t\treturn [ ticket, response ];\n\t\t\t} )\n\t\t\t.catch( error => this.context.documents._parseErrorResponse( error ) );\n\t}\n\n\tgetAuthenticatedURL( uri:string, requestOptions?:HTTP.Request.Options ):Promise<string> {\n\t\tlet resourceURI:string = this.context.resolve( uri );\n\n\t\treturn this.createTicket( resourceURI, requestOptions ).then( ( [ ticket ]:[ Ticket.Class, HTTP.Response.Class ] ) => {\n\t\t\tresourceURI += RDF.URI.Util.hasQuery( resourceURI ) ? \"&\" : \"?\";\n\t\t\tresourceURI += `ticket=${ ticket.ticketKey }`;\n\n\t\t\treturn resourceURI;\n\t\t} );\n\t}\n\n\t_resolveSecurityURL( relativeURI:string ):string {\n\t\tif( ! this.context.hasSetting( \"system.security.container\" ) ) throw new Errors.IllegalStateError( `The \"system.security.container\" setting hasn't been defined.` );\n\t\tconst securityContainer:string = this.context.resolveSystemURI( this.context.getSetting( \"system.security.container\" ) );\n\n\t\tconst securityURI:string = RDF.URI.Util.resolve( securityContainer, relativeURI );\n\t\tif( ! securityURI.startsWith( securityContainer ) ) throw new Errors.IllegalArgumentError( `The provided URI \"${ relativeURI }\" doesn't belong to the security container.` );\n\n\t\treturn securityURI;\n\t}\n\n\tprivate authenticateWithBasic( username:string, password:string ):Promise<UsernameAndPasswordCredentials> {\n\t\tconst authenticator:BasicAuthenticator = <BasicAuthenticator> this.authenticators[ Method.BASIC ];\n\t\tconst authenticationToken:BasicToken = new BasicToken( username, password );\n\n\t\tthis.clearAuthentication();\n\n\t\tlet newCredentials:UsernameAndPasswordCredentials;\n\t\treturn authenticator.authenticate( authenticationToken ).then( ( credentials:UsernameAndPasswordCredentials ) => {\n\t\t\tnewCredentials = credentials;\n\n\t\t\treturn this.getAuthenticatedUser( authenticator );\n\t\t} ).then( ( persistedUser:PersistedUser.Class ) => {\n\t\t\tthis._authenticatedUser = persistedUser;\n\t\t\tthis.authenticator = authenticator;\n\n\t\t\treturn newCredentials;\n\t\t} );\n\t}\n\n\tprivate authenticateWithToken( userOrCredentials:string | TokenCredentials.Class, password?:string ):Promise<TokenCredentials.Class> {\n\t\tconst authenticator:TokenAuthenticator = <TokenAuthenticator> this.authenticators[ Method.TOKEN ];\n\t\tconst tokenOrCredentials:BasicToken | TokenCredentials.Class | Error = Utils.isString( userOrCredentials ) ?\n\t\t\tnew BasicToken( userOrCredentials, password ) :\n\t\t\tTokenCredentials.Factory.hasClassProperties( userOrCredentials ) ?\n\t\t\t\tuserOrCredentials :\n\t\t\t\tnew Errors.IllegalArgumentError( \"The token provided in not valid.\" );\n\n\t\tif( tokenOrCredentials instanceof Error ) return Promise.reject( tokenOrCredentials );\n\t\tthis.clearAuthentication();\n\n\t\tlet newCredentials:TokenCredentials.Class;\n\t\treturn authenticator.authenticate( tokenOrCredentials ).then( ( credentials:TokenCredentials.Class ) => {\n\t\t\tnewCredentials = credentials;\n\n\t\t\tif( PersistedUser.Factory.is( credentials.user ) ) return credentials.user;\n\t\t\treturn this.getAuthenticatedUser( authenticator );\n\t\t} ).then( ( persistedUser:PersistedUser.Class ) => {\n\t\t\tthis._authenticatedUser = persistedUser;\n\t\t\tthis.authenticator = authenticator;\n\n\t\t\tnewCredentials.user = persistedUser;\n\t\t\treturn newCredentials;\n\t\t} );\n\t}\n\n\tprivate getAuthenticatedUser( authenticator:Authenticator<object, object> ):Promise<PersistedUser.Class> {\n\t\tconst requestOptions:HTTP.Request.Options = {};\n\t\tauthenticator.addAuthentication( requestOptions );\n\n\t\treturn this.context.documents\n\t\t\t.get<PersistedUser.Class>( \"users/me/\", requestOptions )\n\t\t\t.then( ( [ persistedUser ]:[ PersistedUser.Class, HTTP.Response.Class ] ) => persistedUser );\n\t}\n\n}\n\nexport default Class;\n"]}