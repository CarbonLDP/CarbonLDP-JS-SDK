{"version":3,"sources":["Auth.ts"],"names":[],"mappings":"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","file":"Auth.js","sourcesContent":["/// <reference path=\"./../typings/typings.d.ts\" />\n\nimport AuthenticationToken from \"./Auth/AuthenticationToken\";\nimport Authenticator from \"./Auth/Authenticator\";\nimport BasicAuthenticator from \"./Auth/BasicAuthenticator\";\nimport * as Token from \"./Auth/Token\";\nimport TokenAuthenticator from \"./Auth/TokenAuthenticator\";\nimport UsernameAndPasswordToken from \"./Auth/UsernameAndPasswordToken\";\n\nimport * as HTTP from \"./HTTP\";\nimport * as Errors from \"./Errors\";\nimport Context from \"./Context\";\nimport * as Utils from \"./Utils\";\n\nexport {\n\tAuthenticationToken,\n\tAuthenticator,\n\tBasicAuthenticator,\n\tToken,\n\tTokenAuthenticator,\n\tUsernameAndPasswordToken\n}\n\nexport enum Method {\n\tBASIC,\n\tTOKEN\n}\n\nexport class Class {\n\tprivate context:Context;\n\n\tprivate method:Method = null;\n\tprivate authenticators:Array<Authenticator<AuthenticationToken>>;\n\tprivate authenticator:Authenticator<AuthenticationToken>;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\n\t\tthis.authenticators = [];\n\t\tthis.authenticators.push( new TokenAuthenticator( this.context ) );\n\t\tthis.authenticators.push( new BasicAuthenticator() );\n\t}\n\n\tisAuthenticated( askParent:boolean = true ):boolean {\n\t\treturn (\n\t\t\t( this.authenticator && this.authenticator.isAuthenticated() ) ||\n\t\t\t( askParent && !! this.context.parentContext && this.context.parentContext.auth.isAuthenticated() )\n\t\t);\n\t}\n\n\tauthenticate( username:string, password:string ):Promise<void>;\n\tauthenticate( authenticationToken:AuthenticationToken ):Promise<void>;\n\tauthenticate( usernameOrToken:any, password:string = null ):Promise<void> {\n\t\treturn new Promise<void>( ( resolve:( result:any ) => void, reject:( reject:Error ) => void ) => {\n\t\t\tif( ! usernameOrToken ) throw new Errors.IllegalArgumentError( \"Either a username or an authenticationToken are required.\" );\n\n\t\t\tlet authenticationToken:AuthenticationToken;\n\t\t\tif( Utils.isString( usernameOrToken ) ) {\n\t\t\t\tlet username:string = usernameOrToken;\n\t\t\t\tif( ! password ) throw new Errors.IllegalArgumentError( \"A password is required when providing a username.\" );\n\t\t\t\tauthenticationToken = new UsernameAndPasswordToken( username, password );\n\t\t\t} else {\n\t\t\t\tauthenticationToken = usernameOrToken;\n\t\t\t}\n\n\t\t\tif( this.authenticator ) this.clearAuthentication();\n\n\t\t\tthis.authenticator = this.getAuthenticator( authenticationToken );\n\n\t\t\tresolve( this.authenticator.authenticate( authenticationToken ) );\n\t\t});\n\t}\n\n\taddAuthentication( requestOptions:HTTP.Request.Options ):void {\n\t\tif( this.isAuthenticated( false ) ) {\n\t\t\tthis.authenticator.addAuthentication( requestOptions );\n\t\t} else if( !! this.context.parentContext ) {\n\t\t\tthis.context.parentContext.auth.addAuthentication( requestOptions );\n\t\t} else {\n\t\t\tconsole.warn( \"There is no authentication to add to the request.\" );\n\t\t}\n\t}\n\n\tclearAuthentication():void {\n\t\tif( ! this.authenticator ) return;\n\n\t\tthis.authenticator.clearAuthentication();\n\t\tthis.authenticator = null;\n\t}\n\n\tprivate getAuthenticator( authenticationToken:AuthenticationToken ):Authenticator<AuthenticationToken> {\n\t\tfor( let authenticator of this.authenticators ) {\n\t\t\tif( authenticator.supports( authenticationToken ) ) return authenticator;\n\t\t}\n\n\t\tthrow new Errors.IllegalStateError( \"The configured authentication method isn\\'t supported.\" );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}