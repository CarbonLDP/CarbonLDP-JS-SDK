{"version":3,"sources":["AccessPoint.ts"],"names":[],"mappings":";;AAAA,yDAAwD;AAGxD,sCAAqC;AA2BxB,QAAA,WAAW,GAAsB;IAC7C,IAAI,EAAE,KAAC,CAAC,WAAW;IAEnB,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,iCAAe,CAAC,EAAE,CAAE,MAAM,CAAE,CAAC;IACrC,CAAC;IAED,MAAM,EAAN,UAAQ,kBAA0B,EAAE,iBAAkC,EAAE,kBAAoC;QAC3G,MAAM,CAAC,mBAAW,CAAC,UAAU,CAAE,EAAE,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,CAAE,CAAC;IAChG,CAAC;IAED,UAAU,EAAV,UAA8B,MAAQ,EAAE,kBAA0B,EAAE,iBAAkC,EAAE,kBAAoC;QAC3I,MAAM,CAAO,iCAAe,CAAC,UAAU,CAAK,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,CAAE,CAAC;IACjH,CAAC;CACD,CAAC","file":"AccessPoint.js","sourcesContent":["import { DirectContainer } from \"./LDP/DirectContainer\";\nimport { ModelFactory } from \"./ModelFactory\";\nimport { Pointer } from \"./Pointer\";\nimport { C } from \"./Vocabularies/C\";\n\n\nexport interface AccessPointBase {\n\thasMemberRelation:string | Pointer;\n\tisMemberOfRelation?:string | Pointer;\n\tinsertedContentRelation?:string | Pointer;\n}\n\nexport interface AccessPoint extends DirectContainer {\n\thasMemberRelation:Pointer;\n\tisMemberOfRelation?:Pointer;\n\tinsertedContentRelation?:Pointer;\n}\n\n\nexport interface AccessPointFactory extends ModelFactory<AccessPoint> {\n\tTYPE:string;\n\n\tis( object:object ):object is AccessPoint;\n\n\n\tcreate( membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):AccessPoint;\n\n\tcreateFrom<T extends object>( object:T, membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):T & AccessPoint;\n}\n\nexport const AccessPoint:AccessPointFactory = {\n\tTYPE: C.AccessPoint,\n\n\tis( object:object ):object is AccessPoint {\n\t\treturn DirectContainer.is( object );\n\t},\n\n\tcreate( membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):AccessPoint {\n\t\treturn AccessPoint.createFrom( {}, membershipResource, hasMemberRelation, isMemberOfRelation );\n\t},\n\n\tcreateFrom<T extends object>( object:T, membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):T & AccessPoint {\n\t\treturn <any> DirectContainer.createFrom<T>( object, membershipResource, hasMemberRelation, isMemberOfRelation );\n\t},\n};\n"]}