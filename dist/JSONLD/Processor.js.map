{"version":3,"sources":["JSONLD/Processor.ts"],"names":[],"mappings":"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","file":"JSONLD/Processor.js","sourcesContent":["import Error from \"./Error\";\nimport * as Errors from \"./../Errors\";\nimport * as HTTP from \"./../HTTP\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\nimport * as RDF from \"./../RDF\";\nimport * as Utils from \"./../Utils\";\n\nconst MAX_CTX_URLS:number = 10;\nconst LINK_HEADER_REL:string = \"http://www.w3.org/ns/json-ld#context\";\n\nfunction _getTargetFromLinkHeader( header:HTTP.Header.Class ):string {\n\tlet rLinkHeader:RegExp = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n\tfor( let value of header.values ) {\n\t\tlet match:string[] = value.toString().match( rLinkHeader );\n\t\tif( ! match ) continue;\n\n\t\tlet target:string = match[ 1 ];\n\t\tlet params:string = match[ 2 ];\n\t\tlet rParams:RegExp = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\n\t\tlet result:{[ key:string ]:string} = {};\n\t\twhile( true ) {\n\t\t\tmatch = rParams.exec( params );\n\t\t\tif( ! match ) break;\n\n\t\t\tresult[ match[ 1 ] ] = ( match[ 2 ] === undefined ) ? match[ 3 ] : match[ 2 ];\n\t\t}\n\t\tif( result[ \"rel\" ] === LINK_HEADER_REL ) return target;\n\t}\n\treturn null;\n}\n\nfunction _findContextURLs( input:Object, contexts:{[ index:string ]:Object}, base:string, replace:boolean = false ):boolean {\n\tlet previousContexts:number = Object.keys( contexts ).length;\n\n\tif( Utils.isArray( input ) ) {\n\t\tfor( let element of (<Array<Object>> input) ) {\n\t\t\t_findContextURLs( element, contexts, base );\n\t\t}\n\t} else if ( Utils.isPlainObject( input ) ) {\n\t\tfor( let key in input ) {\n\t\t\tif( \"@context\" !== key ) {\n\t\t\t\t_findContextURLs( input[ key ], contexts, base );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet urlOrArrayOrContext:string | Array<string | Object> | Object = input[ key ];\n\t\t\tif( Utils.isArray( urlOrArrayOrContext ) ) {\n\t\t\t\tlet contextArray:Array<string | Object> = <Array<string | Object>> urlOrArrayOrContext;\n\t\t\t\tfor( let index:number = 0, length:number = contextArray.length; index < length; ++index ) {\n\t\t\t\t\tlet urlOrContext:string | Object = contextArray[ index ];\n\t\t\t\t\tif( ! Utils.isString( urlOrContext ) ) continue;\n\n\t\t\t\t\tlet url:string = <string> urlOrContext;\n\t\t\t\t\turl = RDF.URI.Util.resolve( base, url );\n\t\t\t\t\tif ( replace ) {\n\t\t\t\t\t\tif ( Utils.isArray( contexts[ url ] ) ) {\n\t\t\t\t\t\t\tArray.prototype.splice.apply( contextArray, [ index, 1 ].concat( <any> contexts[ url ] ) );\n\t\t\t\t\t\t\tindex += (<Array<any>> contexts[ url ]).length - 1;\n\t\t\t\t\t\t\tlength = contextArray.length;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontextArray[ index ] = contexts[ url ];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ( ! ( url in contexts ) ) {\n\t\t\t\t\t\tcontexts[ url ] =  true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( Utils.isString( urlOrArrayOrContext ) ) {\n\t\t\t\tlet url:string = <string> urlOrArrayOrContext;\n\t\t\t\turl = RDF.URI.Util.resolve( base, url );\n\t\t\t\tif ( replace ) {\n\t\t\t\t\tinput[ key ] = contexts[ url ];\n\t\t\t\t} else if ( ! ( url in contexts ) ) {\n\t\t\t\t\tcontexts[ url ] =  null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn previousContexts < Object.keys( contexts ).length;\n}\n\nfunction _retrieveContexts( input:Object, contextsRequested:{[ index:string ]:boolean}, base:string ):Promise<void> {\n\tif( Object.keys( contextsRequested ).length > MAX_CTX_URLS ) return Promise.reject<void>( new Error( \"Maximum number of @context URLs exceeded.\" ) );\n\n\tlet contextToResolved:{[ index:string ]:Object} = Object.create( null );\n\tif( ! _findContextURLs( input, contextToResolved, base ) ) return Promise.resolve();\n\n\tfunction resolved( url:string, promise:Promise<[ any, HTTP.Response.Class ]> ):Promise<void> {\n\t\treturn promise.then( ( [ object, response ]:[ any, HTTP.Response.Class ] ) => {\n\t\t\tlet _contextsRequested:{[ index:string ]:boolean} = Utils.O.clone<{[ index:string ]:boolean}>( contextsRequested );\n\t\t\t_contextsRequested[ url ] = true;\n\n\t\t\tlet contextWrapper:Object = { \"@context\": {} };\n\n\t\t\tlet header:HTTP.Header.Class = response.getHeader( \"Content-Type\" );\n\t\t\tif( ! Utils.S.contains( header.toString(),  \"application/ld+json\" ) ) {\n\t\t\t\theader = response.getHeader( \"Link\" );\n\t\t\t\tlet link:string;\n\t\t\t\tif( ! ! header ) link = _getTargetFromLinkHeader( header );\n\t\t\t\tif( ! ! link ) contextWrapper[ \"@context\" ] = link;\n\t\t\t} else {\n\t\t\t\tcontextWrapper[ \"@context\" ]  = ( \"@context\" in object ) ? object[ \"@context\" ] : {};\n\t\t\t}\n\t\t\tcontextToResolved[ url ] = contextWrapper[ \"@context\" ];\n\n\t\t\treturn _retrieveContexts( contextWrapper, _contextsRequested, url );\n\t\t} );\n\t}\n\n\tlet promises:Promise<void>[] = [];\n\tfor( let url in contextToResolved ) {\n\t\tif( url in contextsRequested ) return Promise.reject<void>( new Error( \"Cyclical @context URLs detected.\" ) );\n\n\t\tlet requestOptions:HTTP.Request.Options = {};\n\t\tHTTP.Request.Util.setAcceptHeader( \"application/ld+json, application/json\", requestOptions );\n\n\t\tlet promise:Promise<[ any, HTTP.Response.Class ]> = HTTP.Request.Service.get( url, requestOptions, new HTTP.JSONParser.Class() );\n\t\tpromises.push( resolved( url, promise ) );\n\t}\n\n\treturn Promise.all<void>( promises ).then( () => {\n\t\t_findContextURLs( input, contextToResolved, base, true );\n\t} );\n}\n\nfunction _isKeyword( value:string ):boolean {\n\tif( ! Utils.isString( value ) ) return false;\n\n\tswitch( value ) {\n\t\tcase \"@base\":\n\t\tcase \"@context\":\n\t\tcase \"@container\":\n\t\tcase \"@default\":\n\t\tcase \"@embed\":\n\t\tcase \"@explicit\":\n\t\tcase \"@graph\":\n\t\tcase \"@id\":\n\t\tcase \"@index\":\n\t\tcase \"@language\":\n\t\tcase \"@list\":\n\t\tcase \"@omitDefault\":\n\t\tcase \"@preserve\":\n\t\tcase \"@requireAll\":\n\t\tcase \"@reverse\":\n\t\tcase \"@set\":\n\t\tcase \"@type\":\n\t\tcase \"@value\":\n\t\tcase \"@vocab\":\n\t\t\treturn true;\n\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction _isValidType( value:any ):boolean {\n\tif ( Utils.isString( value ) ) return true;\n\n\tif( ! Utils.isArray( value ) ) return false;\n\n\tfor( let element of (<Array<any>> value ) ) {\n\t\tif( ! Utils.isString( element ) ) return false;\n\t}\n\n\treturn true;\n}\n\n\nfunction _expandURI( value:string, schema:ObjectSchema.DigestedObjectSchema, relativeTo:{ vocab?:boolean, base?:boolean } = {} ):string {\n\tif( value === null || _isKeyword( value ) || RDF.URI.Util.isAbsolute( value ) ) return value;\n\n\tif( schema.properties.has( value ) ) return schema.properties.get( value ).uri.stringValue;\n\tif( RDF.URI.Util.isPrefixed( value ) ) return ObjectSchema.Digester.resolvePrefixedURI( value, schema );\n\n\tif( relativeTo.vocab ) {\n\t\tif( schema.vocab === null ) return null;\n\t\treturn schema.vocab + value;\n\t}\n\tif( relativeTo.base ) RDF.URI.Util.resolve( schema.base, value, { untilSlash: true } );\n\n\treturn value;\n}\n\nfunction _expandLanguageMap( languageMap:any ):any {\n\tlet expandedLanguage:Array<Object> = [];\n\n\tlet keys:string[] = Object.keys(languageMap).sort();\n\tfor( let key of keys ) {\n\t\tlet values:Array<any> = languageMap[ key ];\n\t\tif( ! Utils.isArray( values ) ) values = [ values ];\n\n\t\tfor( let item of values ) {\n\t\t\tif( item === null ) continue;\n\t\t\tif( ! Utils.isString( item ) ) throw new Error( \"Language map values must be strings.\" );\n\n\t\t\texpandedLanguage.push( {\n\t\t\t\t\"@value\": item,\n\t\t\t\t\"@language\": key.toLowerCase(),\n\t\t\t} );\n\t\t}\n\t}\n\treturn expandedLanguage;\n}\n\nfunction _getContainer( context:ObjectSchema.DigestedObjectSchema, property:string ):ObjectSchema.ContainerType {\n\tif( context.properties.has( property ) ) return context.properties.get( property ).containerType;\n\treturn undefined;\n}\n\nfunction _expandValue( context:ObjectSchema.DigestedObjectSchema, element:Object, propertyName:string ):Object {\n\t// TODO: Expand\n\treturn element;\n}\n\nfunction _process( context:ObjectSchema.DigestedObjectSchema, element:Object, activeProperty?:string, insideList?:boolean ):Object {\n\tif( Utils.isNull( element ) || ! Utils.isDefined( element ) ) return null;\n\n\t// Expand an element according to the context\n\tif( ! Utils.isArray( element ) && ! Utils.isObject( element ) ) {\n\t\tif( ! insideList && ( activeProperty === null || activeProperty === \"@graph\" ) ) return null;\n\t\treturn _expandValue( context, element, activeProperty );\n\t}\n\n\t// Recursively expand the array\n\tif( Utils.isArray( element ) ) {\n\t\tlet container:ObjectSchema.ContainerType = _getContainer( context, activeProperty );\n\t\tinsideList = insideList || container === ObjectSchema.ContainerType.LIST;\n\n\t\tlet expandedElement:Array<Object> = [];\n\t\tfor( let item of (<Array<any>> element) ) {\n\t\t\tlet expandedItem:any = _process( context, item, activeProperty );\n\t\t\tif( expandedItem === null ) continue;\n\n\t\t\tif( insideList && ( Utils.isArray( expandedItem )  || RDF.List.Factory.is( expandedItem ) ) ) throw new Error( \"Lists of lists are not permitted.\" );\n\n\t\t\tif( ! Utils.isArray( expandedItem ) ) expandedItem = [ expandedItem ];\n\t\t\tArray.prototype.push.apply( expandedElement, expandedItem );\n\t\t}\n\t\treturn expandedElement;\n\t}\n\n\t// Expand current context\n\tif( \"@context\" in element ) {\n\t\tcontext = ObjectSchema.Digester.combineDigestedObjectSchemas( [\n\t\t\tObjectSchema.Digester.digestSchema( element[ \"@context\" ] ),\n\t\t\tcontext,\n\t\t] );\n\t}\n\n\t// Recursively expand the object\n\tlet expandedElement:Object = {};\n\tlet keys:string[] = Object.keys( element );\n\tfor( let key of keys ) {\n\t\tif( key === \"@context\" ) continue;\n\n\t\tlet uri:string = _expandURI( key, context, { vocab: true } );\n\t\tif( ! uri || ! ( RDF.URI.Util.isAbsolute( uri ) || _isKeyword( uri ) ) ) continue;\n\n\t\tlet value:any = element[ key ];\n\n\t\t// Validate value\n\t\tif( _isKeyword( uri ) ) {\n\t\t\tif( uri === \"@id\" && ! Utils.isString( value ) ) throw new Error( `\"@id\" value must a string.` );\n\t\t\tif( uri === \"@type\" && ! _isValidType( value ) ) throw new Error( `\"@type\" value must a string, an array of strings.` );\n\t\t\tif( uri === \"@graph\" && ! ( Utils.isObject( value ) || Utils.isArray( value ) ) ) throw new Error( `\"@graph\" value must not be an object or an array.` );\n\t\t\tif( uri === \"@value\" && ( Utils.isObject( value ) || Utils.isArray( value ) ) ) throw new Error( `\"@value\" value must not be an object or an array.` );\n\t\t\tif( uri === \"@language\" ) {\n\t\t\t\tif( value ) continue;\n\t\t\t\tif( ! Utils.isString( value ) ) throw new Error( `\"@language\" value must be a string.` );\n\t\t\t\tvalue = (<string> value).toLowerCase();\n\t\t\t}\n\n\t\t\tif( uri === \"@index\" && ! Utils.isString( value ) ) throw new Error( `\"@index\" value must be a string.` );\n\t\t\tif( uri === \"@reverse\" && ! Utils.isObject( value ) ) throw new Error( `\"@reverse\" value must be an object.` );\n\t\t\t// TODO: Not supported\n\t\t\tif( uri === \"@index\" || uri === \"@reverse\" ) throw new Errors.NotImplementedError( `The SDK does not support \"@index\" and \"@reverse\" tags.` );\n\t\t}\n\n\t\tlet expandedValue:any;\n\t\tlet container:ObjectSchema.ContainerType = _getContainer( context, key );\n\t\tif( container === ObjectSchema.ContainerType.LANGUAGE  && Utils.isObject( value ) ) {\n\t\t\texpandedValue = _expandLanguageMap( value );\n\t\t} else {\n\t\t\tlet nextActiveProperty:string = key;\n\n\t\t\tlet isList:boolean = container === ObjectSchema.ContainerType.LIST;\n\t\t\tif( isList || container === ObjectSchema.ContainerType.SET ) nextActiveProperty = ( isList && activeProperty === \"@graph\" ) ? null : activeProperty;\n\n\t\t\texpandedValue = _process( context, value, nextActiveProperty );\n\t\t}\n\n\t\t// Drop null values if is not a \"@value\" property\n\t\tif( expandedValue === null && uri !== \"@value\" ) continue;\n\n\t\tif( uri !== \"@list\" && ! RDF.List.Factory.is( expandedValue ) && container === ObjectSchema.ContainerType.LIST ) {\n\t\t\tif( ! Utils.isArray( expandedValue ) ) expandedValue = [ expandedValue ];\n\t\t\texpandedValue = { \"@list\": expandedValue };\n\t\t}\n\n\t\tlet useArray:boolean = [ \"@id\", \"@type\", \"@value\", \"@language\" ].indexOf( uri ) === -1;\n\t\t_addValue( expandedElement, uri, expandedValue, { propertyIsArray: useArray } );\n\t}\n\n\t// TODO: Validate result\n\n\treturn expandedElement;\n}\n\nfunction _addValue( element:Object, propertyName:string, value:any, options:{ propertyIsArray:boolean } ):void {\n\tif( Utils.isArray( value ) ) {\n\t\tlet values:Array<any> = value;\n\t\tif( values.length === 0 && options.propertyIsArray && ! Utils.hasProperty( element, propertyName ) ) element[ propertyName ] = [];\n\t\tfor( let item of values ) {\n\t\t\t_addValue( element, propertyName, item, options );\n\t\t}\n\n\t} else if( propertyName in element ) {\n\t\tif ( ! _hasValue( element, propertyName, value ) ) {\n\t\t\tlet items:Array<any> = element[ propertyName ];\n\t\t\tif( ! Utils.isArray( items ) ) items = element[ propertyName ] = [ items ];\n\t\t\titems.push( value );\n\t\t}\n\t} else {\n\t\telement[ propertyName ] = options.propertyIsArray ? [ value ] : value;\n\t}\n}\n\nfunction _hasProperty( element:Object, propertyName:string ):boolean {\n\tif ( propertyName in element ) {\n\t\tlet item:any = element[ propertyName ];\n\t\treturn ! Utils.isArray( item ) || (<Array<any>> item).length > 0;\n\t}\n\treturn false;\n}\n\nfunction _compareValues( value1:any, value2:any ):boolean {\n\tif( value1 === value2 ) return true;\n\n\tif( Utils.isObject( value1 ) && Utils.isObject( value2 ) ) {\n\n\t\tif( \"@value\" in value1\n\t\t\t&& value1[ \"@value\" ] === value2[ \"@value\" ]\n\t\t\t&& value1[ \"@type\" ] === value2[ \"@type\" ]\n\t\t\t&& value1[ \"@language\" ] === value2[ \"@language\" ]\n\t\t\t&& value1[ \"@index\" ] === value2[ \"@index\" ] )\n\t\t\treturn true;\n\n\t\tif( \"@id\" in value1 )\n\t\t\treturn value1[ \"@id\" ] === value2[ \"@id\" ];\n\n\t}\n\n\treturn false;\n}\n\nfunction _hasValue( element:Object, propertyName:string, value:any ):boolean {\n\tif( _hasProperty( element, propertyName) ) {\n\t\tlet item:any = element[ propertyName ];\n\t\tlet isList:boolean = RDF.List.Factory.is( value );\n\n\t\tif( isList || Utils.isArray( item ) ) {\n\t\t\tlet items:any[] = item;\n\t\t\tif( isList ) items = items[ \"@list\" ];\n\n\t\t\tfor( let entry of items ) {\n\t\t\t\tif( _compareValues( entry, value ) ) return true;\n\t\t\t}\n\t\t} else if( ! Utils.isArray( value ) ) {\n\t\t\treturn _compareValues( item, value );\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function expand( input:Object ):Promise<Object> {\n\t// Find and resolve context URLs\n\treturn _retrieveContexts( input, <{[ index:string ]:boolean}> Object.create( null ), \"\" ).then( () => {\n\t\treturn _process( new ObjectSchema.DigestedObjectSchema(), input );\n\t} );\n}\n\nexport default {\n\texpand,\n};\n"],"sourceRoot":"/source/"}