{"version":3,"sources":["JSONLD/Processor.ts"],"names":[],"mappings":"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","file":"JSONLD/Processor.js","sourcesContent":["import Error from \"../Errors/InvalidJSONLDSyntaxError\";\nimport * as Errors from \"./../Errors\";\nimport * as HTTP from \"./../HTTP\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\nimport * as RDF from \"./../RDF\";\nimport * as Utils from \"./../Utils\";\n\nconst MAX_CONTEXT_URLS:number = 10;\nconst LINK_HEADER_REL:string = \"http://www.w3.org/ns/json-ld#context\";\n\nexport class Class {\n\tstatic expand( input:Object ):Promise<Array<Object>> {\n\t\t// Find and resolve context URLs\n\t\treturn this.retrieveContexts( input, <{[ index:string ]:boolean}> Object.create( null ), \"\" ).then( () => {\n\t\t\t// Expand the document\n\t\t\tlet expanded:any = Class.process( new ObjectSchema.DigestedObjectSchema(), input );\n\n\t\t\t// Optimize @graph\n\t\t\tif( Utils.isObject( expanded ) && \"@graph\" in expanded && Object.keys( expanded ).length === 1 ) {\n\t\t\t\texpanded = expanded[ \"@graph\" ];\n\t\t\t} else if( expanded === null ) {\n\t\t\t\texpanded = [];\n\t\t\t}\n\n\t\t\t// Normalize to an array\n\t\t\tif( ! Utils.isArray( expanded ) ) expanded = [ expanded ];\n\n\t\t\treturn expanded;\n\t\t} );\n\t}\n\n\tprivate static getTargetFromLinkHeader( header:HTTP.Header.Class ):string {\n\t\tlet rLinkHeader:RegExp = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n\t\tfor( let value of header.values ) {\n\t\t\tlet match:string[] = value.toString().match( rLinkHeader );\n\t\t\tif( ! match ) continue;\n\n\t\t\tlet target:string = match[ 1 ];\n\t\t\tlet params:string = match[ 2 ];\n\t\t\tlet rParams:RegExp = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\n\t\t\tlet result:{[ key:string ]:string} = {};\n\t\t\twhile( true ) {\n\t\t\t\tmatch = rParams.exec( params );\n\t\t\t\tif( ! match ) break;\n\n\t\t\t\tresult[ match[ 1 ] ] = ( match[ 2 ] === undefined ) ? match[ 3 ] : match[ 2 ];\n\t\t\t}\n\t\t\tif( result[ \"rel\" ] === LINK_HEADER_REL ) return target;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static findContextURLs( input:Object, contexts:{[ index:string ]:Object}, base:string, replace:boolean = false ):boolean {\n\t\tlet previousContexts:number = Object.keys( contexts ).length;\n\n\t\tif( Utils.isArray( input ) ) {\n\t\t\tfor( let element of (<Array<Object>> input) ) {\n\t\t\t\tClass.findContextURLs( element, contexts, base );\n\t\t\t}\n\t\t} else if( Utils.isPlainObject( input ) ) {\n\t\t\tfor( let key in input ) {\n\t\t\t\tif( \"@context\" !== key ) {\n\t\t\t\t\tClass.findContextURLs( input[ key ], contexts, base );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet urlOrArrayOrContext:string | Array<string | Object> | Object = input[ key ];\n\t\t\t\tif( Utils.isArray( urlOrArrayOrContext ) ) {\n\t\t\t\t\tlet contextArray:Array<string | Object> = <Array<string | Object>> urlOrArrayOrContext;\n\t\t\t\t\tfor( let index:number = 0, length:number = contextArray.length; index < length; ++ index ) {\n\t\t\t\t\t\tlet urlOrContext:string | Object = contextArray[ index ];\n\t\t\t\t\t\tif( ! Utils.isString( urlOrContext ) ) continue;\n\n\t\t\t\t\t\tlet url:string = <string> urlOrContext;\n\t\t\t\t\t\turl = RDF.URI.Util.resolve( base, url );\n\t\t\t\t\t\tif( replace ) {\n\t\t\t\t\t\t\tif( Utils.isArray( contexts[ url ] ) ) {\n\t\t\t\t\t\t\t\tArray.prototype.splice.apply( contextArray, [ index, 1 ].concat( <any> contexts[ url ] ) );\n\t\t\t\t\t\t\t\tindex += (<Array<any>> contexts[ url ]).length - 1;\n\t\t\t\t\t\t\t\tlength = contextArray.length;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontextArray[ index ] = contexts[ url ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if( ! ( url in contexts ) ) {\n\t\t\t\t\t\t\tcontexts[ url ] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if( Utils.isString( urlOrArrayOrContext ) ) {\n\t\t\t\t\tlet url:string = <string> urlOrArrayOrContext;\n\t\t\t\t\turl = RDF.URI.Util.resolve( base, url );\n\t\t\t\t\tif( replace ) {\n\t\t\t\t\t\tinput[ key ] = contexts[ url ];\n\t\t\t\t\t} else if( ! ( url in contexts ) ) {\n\t\t\t\t\t\tcontexts[ url ] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn previousContexts < Object.keys( contexts ).length;\n\t}\n\n\tprivate static retrieveContexts( input:Object, contextsRequested:{[ index:string ]:boolean}, base:string ):Promise<void> {\n\t\tif( Object.keys( contextsRequested ).length > MAX_CONTEXT_URLS ) return Promise.reject<void>( new Error( \"Maximum number of @context URLs exceeded.\" ) );\n\n\t\tlet contextToResolved:{[ index:string ]:Object} = Object.create( null );\n\t\tif( ! Class.findContextURLs( input, contextToResolved, base ) ) return Promise.resolve();\n\n\t\tfunction resolved( url:string, promise:Promise<[ any, HTTP.Response.Class ]> ):Promise<void> {\n\t\t\treturn promise.then( ( [ object, response ]:[ any, HTTP.Response.Class ] ) => {\n\t\t\t\tlet _contextsRequested:{[ index:string ]:boolean} = Utils.O.clone<{[ index:string ]:boolean}>( contextsRequested );\n\t\t\t\t_contextsRequested[ url ] = true;\n\n\t\t\t\tlet contextWrapper:Object = { \"@context\": {} };\n\n\t\t\t\tlet header:HTTP.Header.Class = response.getHeader( \"Content-Type\" );\n\t\t\t\tif( ! Utils.S.contains( header.toString(), \"application/ld+json\" ) ) {\n\t\t\t\t\theader = response.getHeader( \"Link\" );\n\t\t\t\t\tlet link:string;\n\t\t\t\t\tif( ! ! header ) link = Class.getTargetFromLinkHeader( header );\n\t\t\t\t\tif( ! ! link ) contextWrapper[ \"@context\" ] = link;\n\t\t\t\t} else {\n\t\t\t\t\tcontextWrapper[ \"@context\" ] = ( \"@context\" in object ) ? object[ \"@context\" ] : {};\n\t\t\t\t}\n\t\t\t\tcontextToResolved[ url ] = contextWrapper[ \"@context\" ];\n\n\t\t\t\treturn Class.retrieveContexts( contextWrapper, _contextsRequested, url );\n\t\t\t} );\n\t\t}\n\n\t\tlet promises:Promise<void>[] = [];\n\t\tfor( let url in contextToResolved ) {\n\t\t\tif( url in contextsRequested ) return Promise.reject<void>( new Error( \"Cyclical @context URLs detected.\" ) );\n\n\t\t\tlet requestOptions:HTTP.Request.Options = { sendCredentialsOnCORS: false };\n\t\t\tHTTP.Request.Util.setAcceptHeader( \"application/ld+json, application/json\", requestOptions );\n\n\t\t\tlet promise:Promise<[ any, HTTP.Response.Class ]> = HTTP.Request.Service.get( url, requestOptions, new HTTP.JSONParser.Class() );\n\t\t\tpromises.push( resolved( url, promise ) );\n\t\t}\n\n\t\treturn Promise.all<void>( promises ).then( () => {\n\t\t\tClass.findContextURLs( input, contextToResolved, base, true );\n\t\t} );\n\t}\n\n\tprivate static isKeyword( value:string ):boolean {\n\t\tif( ! Utils.isString( value ) ) return false;\n\n\t\tswitch( value ) {\n\t\t\tcase \"@base\":\n\t\t\tcase \"@context\":\n\t\t\tcase \"@container\":\n\t\t\tcase \"@default\":\n\t\t\tcase \"@embed\":\n\t\t\tcase \"@explicit\":\n\t\t\tcase \"@graph\":\n\t\t\tcase \"@id\":\n\t\t\tcase \"@index\":\n\t\t\tcase \"@language\":\n\t\t\tcase \"@list\":\n\t\t\tcase \"@omitDefault\":\n\t\t\tcase \"@preserve\":\n\t\t\tcase \"@requireAll\":\n\t\t\tcase \"@reverse\":\n\t\t\tcase \"@set\":\n\t\t\tcase \"@type\":\n\t\t\tcase \"@value\":\n\t\t\tcase \"@vocab\":\n\t\t\t\treturn true;\n\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate static isValidType( value:any ):boolean {\n\t\tif( Utils.isString( value ) ) return true;\n\n\t\tif( ! Utils.isArray( value ) ) return false;\n\n\t\tfor( let element of (<Array<any>> value ) ) {\n\t\t\tif( ! Utils.isString( element ) ) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate static expandURI( schema:ObjectSchema.DigestedObjectSchema, uri:string, relativeTo:{ vocab?:boolean, base?:boolean } = {} ):string {\n\t\tif( uri === null || Class.isKeyword( uri ) || RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\t\tif( schema.properties.has( uri ) ) return schema.properties.get( uri ).uri.stringValue;\n\t\tif( RDF.URI.Util.isPrefixed( uri ) ) return ObjectSchema.Digester.resolvePrefixedURI( uri, schema );\n\t\tif( schema.prefixes.has( uri ) ) return schema.prefixes.get( uri ).stringValue;\n\n\t\tif( relativeTo.vocab ) {\n\t\t\tif( schema.vocab === null ) return null;\n\t\t\treturn schema.vocab + uri;\n\t\t}\n\t\tif( relativeTo.base ) RDF.URI.Util.resolve( schema.base, uri );\n\n\t\treturn uri;\n\t}\n\n\tprivate static expandLanguageMap( languageMap:any ):any {\n\t\tlet expandedLanguage:Array<Object> = [];\n\n\t\tlet keys:string[] = Object.keys( languageMap ).sort();\n\t\tfor( let key of keys ) {\n\t\t\tlet values:Array<any> = languageMap[ key ];\n\t\t\tif( ! Utils.isArray( values ) ) values = [ values ];\n\n\t\t\tfor( let item of values ) {\n\t\t\t\tif( item === null ) continue;\n\t\t\t\tif( ! Utils.isString( item ) ) throw new Error( \"Language map values must be strings.\" );\n\n\t\t\t\texpandedLanguage.push( {\n\t\t\t\t\t\"@value\": item,\n\t\t\t\t\t\"@language\": key.toLowerCase(),\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\treturn expandedLanguage;\n\t}\n\n\tprivate static getContainer( context:ObjectSchema.DigestedObjectSchema, property:string ):ObjectSchema.ContainerType {\n\t\tif( context.properties.has( property ) ) return context.properties.get( property ).containerType;\n\t\treturn undefined;\n\t}\n\n\tprivate static expandValue( context:ObjectSchema.DigestedObjectSchema, value:any, propertyName:string ):any {\n\t\tif( Utils.isNull( value ) || ! Utils.isDefined( value ) ) return null;\n\n\t\tif( propertyName === \"@id\" ) {\n\t\t\treturn Class.expandURI( context, value, { base: true } );\n\t\t} else if( propertyName === \"@type\" ) {\n\t\t\treturn Class.expandURI( context, value, { vocab: true, base: true } );\n\t\t}\n\n\t\tlet definition:ObjectSchema.DigestedPropertyDefinition = new ObjectSchema.DigestedPropertyDefinition();\n\t\tif( context.properties.has( propertyName ) ) definition = context.properties.get( propertyName );\n\n\t\tif( definition.literal === false || ( propertyName === \"@graph\" && Utils.isString( value ) ) ) {\n\t\t\tlet options:{base:boolean, vocab?:boolean} = { base: true };\n\t\t\tif( definition.pointerType === ObjectSchema.PointerType.VOCAB ) options.vocab = true;\n\n\t\t\treturn { \"@id\": Class.expandURI( context, value, options ) };\n\t\t}\n\n\t\tif( Class.isKeyword( propertyName ) ) return value;\n\n\t\tlet expandedValue:Object = {};\n\t\tif( ! ! definition.literalType ) {\n\t\t\texpandedValue[ \"@type\" ] = definition.literalType.stringValue;\n\t\t} else if( Utils.isString( value ) ) {\n\t\t\tlet language:string = Utils.isDefined( definition.language ) ? definition.language : context.language;\n\t\t\tif( language !== null ) expandedValue[ \"@language\" ] = language;\n\t\t}\n\n\t\t// Normalize to string unknowns types\n\t\tif( [ \"boolean\", \"number\", \"string\" ].indexOf( typeof value ) === - 1 ) value = value.toString();\n\t\texpandedValue[ \"@value\" ] = value;\n\n\t\treturn expandedValue;\n\t}\n\n\tprivate static process( context:ObjectSchema.DigestedObjectSchema, element:Object, activeProperty?:string, insideList?:boolean ):Object {\n\t\tif( Utils.isNull( element ) || ! Utils.isDefined( element ) ) return null;\n\n\t\t// Expand an element according to the context\n\t\tif( ! Utils.isArray( element ) && ! Utils.isObject( element ) ) {\n\t\t\tif( ! insideList && ( activeProperty === null || activeProperty === \"@graph\" ) ) return null;\n\t\t\treturn Class.expandValue( context, element, activeProperty );\n\t\t}\n\n\t\t// Recursively expand the array\n\t\tif( Utils.isArray( element ) ) {\n\t\t\tlet container:ObjectSchema.ContainerType = Class.getContainer( context, activeProperty );\n\t\t\tinsideList = insideList || container === ObjectSchema.ContainerType.LIST;\n\n\t\t\tlet expandedElement:Array<Object> = [];\n\t\t\tfor( let item of (<Array<any>> element) ) {\n\t\t\t\tlet expandedItem:any = Class.process( context, item, activeProperty );\n\t\t\t\tif( expandedItem === null ) continue;\n\n\t\t\t\tif( insideList && ( Utils.isArray( expandedItem ) || RDF.List.Factory.is( expandedItem ) ) ) throw new Error( \"Lists of lists are not permitted.\" );\n\n\t\t\t\tif( ! Utils.isArray( expandedItem ) ) expandedItem = [ expandedItem ];\n\t\t\t\tArray.prototype.push.apply( expandedElement, expandedItem );\n\t\t\t}\n\t\t\treturn expandedElement;\n\t\t}\n\n\t\t// Expand current context\n\t\tif( \"@context\" in element ) {\n\t\t\tcontext = ObjectSchema.Digester.combineDigestedObjectSchemas( [\n\t\t\t\tObjectSchema.Digester.digestSchema( element[ \"@context\" ] ),\n\t\t\t\tcontext,\n\t\t\t] );\n\t\t}\n\n\t\t// Recursively expand the object\n\t\tlet expandedElement:Object = {};\n\t\tlet keys:string[] = Object.keys( element );\n\t\tfor( let key of keys ) {\n\t\t\tif( key === \"@context\" ) continue;\n\n\t\t\tlet uri:string = Class.expandURI( context, key, { vocab: true } );\n\t\t\tif( ! uri || ! ( RDF.URI.Util.isAbsolute( uri ) || RDF.URI.Util.isBNodeID( uri ) || Class.isKeyword( uri ) ) ) continue;\n\n\t\t\tlet value:any = element[ key ];\n\n\t\t\t// Validate value\n\t\t\tif( Class.isKeyword( uri ) ) {\n\t\t\t\tif( uri === \"@id\" && ! Utils.isString( value ) ) throw new Error( `\"@id\" value must a string.` );\n\t\t\t\tif( uri === \"@type\" && ! Class.isValidType( value ) ) throw new Error( `\"@type\" value must a string, an array of strings.` );\n\t\t\t\tif( uri === \"@graph\" && ! ( Utils.isObject( value ) || Utils.isArray( value ) ) ) throw new Error( `\"@graph\" value must not be an object or an array.` );\n\t\t\t\tif( uri === \"@value\" && ( Utils.isObject( value ) || Utils.isArray( value ) ) ) throw new Error( `\"@value\" value must not be an object or an array.` );\n\t\t\t\tif( uri === \"@language\" ) {\n\t\t\t\t\tif( value === null ) continue;\n\t\t\t\t\tif( ! Utils.isString( value ) ) throw new Error( `\"@language\" value must be a string.` );\n\t\t\t\t\tvalue = (<string> value).toLowerCase();\n\t\t\t\t}\n\n\t\t\t\tif( uri === \"@index\" && ! Utils.isString( value ) ) throw new Error( `\"@index\" value must be a string.` );\n\t\t\t\tif( uri === \"@reverse\" && ! Utils.isObject( value ) ) throw new Error( `\"@reverse\" value must be an object.` );\n\t\t\t\t// TODO: Not supported\n\t\t\t\tif( uri === \"@index\" || uri === \"@reverse\" ) throw new Errors.NotImplementedError( `The SDK does not support \"@index\" and \"@reverse\" tags.` );\n\t\t\t}\n\n\t\t\tlet expandedValue:any;\n\t\t\tlet container:ObjectSchema.ContainerType = Class.getContainer( context, key );\n\t\t\tif( container === ObjectSchema.ContainerType.LANGUAGE && Utils.isObject( value ) ) {\n\t\t\t\texpandedValue = Class.expandLanguageMap( value );\n\t\t\t} else {\n\t\t\t\tlet nextActiveProperty:string = key;\n\n\t\t\t\tlet isList:boolean = uri === \"@list\";\n\t\t\t\tif( isList || uri === \"@set\") {\n\t\t\t\t\tnextActiveProperty = activeProperty;\n\t\t\t\t\tif( isList && activeProperty === \"@graph\" ) nextActiveProperty = null;\n\t\t\t\t}\n\n\t\t\t\texpandedValue = Class.process( context, value, nextActiveProperty, isList );\n\t\t\t}\n\n\t\t\t// Drop null values if is not a \"@value\" property\n\t\t\tif( expandedValue === null && uri !== \"@value\" ) continue;\n\n\t\t\tif( uri !== \"@list\" && ! RDF.List.Factory.is( expandedValue ) && container === ObjectSchema.ContainerType.LIST ) {\n\t\t\t\tif( ! Utils.isArray( expandedValue ) ) expandedValue = [ expandedValue ];\n\t\t\t\texpandedValue = { \"@list\": expandedValue };\n\t\t\t}\n\n\t\t\tlet useArray:boolean = [ \"@type\", \"@id\", \"@value\", \"@language\" ].indexOf( uri ) === - 1;\n\t\t\tClass.addValue( expandedElement, uri, expandedValue, { propertyIsArray: useArray } );\n\t\t}\n\n\t\tif( \"@value\" in expandedElement ) {\n\t\t\tif( expandedElement[ \"@value\" ] === null ) expandedElement = null;\n\t\t} else if( \"@type\" in expandedElement ) {\n\t\t\tif( ! Utils.isArray( expandedElement[ \"@type\" ] ) ) expandedElement[ \"@type\" ] = [ expandedElement[ \"@type\" ] ];\n\t\t} else if( \"@set\" in expandedElement ) {\n\t\t\texpandedElement = expandedElement[ \"@set\" ];\n\t\t}\n\n\t\treturn expandedElement;\n\t}\n\n\tprivate static addValue( element:Object, propertyName:string, value:any, options:{ propertyIsArray:boolean } ):void {\n\t\tif( Utils.isArray( value ) ) {\n\t\t\tlet values:Array<any> = value;\n\t\t\tif( values.length === 0 && options.propertyIsArray && ! Utils.hasProperty( element, propertyName ) ) element[ propertyName ] = [];\n\t\t\tfor( let item of values ) {\n\t\t\t\tClass.addValue( element, propertyName, item, options );\n\t\t\t}\n\n\t\t} else if( propertyName in element ) {\n\t\t\tif( ! Class.hasValue( element, propertyName, value ) ) {\n\t\t\t\tlet items:Array<any> = element[ propertyName ];\n\t\t\t\tif( ! Utils.isArray( items ) ) items = element[ propertyName ] = [ items ];\n\t\t\t\titems.push( value );\n\t\t\t}\n\t\t} else {\n\t\t\telement[ propertyName ] = options.propertyIsArray ? [ value ] : value;\n\t\t}\n\t}\n\n\tprivate static hasProperty( element:Object, propertyName:string ):boolean {\n\t\tif( propertyName in element ) {\n\t\t\tlet item:any = element[ propertyName ];\n\t\t\treturn ! Utils.isArray( item ) || (<Array<any>> item).length > 0;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static compareValues( value1:any, value2:any ):boolean {\n\t\tif( value1 === value2 ) return true;\n\n\t\tif( Utils.isObject( value1 ) && Utils.isObject( value2 ) ) {\n\n\t\t\tif( \"@value\" in value1\n\t\t\t\t&& value1[ \"@value\" ] === value2[ \"@value\" ]\n\t\t\t\t&& value1[ \"@type\" ] === value2[ \"@type\" ]\n\t\t\t\t&& value1[ \"@language\" ] === value2[ \"@language\" ]\n\t\t\t\t&& value1[ \"@index\" ] === value2[ \"@index\" ] )\n\t\t\t\treturn true;\n\n\t\t\tif( \"@id\" in value1 )\n\t\t\t\treturn value1[ \"@id\" ] === value2[ \"@id\" ];\n\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate static hasValue( element:Object, propertyName:string, value:any ):boolean {\n\t\tif( Class.hasProperty( element, propertyName ) ) {\n\t\t\tlet item:any = element[ propertyName ];\n\t\t\tlet isList:boolean = RDF.List.Factory.is( item );\n\n\t\t\tif( isList || Utils.isArray( item ) ) {\n\t\t\t\tlet items:any[] = isList ? item[ \"@list\" ] : item;\n\n\t\t\t\tfor( let entry of items ) {\n\t\t\t\t\tif( Class.compareValues( entry, value ) ) return true;\n\t\t\t\t}\n\t\t\t} else if( ! Utils.isArray( value ) ) {\n\t\t\t\treturn Class.compareValues( item, value );\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}