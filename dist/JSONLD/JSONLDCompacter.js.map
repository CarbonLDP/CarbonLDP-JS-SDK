{"version":3,"sources":["JSONLD/JSONLDCompacter.ts"],"names":[],"mappings":"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","file":"JSONLDCompacter.js","sourcesContent":["import { Document } from \"../Document/Document\";\n\nimport { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\n\nimport { GeneralRegistry } from \"../GeneralRegistry/GeneralRegistry\";\n\nimport { DigestedObjectSchema } from \"../ObjectSchema/DigestedObjectSchema\";\nimport { ObjectSchemaResolver } from \"../ObjectSchema/ObjectSchemaResolver\";\n\nimport { Pointer } from \"../Pointer/Pointer\";\nimport { PointerLibrary } from \"../Pointer/PointerLibrary\";\n\nimport { QueryableMetadata } from \"../QueryDocuments/QueryableMetadata\";\nimport { QueryablePointer } from \"../QueryDocuments/QueryablePointer\";\nimport { QueryContextBuilder } from \"../QueryDocuments/QueryContextBuilder\";\nimport { QueryContextPartial } from \"../QueryDocuments/QueryContextPartial\";\nimport { QueryPropertyType } from \"../QueryDocuments/QueryProperty\";\n\nimport { RDFDocument } from \"../RDF/Document\";\nimport { RDFNode } from \"../RDF/Node\";\n\nimport { RegisteredPointer } from \"../Registry/RegisteredPointer\";\nimport { Registry } from \"../Registry/Registry\";\n\nimport { JSONLDConverter } from \"./JSONLDConverter\";\n\n\ninterface CompactionNode {\n\tpaths:string[];\n\tnode:RDFNode;\n\tresource:QueryablePointer;\n\tregistry:Registry<any>;\n\tprocessed?:boolean;\n}\n\nexport class JSONLDCompacter {\n\tprivate readonly registry:GeneralRegistry<Document>;\n\tprivate readonly root?:string;\n\tprivate readonly resolver?:ObjectSchemaResolver;\n\tprivate readonly converter?:JSONLDConverter;\n\tprivate readonly compactionMap:Map<string, CompactionNode>;\n\n\n\tconstructor( registry:GeneralRegistry<Document>, root?:string, schemaResolver?:ObjectSchemaResolver, jsonldConverter?:JSONLDConverter ) {\n\t\tthis.registry = registry;\n\n\t\tthis.root = root;\n\t\tthis.resolver = schemaResolver || registry;\n\t\tthis.converter = jsonldConverter || registry.$context.jsonldConverter;\n\t\tthis.compactionMap = new Map();\n\t}\n\n\tcompactDocument<T extends object>( rdfDocument:RDFDocument ):T & Document {\n\t\tconst rdfDocuments:RDFDocument[] = [ rdfDocument ];\n\t\treturn this.compactDocuments<T>( rdfDocuments )[ 0 ];\n\t}\n\n\tcompactDocuments<T extends object>( rdfDocuments:RDFDocument[], mainDocuments?:RDFDocument[] ):(T & Document)[] {\n\t\tif( ! mainDocuments || ! mainDocuments.length ) mainDocuments = rdfDocuments;\n\n\t\trdfDocuments.forEach( rdfDocument => {\n\t\t\tconst [ documentNodes, fragmentNodes ] = RDFDocument.getNodes( rdfDocument );\n\n\t\t\tif( documentNodes.length === 0 ) throw new IllegalArgumentError( `The RDFDocument \"${ rdfDocument[ \"@id\" ] }\" does not contain a document resource.` );\n\t\t\tif( documentNodes.length > 1 ) throw new IllegalArgumentError( `The RDFDocument \"${ rdfDocument[ \"@id\" ] }\" contains multiple document resources.` );\n\t\t\tconst documentNode:RDFNode = documentNodes[ 0 ];\n\n\t\t\tconst targetDocument:Document = this.__getResource( documentNode, this.registry );\n\n\t\t\tconst currentFragments:string[] = targetDocument\n\t\t\t\t.$getPointers( true )\n\t\t\t\t.map( pointer => pointer.$id )\n\t\t\t;\n\n\t\t\tconst newFragments:string[] = fragmentNodes\n\t\t\t\t.map( fragmentNode => this.__getResource( fragmentNode, targetDocument ) )\n\t\t\t\t.map( fragment => fragment.$id )\n\t\t\t;\n\n\t\t\tconst newFragmentsSet:Set<string> = new Set( newFragments );\n\t\t\tcurrentFragments\n\t\t\t\t.filter( id => ! newFragmentsSet.has( id ) )\n\t\t\t\t.forEach( id => targetDocument.$removePointer( id ) )\n\t\t\t;\n\t\t} );\n\n\t\tconst compactionQueue:string[] = mainDocuments\n\t\t\t.map( rdfDocument => rdfDocument[ \"@id\" ] );\n\n\t\tconst mainCompactedDocuments:(T & Document)[] = compactionQueue\n\t\t\t.map( this.compactionMap.get, this.compactionMap )\n\t\t\t.map( compactionNode => {\n\t\t\t\tif( this.root ) compactionNode.paths.push( this.root );\n\n\t\t\t\treturn compactionNode.resource as any;\n\t\t\t} );\n\n\t\twhile( compactionQueue.length ) {\n\t\t\tthis.__processCompactionQueue( compactionQueue );\n\n\t\t\tthis.compactionMap.forEach( ( node, key, map ) => {\n\t\t\t\tif( node.processed ) map.delete( key );\n\t\t\t} );\n\n\t\t\tif( this.compactionMap.size ) compactionQueue\n\t\t\t\t.push( this.compactionMap.keys().next().value );\n\t\t}\n\n\n\t\trdfDocuments\n\t\t\t.map( rdfDocument => rdfDocument[ \"@id\" ] )\n\t\t\t.map( id => this.registry.$getPointer( id, true ) )\n\t\t\t.forEach( persistedDocument => {\n\t\t\t\tpersistedDocument.$_syncSnapshot();\n\t\t\t\tthis.registry.decorate( persistedDocument );\n\t\t\t} );\n\n\t\treturn mainCompactedDocuments;\n\t}\n\n\n\tprivate __compactNode( node:RDFNode, resource:QueryablePointer, containerLibrary:PointerLibrary, path:string ):string[] {\n\t\tconst schema:DigestedObjectSchema = this.resolver.getSchemaFor( node, path );\n\n\t\tconst isPartial:boolean = this.__setOrRemovePartial( resource, schema, path );\n\n\t\tconst compactedData:object = this.converter.compact( node, {}, schema, containerLibrary, isPartial );\n\n\t\tconst addedProperties:string[] = [];\n\t\tnew Set( [\n\t\t\t...Object.keys( resource ),\n\t\t\t...Object.keys( compactedData ),\n\t\t] ).forEach( key => {\n\t\t\tif( ! compactedData.hasOwnProperty( key ) ) {\n\t\t\t\tif( ! isPartial || schema.properties.has( key ) ) delete resource[ key ];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taddedProperties.push( key );\n\n\t\t\tif( ! Array.isArray( resource[ key ] ) ) {\n\t\t\t\tresource[ key ] = compactedData[ key ];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst values:any[] = Array.isArray( compactedData[ key ] ) ? compactedData[ key ] : [ compactedData[ key ] ];\n\t\t\tresource[ key ].length = 0;\n\t\t\tresource[ key ].push( ...values );\n\t\t} );\n\n\t\treturn addedProperties\n\t\t\t.filter( x => schema.properties.has( x ) )\n\t\t\t;\n\t}\n\n\tprivate __getResource<M extends QueryablePointer & RegisteredPointer>( node:RDFNode, registry:Registry<M> ):M {\n\t\tconst resource:M = registry.$getPointer( node[ \"@id\" ], true );\n\n\t\tif( Registry.isDecorated( resource ) ) registry = resource;\n\n\t\tthis.compactionMap\n\t\t\t.set( resource.$id, { paths: [], node, resource, registry } );\n\n\t\treturn resource;\n\t}\n\n\tprivate __processCompactionQueue( compactionQueue:string[] ):void {\n\t\twhile( compactionQueue.length ) {\n\t\t\tconst targetNode:string = compactionQueue.shift();\n\n\t\t\tif( ! this.compactionMap.has( targetNode ) ) continue;\n\t\t\tconst compactionNode:CompactionNode = this.compactionMap.get( targetNode );\n\t\t\tcompactionNode.processed = true;\n\n\t\t\tconst targetPath:string = compactionNode.paths.shift();\n\n\t\t\tconst addedProperties:string[] = this.__compactNode( compactionNode.node, compactionNode.resource, compactionNode.registry, targetPath );\n\n\t\t\tfor( const propertyName of addedProperties ) {\n\t\t\t\tif( ! compactionNode.resource.hasOwnProperty( propertyName ) ) continue;\n\n\t\t\t\tconst value:any = compactionNode.resource[ propertyName ];\n\t\t\t\tconst values:any[] = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst pointers:Pointer[] = values.filter( Pointer.is );\n\t\t\t\tfor( const pointer of pointers ) {\n\t\t\t\t\tif( ! this.compactionMap.has( pointer.$id ) ) continue;\n\t\t\t\t\tconst subCompactionNode:CompactionNode = this.compactionMap.get( pointer.$id );\n\n\t\t\t\t\tif( targetPath ) {\n\t\t\t\t\t\tconst subPath:string = `${ targetPath }.${ propertyName }`;\n\t\t\t\t\t\tif( ! this.resolver.hasSchemaFor( subCompactionNode.node, subPath ) ) continue;\n\n\t\t\t\t\t\tsubCompactionNode.paths.push( subPath );\n\t\t\t\t\t\tcompactionQueue.push( pointer.$id );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprivate __setOrRemovePartial( resource:QueryablePointer, schema:DigestedObjectSchema, path:string ):boolean {\n\t\tif( this.__willBePartial( resource, schema, path ) ) return true;\n\n\t\tif( resource.$_queryableMetadata ) resource.$_queryableMetadata = void 0;\n\t\treturn false;\n\t}\n\n\tprivate __willBePartial( resource:QueryablePointer, schema:DigestedObjectSchema, path:string ):boolean {\n\t\tif( this.resolver instanceof QueryContextPartial ) return true;\n\t\tif( ! (this.resolver instanceof QueryContextBuilder) ) return false;\n\n\t\tconst type:QueryPropertyType = this.resolver.hasProperty( path ) ?\n\t\t\tthis.resolver.getProperty( path ).getType() : void 0;\n\n\t\tif( type !== QueryPropertyType.PARTIAL && type !== QueryPropertyType.ALL ) return false;\n\n\t\tresource.$_queryableMetadata = new QueryableMetadata(\n\t\t\ttype === QueryPropertyType.ALL ? QueryableMetadata.ALL : schema,\n\t\t\tresource.$_queryableMetadata\n\t\t);\n\t\treturn true;\n\t}\n\n}\n"]}