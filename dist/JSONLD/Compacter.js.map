{"version":3,"sources":["JSONLD/Compacter.ts"],"names":[],"mappings":"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","file":"Compacter.js","sourcesContent":["import { Documents } from \"../Documents\";\nimport {\n\tDigestedObjectSchema,\n\tObjectSchemaResolver,\n} from \"../ObjectSchema\";\nimport * as PersistedDocument from \"../PersistedDocument\";\nimport { PersistedResource } from \"../PersistedResource\";\nimport {\n\tPointer,\n\tPointerLibrary,\n} from \"../Pointer\";\nimport * as RDFDocument from \"../RDF/Document\";\nimport * as RDFNode from \"../RDF/Node\";\nimport { Util as URIUtils } from \"../RDF/URI\";\nimport { PartialMetadata } from \"../SPARQL/QueryDocument/PartialMetadata\";\nimport { QueryContextBuilder } from \"../SPARQL/QueryDocument/QueryContextBuilder\";\nimport { QueryPropertyType } from \"../SPARQL/QueryDocument/QueryProperty\";\nimport { JSONLDConverter } from \"./Converter\";\n\nfunction getRelativeID( node:RDFNode.Class ):string {\n\tconst id:string = node[ \"@id\" ];\n\treturn URIUtils.hasFragment( id ) ? URIUtils.getFragment( id ) : id;\n}\n\ninterface CompactionNode {\n\tpaths:string[];\n\tnode:RDFNode.Class;\n\tresource:PersistedResource;\n\tcontainerLibrary:PointerLibrary;\n\tprocessed?:boolean;\n}\n\nexport class JSONLDCompacter {\n\tprivate documents:Documents;\n\tprivate root?:string;\n\tprivate resolver?:ObjectSchemaResolver;\n\tprivate converter?:JSONLDConverter;\n\tprivate compactionMap:Map<string, CompactionNode>;\n\n\tconstructor( documents:Documents, root?:string, schemaResolver?:ObjectSchemaResolver, jsonldConverter?:JSONLDConverter ) {\n\t\tthis.documents = documents;\n\t\tthis.root = root;\n\t\tthis.resolver = schemaResolver || documents;\n\t\tthis.converter = jsonldConverter || documents.jsonldConverter;\n\t\tthis.compactionMap = new Map();\n\t}\n\n\tcompactDocument<T extends PersistedDocument.Class>( rdfDocument:RDFDocument.Class ):T {\n\t\tconst rdfDocuments:RDFDocument.Class[] = [ rdfDocument ];\n\t\treturn this.compactDocuments<T>( rdfDocuments )[ 0 ];\n\t}\n\n\tcompactDocuments<T extends PersistedDocument.Class>( rdfDocuments:RDFDocument.Class[], mainDocuments:RDFDocument.Class[] = rdfDocuments ):T[] {\n\t\trdfDocuments.forEach( rdfDocument => {\n\t\t\tconst [ [ documentNode ], fragmentNodes ] = RDFDocument.Util.getNodes( rdfDocument );\n\t\t\tconst targetDocument:PersistedDocument.Class = this.getResource( documentNode, this.documents, true );\n\n\t\t\tconst fragmentsSet:Set<string> = new Set( targetDocument._fragmentsIndex.keys() );\n\n\t\t\tfragmentNodes.forEach( fragmentNode => {\n\t\t\t\tconst fragmentID:string = getRelativeID( fragmentNode );\n\t\t\t\tif( fragmentsSet.has( fragmentID ) ) fragmentsSet.delete( fragmentID );\n\n\t\t\t\tthis.getResource( fragmentNode, targetDocument );\n\t\t\t} );\n\n\t\t\tfragmentsSet.forEach( targetDocument._removeFragment, targetDocument );\n\t\t} );\n\n\t\tconst compactedDocuments:PersistedDocument.Class[] = rdfDocuments\n\t\t\t.map( rdfDocument => rdfDocument[ \"@id\" ] )\n\t\t\t.map( this.compactionMap.get, this.compactionMap )\n\t\t\t.map( compactionNode => compactionNode.resource as any );\n\n\t\tconst compactionQueue:string[] = mainDocuments\n\t\t\t.map( rdfDocument => rdfDocument[ \"@id\" ] );\n\n\t\tconst mainCompactedDocuments:T[] = compactionQueue\n\t\t\t.map( this.compactionMap.get, this.compactionMap )\n\t\t\t.map( compactionNode => {\n\t\t\t\tif( this.root ) compactionNode.paths.push( this.root );\n\n\t\t\t\treturn compactionNode.resource as any;\n\t\t\t} );\n\n\t\twhile( compactionQueue.length ) {\n\t\t\tthis.processCompactionQueue( compactionQueue );\n\n\t\t\tthis.compactionMap.forEach( ( node, key, map ) => {\n\t\t\t\tif( node.processed ) map.delete( key );\n\t\t\t} );\n\n\t\t\tif( this.compactionMap.size ) compactionQueue\n\t\t\t\t.push( this.compactionMap.keys().next().value );\n\t\t}\n\n\t\tcompactedDocuments.forEach( persistedDocument => {\n\t\t\tpersistedDocument._syncSavedFragments();\n\t\t\tpersistedDocument._resolved = true;\n\n\t\t\tpersistedDocument.types\n\t\t\t\t.map( type => this.documents.documentDecorators.get( type ) )\n\t\t\t\t.forEach( decorator => decorator && decorator.call( void 0, persistedDocument, this.documents ) );\n\t\t} );\n\n\t\treturn mainCompactedDocuments;\n\t}\n\n\tprivate compactNode( node:RDFNode.Class, resource:PersistedResource, containerLibrary:PointerLibrary, path:string ):string[] {\n\t\tconst schema:DigestedObjectSchema = this.resolver.getSchemaFor( node, path );\n\n\t\tif( this.resolver instanceof QueryContextBuilder ) {\n\t\t\tconst type:QueryPropertyType = this.resolver.hasProperty( path ) ?\n\t\t\t\tthis.resolver.getProperty( path ).getType() : void 0;\n\n\t\t\tif( type === QueryPropertyType.PARTIAL || type === QueryPropertyType.ALL ) {\n\t\t\t\tresource._partialMetadata = new PartialMetadata(\n\t\t\t\t\ttype === QueryPropertyType.ALL ? PartialMetadata.ALL : schema,\n\t\t\t\t\tresource._partialMetadata\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst compactedData:object = this.converter.compact( node, {}, schema, containerLibrary, resource.isPartial() );\n\n\t\tconst addedProperties:string[] = [];\n\n\t\tnew Set( [\n\t\t\t...Object.keys( resource ),\n\t\t\t...Object.keys( compactedData ),\n\t\t] ).forEach( key => {\n\t\t\tif( ! compactedData.hasOwnProperty( key ) ) {\n\t\t\t\tif( ! resource.isPartial() || schema.properties.has( key ) ) delete resource[ key ];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taddedProperties.push( key );\n\n\t\t\tif( ! Array.isArray( resource[ key ] ) ) {\n\t\t\t\tresource[ key ] = compactedData[ key ];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst values:any[] = Array.isArray( compactedData[ key ] ) ? compactedData[ key ] : [ compactedData[ key ] ];\n\t\t\tresource[ key ].length = 0;\n\t\t\tresource[ key ].push( ...values );\n\t\t} );\n\n\t\treturn addedProperties\n\t\t\t.filter( x => schema.properties.has( x ) )\n\t\t\t;\n\t}\n\n\tprivate getResource<T extends PersistedResource>( node:RDFNode.Class, containerLibrary:PointerLibrary, isDocument?:boolean ):T {\n\t\tconst resource:T = containerLibrary.getPointer( node[ \"@id\" ] ) as any;\n\n\t\tif( isDocument ) containerLibrary = PersistedDocument.Factory.decorate( resource, this.documents );\n\t\tthis.compactionMap.set( resource.id, { paths: [], node, resource, containerLibrary } );\n\n\t\treturn resource;\n\t}\n\n\tprivate processCompactionQueue( compactionQueue:string[] ):void {\n\t\twhile( compactionQueue.length ) {\n\t\t\tconst targetNode:string = compactionQueue.shift();\n\n\t\t\tif( ! this.compactionMap.has( targetNode ) ) continue;\n\t\t\tconst compactionNode:CompactionNode = this.compactionMap.get( targetNode );\n\t\t\tcompactionNode.processed = true;\n\n\t\t\tconst targetPath:string = compactionNode.paths.shift();\n\n\t\t\tconst addedProperties:string[] = this.compactNode( compactionNode.node, compactionNode.resource, compactionNode.containerLibrary, targetPath );\n\t\t\tcompactionNode.resource._syncSnapshot();\n\n\t\t\tfor( const propertyName of addedProperties ) {\n\t\t\t\tif( ! compactionNode.resource.hasOwnProperty( propertyName ) ) continue;\n\n\t\t\t\tconst value:any = compactionNode.resource[ propertyName ];\n\t\t\t\tconst values:any[] = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst pointers:Pointer[] = values.filter( Pointer.is );\n\t\t\t\tfor( const pointer of pointers ) {\n\t\t\t\t\tif( ! this.compactionMap.has( pointer.id ) ) continue;\n\t\t\t\t\tconst subCompactionNode:CompactionNode = this.compactionMap.get( pointer.id );\n\n\t\t\t\t\tif( targetPath ) {\n\t\t\t\t\t\tconst subPath:string = `${ targetPath }.${ propertyName }`;\n\t\t\t\t\t\tif( ! this.resolver.hasSchemaFor( subCompactionNode.node, subPath ) ) continue;\n\n\t\t\t\t\t\tsubCompactionNode.paths.push( subPath );\n\t\t\t\t\t\tcompactionQueue.push( pointer.id );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default JSONLDCompacter;\n"]}