{"version":3,"sources":["Members/MembersDocument.ts"],"names":[],"mappings":"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","file":"MembersDocument.js","sourcesContent":["import { AbstractContext } from \"../AbstractContext\";\nimport { ModelDecorator } from \"../core\";\nimport {\n\tIllegalActionError,\n\tIllegalArgumentError\n} from \"../Errors\";\nimport { FreeResources } from \"../FreeResources\";\nimport {\n\tRequestOptions,\n\tRequestService,\n\tRequestUtils\n} from \"../HTTP\";\nimport { Pointer } from \"../Pointer\";\nimport { RegistryService } from \"../Registry\";\nimport { TransientResource } from \"../Resource\";\nimport {\n\tisObject,\n\tisString,\n\tPickSelfProps,\n\tpromiseMethod\n} from \"../Utils\";\nimport {\n\tC,\n\tLDP\n} from \"../Vocabularies\";\nimport { AddMemberAction } from \"./AddMemberAction\";\nimport { RemoveMemberAction } from \"./RemoveMemberAction\";\n\n\nexport interface MembersDocument extends TransientResource {\n\t_registry:RegistryService<MembersDocument, AbstractContext<MembersDocument, any> | undefined> | undefined;\n\n\n\taddMember( member:string | Pointer, requestOptions?:RequestOptions ):Promise<void>;\n\taddMember( uri:string, member:string | Pointer, requestOptions?:RequestOptions ):Promise<void>;\n\n\taddMembers( members:(string | Pointer)[], requestOptions?:RequestOptions ):Promise<void>;\n\taddMembers( uri:string, members:(string | Pointer)[], requestOptions?:RequestOptions ):Promise<void>;\n\n\n\tremoveMember( member:string | Pointer, requestOptions?:RequestOptions ):Promise<void>;\n\tremoveMember( uri:string, member:string | Pointer, requestOptions?:RequestOptions ):Promise<void>;\n\n\tremoveMembers( members:(string | Pointer)[], requestOptions?:RequestOptions ):Promise<void>;\n\tremoveMembers( uri:string, members:(string | Pointer)[], requestOptions?:RequestOptions ):Promise<void>;\n\n\tremoveAllMembers( requestOptions?:RequestOptions ):Promise<void>;\n\tremoveAllMembers( uri:string, requestOptions?:RequestOptions ):Promise<void>;\n}\n\n\nfunction getRegistry( repository:MembersDocument ):RegistryService<MembersDocument, AbstractContext<MembersDocument, any> | undefined> {\n\tif( repository._registry && repository._registry.context ) return repository._registry;\n\tthrow new IllegalActionError( `\"${ repository.id }\" doesn't support Members management requests.` );\n}\n\nfunction setDefaultRequestOptions( registry:RegistryService<MembersDocument, AbstractContext<MembersDocument, any> | undefined>, requestOptions:RequestOptions ):RequestOptions {\n\tif( registry.context && registry.context.auth )\n\t\tregistry.context.auth.addAuthentication( requestOptions );\n\n\tRequestUtils.setPreferredInteractionModel( LDP.Container, requestOptions );\n\tRequestUtils.setAcceptHeader( \"application/ld+json\", requestOptions );\n\n\treturn requestOptions;\n}\n\nfunction parseMembers( registry:RegistryService<Pointer, any>, pointers:(string | Pointer)[] ):Pointer[] {\n\treturn pointers.map( pointer => {\n\t\tif( isString( pointer ) ) return registry.getPointer( pointer );\n\t\tif( Pointer.is( pointer ) ) return pointer;\n\n\t\tthrow new IllegalArgumentError( \"No valid Pointer or URI provided.\" );\n\t} );\n}\n\n\nfunction sendAddAction( repository:MembersDocument, uri:string | undefined, members:(string | Pointer)[], requestOptions:RequestOptions = {} ):Promise<void> {\n\treturn promiseMethod( () => {\n\t\tconst registry:RegistryService<MembersDocument, AbstractContext<MembersDocument, any> | undefined> = getRegistry( repository );\n\n\t\tconst url:string = RequestUtils.getRequestURLFor( registry, repository, uri );\n\t\tconst targetMembers:Pointer[] = parseMembers( registry, members );\n\n\t\tsetDefaultRequestOptions( registry, requestOptions );\n\t\tRequestUtils.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\n\t\tconst freeResources:FreeResources = FreeResources.createFrom( {\n\t\t\t_registry: registry,\n\t\t} );\n\t\tfreeResources._register( AddMemberAction.createFrom( { targetMembers } ) );\n\n\t\tconst body:string = JSON.stringify( freeResources );\n\n\t\treturn RequestService\n\t\t\t.put( url, body, requestOptions )\n\t\t\t.then( () => {} )\n\t\t\t.catch( registry._parseErrorFromResponse.bind( registry ) )\n\t\t\t;\n\t} );\n}\n\nfunction sendRemoveAction( repository:MembersDocument, uri:string | undefined, members:(string | Pointer)[], requestOptions:RequestOptions = {} ):Promise<void> {\n\treturn promiseMethod( () => {\n\t\tconst registry:RegistryService<MembersDocument, AbstractContext<MembersDocument, any> | undefined> = getRegistry( repository );\n\n\t\tconst url:string = RequestUtils.getRequestURLFor( registry, repository, uri );\n\t\tconst targetMembers:Pointer[] = parseMembers( registry, members );\n\n\t\tsetDefaultRequestOptions( registry, requestOptions );\n\t\tRequestUtils.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\t\tRequestUtils.setRetrievalPreferences( {\n\t\t\tinclude: [ C.PreferSelectedMembershipTriples ],\n\t\t\tomit: [ C.PreferMembershipTriples ],\n\t\t}, requestOptions );\n\n\t\tconst freeResources:FreeResources = FreeResources.createFrom( {\n\t\t\t_registry: registry,\n\t\t} );\n\t\tfreeResources._register( RemoveMemberAction.createFrom( { targetMembers } ) );\n\n\t\tconst body:string = JSON.stringify( freeResources );\n\n\t\treturn RequestService\n\t\t\t.delete( url, body, requestOptions )\n\t\t\t.then( () => {} )\n\t\t\t.catch( registry._parseErrorFromResponse.bind( registry ) )\n\t\t\t;\n\t} );\n}\n\n\nconst PROTOTYPE:PickSelfProps<MembersDocument, TransientResource, \"_registry\"> = {\n\t_registry: void 0,\n\n\n\taddMember( this:MembersDocument, uriOrMember:string | (Pointer | string), memberOrOptions?:(Pointer | string) | RequestOptions, requestOptions?:RequestOptions ):Promise<void> {\n\t\trequestOptions = isObject( memberOrOptions ) && ! Pointer.is( memberOrOptions ) ?\n\t\t\tmemberOrOptions :\n\t\t\trequestOptions;\n\n\t\tconst member:(Pointer | string) = memberOrOptions !== requestOptions ?\n\t\t\tmemberOrOptions as (Pointer | string) :\n\t\t\turiOrMember as (Pointer | string);\n\n\t\tconst uri:string | undefined = member !== uriOrMember ?\n\t\t\turiOrMember as string :\n\t\t\tvoid 0;\n\n\t\treturn sendAddAction( this, uri, [ member ], requestOptions );\n\t},\n\n\taddMembers( this:MembersDocument, uriOrMembers:string | (Pointer | string)[], membersOrOptions:(Pointer | string)[] | RequestOptions, requestOptions?:RequestOptions ):Promise<void> {\n\t\trequestOptions = ! Array.isArray( membersOrOptions ) ?\n\t\t\tmembersOrOptions :\n\t\t\trequestOptions;\n\n\t\tconst members:(Pointer | string)[] = membersOrOptions !== requestOptions ?\n\t\t\tmembersOrOptions as (Pointer | string)[] :\n\t\t\turiOrMembers as (Pointer | string)[];\n\n\t\tconst uri:string | undefined = members !== uriOrMembers ?\n\t\t\turiOrMembers as string :\n\t\t\tvoid 0;\n\n\t\treturn sendAddAction( this, uri, members, requestOptions );\n\t},\n\n\n\tremoveMember( this:MembersDocument, uriOrMember:string | (Pointer | string), memberOrOptions:(Pointer | string) | RequestOptions, requestOptions?:RequestOptions ):Promise<void> {\n\t\trequestOptions = isObject( memberOrOptions ) && ! Pointer.is( memberOrOptions ) ?\n\t\t\tmemberOrOptions :\n\t\t\trequestOptions;\n\n\t\tconst member:(Pointer | string) = memberOrOptions !== requestOptions ?\n\t\t\tmemberOrOptions as (Pointer | string) :\n\t\t\turiOrMember as (Pointer | string);\n\n\t\tconst uri:string | undefined = member !== uriOrMember ?\n\t\t\turiOrMember as string :\n\t\t\tvoid 0;\n\n\t\treturn sendRemoveAction( this, uri, [ member ], requestOptions );\n\t},\n\n\tremoveMembers( this:MembersDocument, uriOrMembers:string | (Pointer | string)[], membersOrOptions:(Pointer | string)[] | RequestOptions, requestOptions?:RequestOptions ):Promise<void> {\n\t\trequestOptions = ! Array.isArray( membersOrOptions ) ?\n\t\t\tmembersOrOptions :\n\t\t\trequestOptions;\n\n\t\tconst members:(Pointer | string)[] = membersOrOptions !== requestOptions ?\n\t\t\tmembersOrOptions as (Pointer | string)[] :\n\t\t\turiOrMembers as (Pointer | string)[];\n\n\t\tconst uri:string | undefined = members !== uriOrMembers ?\n\t\t\turiOrMembers as string :\n\t\t\tvoid 0;\n\n\t\treturn sendRemoveAction( this, uri, members, requestOptions );\n\t},\n\n\n\tremoveAllMembers( this:MembersDocument, uriOrOptions:string | RequestOptions, requestOptions?:RequestOptions ):Promise<void> {\n\t\trequestOptions = isObject( uriOrOptions ) ? uriOrOptions :\n\t\t\trequestOptions ? requestOptions : {};\n\n\t\tconst uri:string | undefined = uriOrOptions !== requestOptions ?\n\t\t\turiOrOptions as string :\n\t\t\tvoid 0;\n\n\t\treturn promiseMethod( () => {\n\t\t\tconst registry:RegistryService<MembersDocument, AbstractContext<MembersDocument, any> | undefined> = getRegistry( this );\n\t\t\tconst url:string = RequestUtils.getRequestURLFor( registry, this, uri );\n\n\t\t\tsetDefaultRequestOptions( registry, requestOptions );\n\t\t\tRequestUtils.setRetrievalPreferences( {\n\t\t\t\tinclude: [\n\t\t\t\t\tC.PreferMembershipTriples,\n\t\t\t\t],\n\t\t\t\tomit: [\n\t\t\t\t\tC.PreferMembershipResources,\n\t\t\t\t\tC.PreferContainmentTriples,\n\t\t\t\t\tC.PreferContainmentResources,\n\t\t\t\t\tC.PreferContainer,\n\t\t\t\t],\n\t\t\t}, requestOptions );\n\n\t\t\treturn RequestService\n\t\t\t\t.delete( url, requestOptions )\n\t\t\t\t.then( () => {} )\n\t\t\t\t.catch( registry._parseErrorFromResponse.bind( registry ) )\n\t\t\t\t;\n\t\t} );\n\t},\n};\n\nexport interface MembersDocumentFactory {\n\tPROTOTYPE:PickSelfProps<MembersDocument, TransientResource, \"_registry\">;\n\n\n\tisDecorated( object:object ):object is MembersDocument;\n\n\tdecorate<T extends object>( object:T ):T & MembersDocument;\n}\n\nexport const MembersDocument:MembersDocumentFactory = {\n\tPROTOTYPE,\n\n\n\tisDecorated( object:object ):object is MembersDocument {\n\t\treturn isObject( object )\n\t\t\t&& ModelDecorator\n\t\t\t\t.hasPropertiesFrom( PROTOTYPE, object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends object>( object:T ):T & MembersDocument {\n\t\tif( MembersDocument.isDecorated( object ) ) return object;\n\n\t\tconst resource:T & TransientResource = ModelDecorator\n\t\t\t.decorateMultiple( object, TransientResource );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( PROTOTYPE, resource );\n\t},\n};\n"]}