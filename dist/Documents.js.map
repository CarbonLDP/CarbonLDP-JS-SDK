{"version":3,"sources":["Documents.ts"],"names":[],"mappings":"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","file":"Documents.js","sourcesContent":["import * as Errors from \"./Errors\";\nimport * as HTTP from \"./HTTP\";\nimport Context from \"./Context\";\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nimport * as AccessPoint from \"./AccessPoint\";\nimport * as Auth from \"./Auth\";\nimport * as BlankNode from \"./BlankNode\";\nimport * as Document from \"./Document\";\nimport * as FreeResources from \"./FreeResources\";\nimport * as JSONLD from \"./JSONLD\";\nimport * as PersistedAccessPoint from \"./PersistedAccessPoint\";\nimport * as PersistedBlankNode from \"./PersistedBlankNode\";\nimport * as PersistedDocument from \"./PersistedDocument\";\nimport * as PersistedFragment from \"./PersistedFragment\";\nimport * as PersistedNamedFragment from \"./PersistedNamedFragment\";\nimport * as PersistedProtectedDocument from \"./PersistedProtectedDocument\";\nimport * as ProtectedDocument from \"./ProtectedDocument\";\nimport * as Pointer from \"./Pointer\";\nimport * as NS from \"./NS\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as LDP from \"./LDP\";\nimport * as SPARQL from \"./SPARQL\";\nimport * as Resource from \"./Resource\";\nimport * as RetrievalPreferences from \"./RetrievalPreferences\";\n\nimport SparqlBuilder from \"./SPARQL/Builder\";\nimport { QueryClause } from \"sparqler/Clauses\";\nimport { promiseMethod } from \"./Utils\";\n\nexport interface DocumentDecorator {\n\tdecorator:( object:Object, ...parameters:any[] ) => Object;\n\tparameters?:any[];\n}\n\nexport class Class implements Pointer.Library, Pointer.Validator, ObjectSchema.Resolver {\n\tprivate static _documentSchema:ObjectSchema.DigestedObjectSchema = ObjectSchema.Digester.digestSchema( Document.SCHEMA );\n\n\tprivate _jsonldConverter:JSONLD.Converter.Class;\n\tget jsonldConverter():JSONLD.Converter.Class { return this._jsonldConverter; }\n\n\tprivate _documentDecorators:Map<string, DocumentDecorator>;\n\tget documentDecorators():Map<string, DocumentDecorator> { return this._documentDecorators; }\n\n\tprivate context:Context;\n\tprivate pointers:Map<string, Pointer.Class>;\n\n\t// Tracks the documents that are being resolved to avoid triggering repeated requests\n\tprivate documentsBeingResolved:Map<string, Promise<[ PersistedDocument.Class, HTTP.Response.Class ]>>;\n\n\tconstructor( context:Context = null ) {\n\t\tthis.context = context;\n\n\t\tthis.pointers = new Map<string, Pointer.Class>();\n\t\tthis.documentsBeingResolved = new Map<string, Promise<[ PersistedDocument.Class, HTTP.Response.Class ]>>();\n\n\t\tif( ! ! this.context && ! ! this.context.parentContext ) {\n\t\t\tlet contextJSONLDConverter:JSONLD.Converter.Class = this.context.parentContext.documents.jsonldConverter;\n\t\t\tthis._jsonldConverter = new JSONLD.Converter.Class( contextJSONLDConverter.literalSerializers );\n\t\t} else {\n\t\t\tthis._jsonldConverter = new JSONLD.Converter.Class();\n\t\t}\n\n\t\tlet decorators:Map<string, DocumentDecorator> = new Map();\n\t\tif( ! ! this.context && ! ! this.context.parentContext ) {\n\t\t\tlet parentDecorators:Map<string, DocumentDecorator> = this.context.parentContext.documents.documentDecorators;\n\t\t\tif( parentDecorators ) decorators = this._documentDecorators = Utils.M.extend( decorators, parentDecorators );\n\t\t} else {\n\t\t\tdecorators.set( ProtectedDocument.RDF_CLASS, { decorator: PersistedProtectedDocument.Factory.decorate } );\n\t\t\tdecorators.set( Auth.ACL.RDF_CLASS, { decorator: Auth.PersistedACL.Factory.decorate } );\n\t\t\tdecorators.set( Auth.User.RDF_CLASS, { decorator: Auth.PersistedUser.Factory.decorate, parameters: [ this ] } );\n\t\t\tdecorators.set( Auth.Role.RDF_CLASS, { decorator: Auth.PersistedRole.Factory.decorate, parameters: [ this ] } );\n\t\t\tdecorators.set( Auth.Credentials.RDF_CLASS, { decorator: Auth.PersistedCredentials.Factory.decorate, parameters: [ this ] } );\n\t\t}\n\n\t\tthis._documentDecorators = decorators;\n\t}\n\n\tinScope( pointer:Pointer.Class ):boolean;\n\tinScope( id:string ):boolean;\n\tinScope( idOrPointer:any ):boolean {\n\t\tlet id:string = Pointer.Factory.is( idOrPointer ) ? idOrPointer.id : idOrPointer;\n\n\t\tif( RDF.URI.Util.isBNodeID( id ) ) return false;\n\n\t\tif( ! ! this.context ) {\n\t\t\tif( RDF.URI.Util.isPrefixed( id ) ) id = ObjectSchema.Digester.resolvePrefixedURI( id, this.context.getObjectSchema() );\n\n\t\t\tif( RDF.URI.Util.isRelative( id ) ) return true;\n\t\t\tif( RDF.URI.Util.isBaseOf( this.context.baseURI, id ) ) return true;\n\t\t} else {\n\t\t\tif( RDF.URI.Util.isAbsolute( id ) ) return true;\n\t\t}\n\n\t\tif( ! ! this.context && ! ! this.context.parentContext ) return this.context.parentContext.documents.inScope( id );\n\n\t\treturn RDF.URI.Util.isRelative( id );\n\t}\n\n\thasPointer( id:string ):boolean {\n\t\tid = this.getPointerID( id );\n\n\t\tif( this.pointers.has( id ) ) return true;\n\n\t\tif( ! ! this.context && ! ! this.context.parentContext ) return this.context.parentContext.documents.hasPointer( id );\n\n\t\treturn false;\n\t}\n\n\tgetPointer( id:string ):Pointer.Class {\n\t\tlet localID:string = this.getPointerID( id );\n\n\t\tif( localID === null ) {\n\t\t\tif( ! ! this.context && ! ! this.context.parentContext ) return this.context.parentContext.documents.getPointer( id );\n\t\t\tthrow new Errors.IllegalArgumentError( \"The pointer id is not supported by this module.\" );\n\t\t}\n\n\t\tlet pointer:Pointer.Class;\n\t\tif( ! this.pointers.has( localID ) ) {\n\t\t\tpointer = this.createPointer( localID );\n\t\t\tthis.pointers.set( localID, pointer );\n\t\t}\n\n\t\treturn this.pointers.get( localID );\n\t}\n\n\tremovePointer( id:Pointer.Class ):boolean;\n\tremovePointer( id:string ):boolean;\n\tremovePointer( idOrPointer:string | Pointer.Class ):boolean {\n\t\tlet id:string = Utils.isString( idOrPointer ) ? <string> idOrPointer : (<Pointer.Class> idOrPointer).id;\n\t\tlet localID:string = this.getPointerID( id );\n\n\t\tif( localID === null ) {\n\t\t\tif( ! ! this.context && ! ! this.context.parentContext ) return this.context.parentContext.documents.removePointer( id );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pointers.delete( localID );\n\t}\n\n\tget<T>( uri:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ T & PersistedDocument.Class, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst pointerID:string = this.getPointerID( uri );\n\n\t\t\turi = this.getRequestURI( uri );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.RDFSource );\n\n\t\t\tif( this.hasPointer( uri ) ) {\n\t\t\t\tlet pointer:Pointer.Class = this.getPointer( uri );\n\t\t\t\tif( pointer.isResolved() ) {\n\t\t\t\t\treturn Promise.resolve<[ T & PersistedDocument.Class, HTTP.Response.Class ]>( [ <any> pointer, null ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( this.documentsBeingResolved.has( pointerID ) ) return this.documentsBeingResolved.get( pointerID ) as Promise<[ T & PersistedDocument.Class, HTTP.Response.Class ]>;\n\n\t\t\tconst promise:Promise<[ T & PersistedDocument.Class, HTTP.Response.Class ]> = HTTP.Request.Service.get( uri, requestOptions, new RDF.Document.Parser() ).then<[ T & PersistedDocument.Class, HTTP.Response.Class ]>( ( [ rdfDocuments, response ]:[ RDF.Document.Class[], HTTP.Response.Class ] ) => {\n\t\t\t\tlet eTag:string = HTTP.Response.Util.getETag( response );\n\t\t\t\tif( eTag === null ) throw new HTTP.Errors.BadResponseError( \"The response doesn't contain an ETag\", response );\n\n\t\t\t\tlet locationHeader:HTTP.Header.Class = response.getHeader( \"Content-Location\" );\n\t\t\t\tif( ! ! locationHeader ) {\n\t\t\t\t\tif( locationHeader.values.length !== 1 ) throw new HTTP.Errors.BadResponseError( \"The response contains more than one Content-Location header.\", response );\n\n\t\t\t\t\turi = locationHeader.toString();\n\t\t\t\t\tif( ! uri ) throw new HTTP.Errors.BadResponseError( `The response doesn't contain a valid 'Content-Location' header.`, response );\n\t\t\t\t}\n\n\t\t\t\tlet rdfDocument:RDF.Document.Class = this.getRDFDocument( uri, rdfDocuments, response );\n\t\t\t\tif( rdfDocument === null ) throw new HTTP.Errors.BadResponseError( \"No document was returned.\", response );\n\n\t\t\t\tlet document:T & PersistedDocument.Class = this._getPersistedDocument<T>( rdfDocument, response );\n\t\t\t\tdocument._etag = eTag;\n\n\t\t\t\tthis.documentsBeingResolved.delete( pointerID );\n\t\t\t\treturn [ document, response ];\n\t\t\t} ).catch( error => {\n\t\t\t\tthis.documentsBeingResolved.delete( pointerID );\n\t\t\t\treturn Promise.reject( error );\n\t\t\t} );\n\n\t\t\tthis.documentsBeingResolved.set( pointerID, promise );\n\t\t\treturn promise;\n\t\t} );\n\t}\n\n\texists( documentURI:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ boolean, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.RDFSource );\n\n\t\t\treturn HTTP.Request.Service.head( documentURI, requestOptions );\n\t\t} ).then<[ boolean, HTTP.Response.Class ]>( ( response:HTTP.Response.Class ) => {\n\t\t\treturn [ true, response ];\n\t\t} ).catch<[ boolean, HTTP.Response.Class ]>( ( error:HTTP.Errors.Error ) => {\n\t\t\tif( error.statusCode === 404 ) return [ false, error.response ];\n\t\t\treturn Promise.reject( error );\n\t\t} );\n\t}\n\n\tcreateChild<T>( parentURI:string, childObject:T, slug?:string, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ]>;\n\tcreateChild<T>( parentURI:string, childObject:T, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ]>;\n\tcreateChild<T>( parentURI:string, childObject:T, slugOrRequestOptions?:any, requestOptions:HTTP.Request.Options = {} ):Promise<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ]> {\n\t\tlet slug:string = Utils.isString( slugOrRequestOptions ) ? slugOrRequestOptions : null;\n\t\trequestOptions = ! Utils.isString( slugOrRequestOptions ) && ! ! slugOrRequestOptions ? slugOrRequestOptions : requestOptions;\n\n\t\treturn promiseMethod( () => {\n\t\t\tif( PersistedDocument.Factory.is( childObject ) ) return Promise.reject( new Errors.IllegalArgumentError( \"The child provided has been already persisted.\" ) );\n\t\t\tlet childDocument:T & Document.Class = Document.Factory.is( childObject ) ? <T & Document.Class> childObject : Document.Factory.createFrom<T>( childObject );\n\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\t\t\treturn this.persistDocument<T & Document.Class, PersistedProtectedDocument.Class>( parentURI, slug, childDocument, requestOptions );\n\t\t} );\n\t}\n\n\tcreateChildren<T>( parentURI:string, childrenObjects:T[], slugs?:string[], requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[] ]>;\n\tcreateChildren<T>( parentURI:string, childrenObjects:T[], requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[] ]>;\n\tcreateChildren<T>( parentURI:string, childrenObjects:T[], slugsOrRequestOptions?:any, requestOptions:HTTP.Request.Options = {} ):Promise<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[] ]> {\n\t\tlet slugs:string[] = Utils.isArray( slugsOrRequestOptions ) ? slugsOrRequestOptions : null;\n\t\trequestOptions = ! Utils.isArray( slugsOrRequestOptions ) && ! ! slugsOrRequestOptions ? slugsOrRequestOptions : requestOptions;\n\n\t\treturn Promise.all<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ]>( childrenObjects.map( ( childObject:T, index:number ) => {\n\t\t\tlet slug:string = (slugs !== null && index < slugs.length && ! ! slugs[ index ]) ? slugs[ index ] : null;\n\n\t\t\tlet options:HTTP.Request.Options = Object.assign( {}, requestOptions );\n\t\t\tif( requestOptions.headers ) options.headers = Utils.M.extend( new Map(), requestOptions.headers );\n\t\t\treturn this.createChild<T>( parentURI, childObject, slug, options );\n\n\t\t} ) ).then<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[] ]>( ( requestResponses:[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ][] ) => {\n\t\t\tlet persistedDocuments:(T & PersistedProtectedDocument.Class)[] = requestResponses.map( response => response[ 0 ] );\n\t\t\tlet responses:HTTP.Response.Class[] = requestResponses.map( response => response[ 1 ] );\n\n\t\t\treturn [ persistedDocuments, responses ];\n\t\t} );\n\t}\n\n\tcreateChildAndRetrieve<T>( parentURI:string, childObject:T, slug?:string, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class[] ]>;\n\tcreateChildAndRetrieve<T>( parentURI:string, childObject:T, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class[] ]>;\n\tcreateChildAndRetrieve<T>( parentURI:string, childObject:T, slugOrRequestOptions?:any, requestOptions:HTTP.Request.Options = {} ):Promise<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class[] ]> {\n\t\tlet responses:HTTP.Response.Class[] = [];\n\n\t\tlet options:HTTP.Request.Options = HTTP.Request.Util.isOptions( slugOrRequestOptions ) ? slugOrRequestOptions : requestOptions;\n\t\tHTTP.Request.Util.setPreferredRetrievalResource( \"Created\", options );\n\n\t\treturn this.createChild( parentURI, childObject, slugOrRequestOptions, requestOptions ).then<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ]>( ( [ document, createResponse ]:[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\tif( document.isResolved() ) return [ document, createResponse ];\n\n\t\t\tresponses.push( createResponse );\n\t\t\treturn this.get<T & PersistedProtectedDocument.Class>( document.id );\n\t\t} ).then<[ T & PersistedProtectedDocument.Class, HTTP.Response.Class[] ]>( ( [ persistedDocument, resolveResponse ]:[ T & PersistedProtectedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\tresponses.push( resolveResponse );\n\n\t\t\treturn [ persistedDocument, responses ];\n\t\t} );\n\t}\n\n\tcreateChildrenAndRetrieve<T>( parentURI:string, childrenObjects:T[], slugs?:string[], requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[][] ]>;\n\tcreateChildrenAndRetrieve<T>( parentURI:string, childrenObjects:T[], requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[][] ]>;\n\tcreateChildrenAndRetrieve<T>( parentURI:string, childrenObjects:T[], slugsOrRequestOptions?:any, requestOptions:HTTP.Request.Options = {} ):Promise<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[][] ]> {\n\t\tlet responses:HTTP.Response.Class[][] = [];\n\n\t\tlet options:HTTP.Request.Options = HTTP.Request.Util.isOptions( slugsOrRequestOptions ) ? slugsOrRequestOptions : requestOptions;\n\t\tHTTP.Request.Util.setPreferredRetrievalResource( \"Created\", options );\n\n\t\treturn this.createChildren( parentURI, childrenObjects, slugsOrRequestOptions, requestOptions ).then<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[] ]>( ( [ documents, creationResponses ]:[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[] ] ) => {\n\t\t\tresponses.push( creationResponses );\n\t\t\tif( documents.every( document => document.isResolved() ) ) return [ documents, null ];\n\n\t\t\treturn Pointer.Util.resolveAll<T & PersistedProtectedDocument.Class>( documents );\n\t\t} ).then<[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[][] ]>( ( [ persistedDocuments, resolveResponses ]:[ (T & PersistedProtectedDocument.Class)[], HTTP.Response.Class[] ] ) => {\n\t\t\tif( ! ! resolveResponses ) responses.push( resolveResponses );\n\n\t\t\treturn [ persistedDocuments, responses ];\n\t\t} );\n\t}\n\n\tlistChildren( parentURI:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ PersistedDocument.Class[], HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tparentURI = this.getRequestURI( parentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\n\t\t\tlet containerRetrievalPreferences:HTTP.Request.ContainerRetrievalPreferences = {\n\t\t\t\tinclude: [\n\t\t\t\t\tNS.LDP.Class.PreferContainment,\n\t\t\t\t],\n\t\t\t\tomit: [\n\t\t\t\t\tNS.LDP.Class.PreferMembership,\n\t\t\t\t\tNS.LDP.Class.PreferMinimalContainer,\n\t\t\t\t\tNS.C.Class.PreferContainmentResources,\n\t\t\t\t\tNS.C.Class.PreferMembershipResources,\n\t\t\t\t],\n\t\t\t};\n\t\t\tHTTP.Request.Util.setContainerRetrievalPreferences( containerRetrievalPreferences, requestOptions );\n\n\t\t\treturn HTTP.Request.Service.get( parentURI, requestOptions, new RDF.Document.Parser() );\n\t\t} ).then<[ PersistedDocument.Class[], HTTP.Response.Class ]>( ( [ rdfDocuments, response ]:[ RDF.Document.Class[], HTTP.Response.Class ] ) => {\n\t\t\tlet rdfDocument:RDF.Document.Class = this.getRDFDocument( parentURI, rdfDocuments, response );\n\t\t\tif( rdfDocument === null ) return [ [], response ];\n\n\t\t\tlet documentResource:RDF.Node.Class = this.getDocumentResource( rdfDocument, response );\n\t\t\tlet childPointers:Pointer.Class[] = RDF.Node.Util.getPropertyPointers( documentResource, NS.LDP.Predicate.contains, this );\n\t\t\tlet persistedChildPointers:PersistedDocument.Class[] = childPointers.map( pointer => PersistedDocument.Factory.decorate( pointer, this ) );\n\n\t\t\treturn [ persistedChildPointers, response ];\n\t\t} );\n\t}\n\n\tgetChildren<T>( parentURI:string, retrievalPreferences?:RetrievalPreferences.Class, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>;\n\tgetChildren<T>( parentURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>;\n\tgetChildren<T>( parentURI:string, retPrefReqOpt?:any, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]> {\n\t\tlet retrievalPreferences:RetrievalPreferences.Class = RetrievalPreferences.Factory.is( retPrefReqOpt ) ? retPrefReqOpt : null;\n\t\trequestOptions = HTTP.Request.Util.isOptions( retPrefReqOpt ) ? retPrefReqOpt : ( HTTP.Request.Util.isOptions( requestOptions ) ? requestOptions : {} );\n\n\t\tlet containerURI:string;\n\t\treturn promiseMethod( () => {\n\t\t\tparentURI = this.getRequestURI( parentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\n\t\t\tcontainerURI = parentURI;\n\t\t\tif( ! ! retrievalPreferences ) parentURI += RetrievalPreferences.Util.stringifyRetrievalPreferences( retrievalPreferences, this.getGeneralSchema() );\n\n\t\t\tlet containerRetrievalPreferences:HTTP.Request.ContainerRetrievalPreferences = {\n\t\t\t\tinclude: [\n\t\t\t\t\tNS.LDP.Class.PreferContainment,\n\t\t\t\t\tNS.C.Class.PreferContainmentResources,\n\t\t\t\t],\n\t\t\t\tomit: [\n\t\t\t\t\tNS.LDP.Class.PreferMembership,\n\t\t\t\t\tNS.LDP.Class.PreferMinimalContainer,\n\t\t\t\t\tNS.C.Class.PreferMembershipResources,\n\t\t\t\t],\n\t\t\t};\n\t\t\tHTTP.Request.Util.setContainerRetrievalPreferences( containerRetrievalPreferences, requestOptions );\n\n\t\t\treturn HTTP.Request.Service.get( parentURI, requestOptions, new JSONLD.Parser.Class() );\n\t\t} ).then<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>( ( [ expandedResult, response ]:[ any, HTTP.Response.Class ] ) => {\n\t\t\tlet freeNodes:RDF.Node.Class[] = RDF.Node.Util.getFreeNodes( expandedResult );\n\t\t\tlet rdfDocuments:RDF.Document.Class[] = RDF.Document.Util.getDocuments( expandedResult ).filter( document => document[ \"@id\" ] !== containerURI );\n\n\t\t\tlet resources:(T & PersistedDocument.Class)[] = <any> this.getPersistedMetadataResources( freeNodes, rdfDocuments, response );\n\t\t\treturn [ resources, response ];\n\t\t} );\n\t}\n\n\tcreateAccessPoint<T>( documentURI:string, accessPoint:T & AccessPoint.Class, slug?:string, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedAccessPoint.Class, HTTP.Response.Class ]>;\n\tcreateAccessPoint<T>( documentURI:string, accessPoint:T & AccessPoint.Class, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedAccessPoint.Class, HTTP.Response.Class ]>;\n\tcreateAccessPoint<T>( documentURI:string, accessPoint:T & AccessPoint.Class, slugOrRequestOptions:any, requestOptions:HTTP.Request.Options = {} ):Promise<[ T & PersistedAccessPoint.Class, HTTP.Response.Class ]> {\n\t\tif( this.context ) documentURI = this.context.resolve( documentURI );\n\t\tconst slug:string = Utils.isString( slugOrRequestOptions ) ? slugOrRequestOptions : null;\n\t\trequestOptions = ! Utils.isString( slugOrRequestOptions ) && ! ! slugOrRequestOptions ? slugOrRequestOptions : requestOptions;\n\n\t\treturn promiseMethod( () => {\n\t\t\tif( PersistedDocument.Factory.is( accessPoint ) ) return Promise.reject( new Errors.IllegalArgumentError( \"The accessPoint provided has been already persisted.\" ) );\n\t\t\tlet accessPointDocument:T & AccessPoint.DocumentClass = AccessPoint.Factory.is( accessPoint ) ? <any> accessPoint\n\t\t\t\t: AccessPoint.Factory.createFrom<T>( accessPoint, this.getPointer( documentURI ), accessPoint.hasMemberRelation, accessPoint.isMemberOfRelation );\n\t\t\tif( accessPointDocument.membershipResource.id !== documentURI ) return Promise.reject( new Errors.IllegalArgumentError( \"The documentURI must be the same as the accessPoint's membershipResource\" ) );\n\n\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.RDFSource );\n\t\t\treturn this.persistDocument<T & AccessPoint.DocumentClass, PersistedAccessPoint.Class>( documentURI, slug, accessPointDocument, requestOptions );\n\t\t} );\n\t}\n\n\n\tcreateAccessPoints<T>( documentURI:string, accessPoints:(T & AccessPoint.Class)[], slugs?:string[], requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedAccessPoint.Class)[], HTTP.Response.Class[] ]>;\n\tcreateAccessPoints<T>( documentURI:string, accessPoints:(T & AccessPoint.Class)[], requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedAccessPoint.Class)[], HTTP.Response.Class[] ]>;\n\tcreateAccessPoints<T>( documentURI:string, accessPoints:(T & AccessPoint.Class)[], slugsOrRequestOptions:any, requestOptions:HTTP.Request.Options = {} ):Promise<[ (T & PersistedAccessPoint.Class)[], HTTP.Response.Class[] ]> {\n\t\tlet slugs:string[] = Utils.isArray( slugsOrRequestOptions ) ? slugsOrRequestOptions : null;\n\t\trequestOptions = ! Utils.isArray( slugsOrRequestOptions ) && ! ! slugsOrRequestOptions ? slugsOrRequestOptions : requestOptions;\n\n\t\treturn Promise.all<[ T & PersistedAccessPoint.Class, HTTP.Response.Class ]>( accessPoints.map( ( accessPoint:T & AccessPoint.Class, index:number ) => {\n\t\t\tlet slug:string = (slugs !== null && index < slugs.length && ! ! slugs[ index ]) ? slugs[ index ] : null;\n\n\t\t\tlet options:HTTP.Request.Options = Object.assign( {}, requestOptions );\n\t\t\tif( requestOptions.headers ) options.headers = Utils.M.extend( new Map(), requestOptions.headers );\n\t\t\treturn this.createAccessPoint<T>( documentURI, accessPoint, slug, options );\n\n\t\t} ) ).then<[ (T & PersistedAccessPoint.Class)[], HTTP.Response.Class[] ]>( ( requestResponses:[ T & PersistedAccessPoint.Class, HTTP.Response.Class ][] ) => {\n\t\t\tlet persistedAccessPoints:(T & PersistedAccessPoint.Class)[] = requestResponses.map( response => response[ 0 ] );\n\t\t\tlet responses:HTTP.Response.Class[] = requestResponses.map( response => response[ 1 ] );\n\n\t\t\treturn [ persistedAccessPoints, responses ];\n\t\t} );\n\t}\n\n\tupload( parentURI:string, data:Buffer, slug?:string, requestOptions?:HTTP.Request.Options ):Promise<[ Pointer.Class, HTTP.Response.Class ]>;\n\tupload( parentURI:string, data:Buffer, requestOptions?:HTTP.Request.Options ):Promise<[ Pointer.Class, HTTP.Response.Class ]>;\n\tupload( parentURI:string, data:Blob, slug?:string, requestOptions?:HTTP.Request.Options ):Promise<[ Pointer.Class, HTTP.Response.Class ]>;\n\tupload( parentURI:string, data:Blob, requestOptions?:HTTP.Request.Options ):Promise<[ Pointer.Class, HTTP.Response.Class ]>;\n\tupload( parentURI:string, data:Blob | Buffer, slugOrRequestOptions?:any, requestOptions:HTTP.Request.Options = {} ):Promise<[ Pointer.Class, HTTP.Response.Class ]> {\n\t\tlet slug:string = Utils.isString( slugOrRequestOptions ) ? slugOrRequestOptions : null;\n\t\trequestOptions = ! Utils.isString( slugOrRequestOptions ) && ! ! slugOrRequestOptions ? slugOrRequestOptions : requestOptions;\n\n\t\tif( typeof Blob !== \"undefined\" ) {\n\t\t\tif( ! ( data instanceof Blob ) ) return Promise.reject( new Errors.IllegalArgumentError( \"The data is not a valid Blob object.\" ) );\n\t\t\tHTTP.Request.Util.setContentTypeHeader( (<Blob> data).type, requestOptions );\n\n\t\t} else {\n\t\t\tif( ! ( data instanceof Buffer ) ) return Promise.reject( new Errors.IllegalArgumentError( \"The data is not a valid Buffer object.\" ) );\n\t\t\tconst fileType:( buffer:Buffer ) => { ext:string, mime:string } = require( \"file-type\" );\n\n\t\t\tlet bufferType:{ ext:string, mime:string } = fileType( <Buffer> data );\n\t\t\tHTTP.Request.Util.setContentTypeHeader( bufferType ? bufferType.mime : \"application/octet-stream\", requestOptions );\n\t\t}\n\n\t\treturn promiseMethod( () => {\n\t\t\tparentURI = this.getRequestURI( parentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\n\t\t\tif( ! ! slug ) HTTP.Request.Util.setSlug( slug, requestOptions );\n\n\t\t\treturn HTTP.Request.Service.post( parentURI, <any> data, requestOptions );\n\t\t} ).then<[ Pointer.Class, HTTP.Response.Class ]>( ( response:HTTP.Response.Class ) => {\n\t\t\tlet locationHeader:HTTP.Header.Class = response.getHeader( \"Location\" );\n\t\t\tif( locationHeader === null || locationHeader.values.length < 1 ) throw new HTTP.Errors.BadResponseError( \"The response is missing a Location header.\", response );\n\t\t\tif( locationHeader.values.length !== 1 ) throw new HTTP.Errors.BadResponseError( \"The response contains more than one Location header.\", response );\n\n\t\t\tlet locationURI:string = locationHeader.values[ 0 ].toString();\n\n\t\t\tlet pointer:Pointer.Class = this.getPointer( locationURI );\n\n\t\t\treturn [ pointer, response ];\n\t\t} );\n\t}\n\n\tlistMembers( uri:string, includeNonReadable?:boolean, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedDocument.Class[], HTTP.Response.Class ]>;\n\tlistMembers( uri:string, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedDocument.Class[], HTTP.Response.Class ]>;\n\tlistMembers( uri:string, nonReadReqOpt?:any, reqOpt?:HTTP.Request.Options ):Promise<[ PersistedDocument.Class[], HTTP.Response.Class ]> {\n\t\tlet includeNonReadable:boolean = Utils.isBoolean( nonReadReqOpt ) ? nonReadReqOpt : true;\n\t\tlet requestOptions:HTTP.Request.Options = HTTP.Request.Util.isOptions( nonReadReqOpt ) ? nonReadReqOpt : ( HTTP.Request.Util.isOptions( reqOpt ) ? reqOpt : {} );\n\n\t\treturn promiseMethod( () => {\n\t\t\turi = this.getRequestURI( uri );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\n\t\t\tlet containerRetrievalPreferences:HTTP.Request.ContainerRetrievalPreferences = {\n\t\t\t\tinclude: [\n\t\t\t\t\tNS.LDP.Class.PreferMinimalContainer,\n\t\t\t\t\tNS.LDP.Class.PreferMembership,\n\t\t\t\t],\n\t\t\t\tomit: [\n\t\t\t\t\tNS.LDP.Class.PreferContainment,\n\t\t\t\t\tNS.C.Class.PreferContainmentResources,\n\t\t\t\t\tNS.C.Class.PreferMembershipResources,\n\t\t\t\t],\n\t\t\t};\n\n\t\t\tif( includeNonReadable ) {\n\t\t\t\tcontainerRetrievalPreferences.include.push( NS.C.Class.NonReadableMembershipResourceTriples );\n\t\t\t} else {\n\t\t\t\tcontainerRetrievalPreferences.omit.push( NS.C.Class.NonReadableMembershipResourceTriples );\n\t\t\t}\n\t\t\tHTTP.Request.Util.setContainerRetrievalPreferences( containerRetrievalPreferences, requestOptions );\n\n\t\t\treturn HTTP.Request.Service.get( uri, requestOptions, new RDF.Document.Parser() );\n\t\t} ).then<[ PersistedDocument.Class[], HTTP.Response.Class ]>( ( [ rdfDocuments, response ]:[ RDF.Document.Class[], HTTP.Response.Class ] ) => {\n\t\t\tlet rdfDocument:RDF.Document.Class = this.getRDFDocument( uri, rdfDocuments, response );\n\t\t\tif( rdfDocument === null ) throw new HTTP.Errors.BadResponseError( \"No document was returned.\", response );\n\n\t\t\tlet documentResource:RDF.Node.Class = this.getDocumentResource( rdfDocument, response );\n\t\t\tlet membershipResource:RDF.Node.Class = this.getMembershipResource( documentResource, rdfDocuments, response );\n\t\t\tif( membershipResource === null ) return [ [], response ];\n\n\t\t\tlet hasMemberRelation:string = RDF.Node.Util.getPropertyURI( documentResource, NS.LDP.Predicate.hasMemberRelation );\n\n\t\t\tlet memberPointers:Pointer.Class[] = RDF.Node.Util.getPropertyPointers( membershipResource, hasMemberRelation, this );\n\t\t\tlet persistedMemberPointers:PersistedDocument.Class[] = memberPointers.map( pointer => PersistedDocument.Factory.decorate( pointer, this ) );\n\n\t\t\treturn [ persistedMemberPointers, response ];\n\t\t} );\n\t}\n\n\tgetMembers<T>( uri:string, includeNonReadable?:boolean, retrievalPreferences?:RetrievalPreferences.Class, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>;\n\tgetMembers<T>( uri:string, includeNonReadable?:boolean, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>;\n\tgetMembers<T>( uri:string, retrievalPreferences?:RetrievalPreferences.Class, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>;\n\tgetMembers<T>( uri:string, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>;\n\tgetMembers<T>( uri:string, nonReadRetPrefReqOpt?:any, retPrefReqOpt?:any, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]> {\n\t\tlet includeNonReadable:boolean = Utils.isBoolean( nonReadRetPrefReqOpt ) ? nonReadRetPrefReqOpt : true;\n\t\tlet retrievalPreferences:RetrievalPreferences.Class = RetrievalPreferences.Factory.is( nonReadRetPrefReqOpt ) ? nonReadRetPrefReqOpt : ( RetrievalPreferences.Factory.is( retPrefReqOpt ) ? retPrefReqOpt : null );\n\t\trequestOptions = HTTP.Request.Util.isOptions( nonReadRetPrefReqOpt ) ? nonReadRetPrefReqOpt : ( HTTP.Request.Util.isOptions( retPrefReqOpt ) ? retPrefReqOpt : ( HTTP.Request.Util.isOptions( requestOptions ) ? requestOptions : {} ) );\n\n\t\tlet containerURI:string;\n\t\treturn promiseMethod( () => {\n\t\t\turi = this.getRequestURI( uri );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\n\t\t\tcontainerURI = uri;\n\t\t\tif( ! ! retrievalPreferences ) uri += RetrievalPreferences.Util.stringifyRetrievalPreferences( retrievalPreferences, this.getGeneralSchema() );\n\n\t\t\tlet containerRetrievalPreferences:HTTP.Request.ContainerRetrievalPreferences = {\n\t\t\t\tinclude: [\n\t\t\t\t\tNS.LDP.Class.PreferMinimalContainer,\n\t\t\t\t\tNS.LDP.Class.PreferMembership,\n\t\t\t\t\tNS.C.Class.PreferMembershipResources,\n\t\t\t\t],\n\t\t\t\tomit: [\n\t\t\t\t\tNS.LDP.Class.PreferContainment,\n\t\t\t\t\tNS.C.Class.PreferContainmentResources,\n\t\t\t\t],\n\t\t\t};\n\n\t\t\tif( includeNonReadable ) {\n\t\t\t\tcontainerRetrievalPreferences.include.push( NS.C.Class.NonReadableMembershipResourceTriples );\n\t\t\t} else {\n\t\t\t\tcontainerRetrievalPreferences.omit.push( NS.C.Class.NonReadableMembershipResourceTriples );\n\t\t\t}\n\t\t\tHTTP.Request.Util.setContainerRetrievalPreferences( containerRetrievalPreferences, requestOptions );\n\n\t\t\treturn HTTP.Request.Service.get( uri, requestOptions, new JSONLD.Parser.Class() );\n\t\t} ).then<[ (T & PersistedDocument.Class)[], HTTP.Response.Class ]>( ( [ expandedResult, response ]:[ any, HTTP.Response.Class ] ) => {\n\t\t\tlet freeNodes:RDF.Node.Class[] = RDF.Node.Util.getFreeNodes( expandedResult );\n\t\t\tlet rdfDocuments:RDF.Document.Class[] = RDF.Document.Util.getDocuments( expandedResult );\n\n\t\t\tlet rdfDocument:RDF.Document.Class = this.getRDFDocument( containerURI, rdfDocuments, response );\n\t\t\tif( rdfDocument === null ) throw new HTTP.Errors.BadResponseError( \"No document was returned.\", response );\n\n\t\t\tlet containerResource:RDF.Node.Class = this.getDocumentResource( rdfDocument, response );\n\t\t\tlet membershipResource:RDF.Node.Class = this.getMembershipResource( containerResource, rdfDocuments, response );\n\t\t\tif( membershipResource === null ) return [ [], response ];\n\n\t\t\trdfDocuments = (<any[]> rdfDocuments).filter( ( targetRDFDocument:RDF.Node.Class ) => {\n\t\t\t\treturn ! RDF.Node.Util.areEqual( targetRDFDocument, containerResource )\n\t\t\t\t\t&& ! RDF.Node.Util.areEqual( targetRDFDocument, membershipResource )\n\t\t\t\t\t;\n\t\t\t} );\n\n\t\t\tlet resources:( T & PersistedDocument.Class)[] = this.getPersistedMetadataResources( freeNodes, rdfDocuments, response );\n\t\t\treturn [ resources, response ];\n\t\t} );\n\t}\n\n\taddMember( documentURI:string, member:Pointer.Class, requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class>;\n\taddMember( documentURI:string, memberURI:string, requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class>;\n\taddMember( documentURI:string, memberORUri:Pointer.Class | string, requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response.Class> {\n\t\treturn this.addMembers( documentURI, [ memberORUri ], requestOptions );\n\t}\n\n\taddMembers( documentURI:string, members:(Pointer.Class | string)[], requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class>;\n\taddMembers( documentURI:string, members:(Pointer.Class | string)[], requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst pointers:Pointer.Class[] = this._parseMembers( members );\n\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\t\t\tHTTP.Request.Util.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\n\t\t\tlet document:Document.Class = LDP.AddMemberAction.Factory.createDocument( pointers );\n\n\t\t\tlet body:string = document.toJSON( this, this.jsonldConverter );\n\n\t\t\treturn HTTP.Request.Service.put( documentURI, body, requestOptions );\n\t\t} );\n\t}\n\n\tremoveMember( documentURI:string, member:Pointer.Class, requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class>;\n\tremoveMember( documentURI:string, memberURI:string, requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class>;\n\tremoveMember( documentURI:string, memberORUri:Pointer.Class | string, requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response.Class> {\n\t\treturn this.removeMembers( documentURI, [ memberORUri ], requestOptions );\n\t}\n\n\tremoveMembers( documentURI:string, members:(Pointer.Class | string)[], requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst pointers:Pointer.Class[] = this._parseMembers( members );\n\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\t\t\tHTTP.Request.Util.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\n\t\t\tlet document:Document.Class = LDP.RemoveMemberAction.Factory.createDocument( pointers );\n\t\t\tlet containerRetrievalPreferences:HTTP.Request.ContainerRetrievalPreferences = {\n\t\t\t\tinclude: [ NS.C.Class.PreferSelectedMembershipTriples ],\n\t\t\t\tomit: [ NS.C.Class.PreferMembershipTriples ],\n\t\t\t};\n\t\t\tHTTP.Request.Util.setContainerRetrievalPreferences( containerRetrievalPreferences, requestOptions, false );\n\n\t\t\tlet body:string = document.toJSON( this, this.jsonldConverter );\n\n\t\t\treturn HTTP.Request.Service.delete( documentURI, body, requestOptions );\n\t\t} );\n\t}\n\n\tremoveAllMembers( documentURI:string, requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.Container );\n\n\t\t\tlet containerRetrievalPreferences:HTTP.Request.ContainerRetrievalPreferences = {\n\t\t\t\tinclude: [\n\t\t\t\t\tNS.C.Class.PreferMembershipTriples,\n\t\t\t\t],\n\t\t\t\tomit: [\n\t\t\t\t\tNS.C.Class.PreferMembershipResources,\n\t\t\t\t\tNS.C.Class.PreferContainmentTriples,\n\t\t\t\t\tNS.C.Class.PreferContainmentResources,\n\t\t\t\t\tNS.C.Class.PreferContainer,\n\t\t\t\t],\n\t\t\t};\n\t\t\tHTTP.Request.Util.setContainerRetrievalPreferences( containerRetrievalPreferences, requestOptions, false );\n\n\t\t\treturn HTTP.Request.Service.delete( documentURI, requestOptions );\n\t\t} );\n\t}\n\n\tsave<T>( persistedDocument:T & PersistedDocument.Class, requestOptions:HTTP.Request.Options = {} ):Promise<[ T & PersistedDocument.Class, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\n\t\t\t// TODO: Check if the document isDirty\n\t\t\t/*\n\t\t\tif( ! persistedDocument.isDirty() ) return new Promise<HTTP.Response.Class>( ( resolve:( result:HTTP.Response.Class ) => void ) => {\n\t\t\t\tresolve( null );\n\t\t\t});\n\t\t\t*/\n\t\t\tconst uri:string = this.getRequestURI( persistedDocument.id );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.RDFSource );\n\t\t\tHTTP.Request.Util.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\t\t\tHTTP.Request.Util.setIfMatchHeader( persistedDocument._etag, requestOptions );\n\n\t\t\tpersistedDocument._normalize();\n\t\t\tconst body:string = persistedDocument.toJSON( this, this.jsonldConverter );\n\n\t\t\treturn HTTP.Request.Service.put( uri, body, requestOptions );\n\t\t} ).then<[ T & PersistedDocument.Class, HTTP.Response.Class ]>( ( response:HTTP.Response.Class ) => {\n\t\t\treturn this.applyResponseData( persistedDocument, response );\n\t\t} );\n\t}\n\n\trefresh<T>( persistedDocument:T & PersistedDocument.Class, requestOptions:HTTP.Request.Options = {} ):Promise<[ T & PersistedDocument.Class, HTTP.Response.Class ]> {\n\t\tlet uri:string;\n\t\treturn promiseMethod( () => {\n\t\t\turi = this.getRequestURI( persistedDocument.id );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.RDFSource );\n\n\t\t\t// Add header to check id the document has been modified\n\t\t\tHTTP.Request.Util.setIfNoneMatchHeader( persistedDocument._etag, requestOptions );\n\n\t\t\treturn HTTP.Request.Service.get( uri, requestOptions, new RDF.Document.Parser() );\n\t\t} ).then<[ T & PersistedDocument.Class, HTTP.Response.Class ]>( ( [ rdfDocuments, response ]:[ RDF.Document.Class[], HTTP.Response.Class ] ) => {\n\t\t\tif( response === null ) return <any> [ rdfDocuments, response ];\n\n\t\t\tlet eTag:string = HTTP.Response.Util.getETag( response );\n\t\t\tif( eTag === null ) throw new HTTP.Errors.BadResponseError( \"The response doesn't contain an ETag\", response );\n\n\t\t\tlet rdfDocument:RDF.Document.Class = this.getRDFDocument( uri, rdfDocuments, response );\n\t\t\tif( rdfDocument === null ) throw new HTTP.Errors.BadResponseError( \"No document was returned.\", response );\n\n\t\t\tlet updatedPersistedDocument:PersistedDocument.Class = this._getPersistedDocument( rdfDocument, response );\n\t\t\tupdatedPersistedDocument._etag = eTag;\n\n\t\t\treturn [ updatedPersistedDocument, response ];\n\t\t} ).catch<[ T & PersistedDocument.Class, HTTP.Response.Class ]>( ( error:HTTP.Errors.Error ) => {\n\t\t\tif( error.statusCode === 304 ) return [ persistedDocument, null ];\n\t\t\treturn Promise.reject( error );\n\t\t} );\n\t}\n\n\tsaveAndRefresh<T>( persistedDocument:T & PersistedDocument.Class, requestOptions:HTTP.Request.Options = {} ):Promise<[ T & PersistedDocument.Class, HTTP.Response.Class[] ]> {\n\t\tconst responses:HTTP.Response.Class[] = [];\n\t\tconst previousETag:string = persistedDocument._etag;\n\n\t\treturn Utils.promiseMethod( () => {\n\t\t\tHTTP.Request.Util.setPreferredRetrievalResource( \"Modified\", requestOptions );\n\t\t\treturn this.save<T>( persistedDocument, requestOptions );\n\t\t} ).then<[ T & PersistedDocument.Class, HTTP.Response.Class ]>( ( [ document, saveResponse ]:[ T & PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\tif( document._etag !== previousETag ) return [ document, saveResponse ];\n\n\t\t\tresponses.push( saveResponse );\n\t\t\treturn this.refresh<T>( document );\n\t\t} ).then<[ T & PersistedDocument.Class, HTTP.Response.Class[] ]>( ( [ document, refreshResponse ]:[ T & PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\tresponses.push( refreshResponse );\n\t\t\treturn [ persistedDocument, responses ];\n\t\t} );\n\t}\n\n\n\tdelete( documentURI:string, requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\t\t\tthis.setDefaultRequestOptions( requestOptions, NS.LDP.Class.RDFSource );\n\n\t\t\treturn HTTP.Request.Service.delete( documentURI, requestOptions );\n\t\t} ).then( ( response:HTTP.Response.Class ) => {\n\t\t\tlet pointerID:string = this.getPointerID( documentURI );\n\t\t\tthis.pointers.delete( pointerID );\n\n\t\t\treturn response;\n\t\t} );\n\t}\n\n\tgetDownloadURL( documentURI:string, requestOptions?:HTTP.Request.Options ):Promise<string> {\n\t\tif( ! this.context ) return Promise.reject( new Errors.IllegalStateError( \"This instance doesn't support Authenticated request.\" ) );\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\t\t\treturn this.context.auth.getAuthenticatedURL( documentURI, requestOptions );\n\t\t} );\n\t}\n\n\tgetGeneralSchema():ObjectSchema.DigestedObjectSchema {\n\t\tif( ! this.context ) return new ObjectSchema.DigestedObjectSchema();\n\n\t\tlet schema:ObjectSchema.DigestedObjectSchema = ObjectSchema.Digester.combineDigestedObjectSchemas( [ this.context.getObjectSchema() ] );\n\t\tif( this.context.hasSetting( \"vocabulary\" ) ) schema.vocab = this.context.resolve( this.context.getSetting( \"vocabulary\" ) );\n\t\treturn schema;\n\t}\n\n\tgetSchemaFor( object:Object ):ObjectSchema.DigestedObjectSchema {\n\t\treturn ( \"@id\" in object ) ?\n\t\t\tthis.getDigestedObjectSchemaForExpandedObject( object ) :\n\t\t\tthis.getDigestedObjectSchemaForDocument( <any> object );\n\t}\n\n\texecuteRawASKQuery( documentURI:string, askQuery:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ SPARQL.RawResults.Class, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\n\t\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\t\treturn SPARQL.Service.executeRawASKQuery( documentURI, askQuery, requestOptions );\n\t\t} );\n\t}\n\n\texecuteASKQuery( documentURI:string, askQuery:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ boolean, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\n\t\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\t\treturn SPARQL.Service.executeASKQuery( documentURI, askQuery, requestOptions );\n\t\t} );\n\t}\n\n\texecuteRawSELECTQuery( documentURI:string, selectQuery:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ SPARQL.RawResults.Class, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\n\t\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\t\treturn SPARQL.Service.executeRawSELECTQuery( documentURI, selectQuery, requestOptions );\n\t\t} );\n\t}\n\n\texecuteSELECTQuery<T>( documentURI:string, selectQuery:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ SPARQL.SELECTResults.Class<T>, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\n\t\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\t\treturn SPARQL.Service.executeSELECTQuery<T>( documentURI, selectQuery, this, requestOptions );\n\t\t} );\n\t}\n\n\texecuteRawCONSTRUCTQuery( documentURI:string, constructQuery:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ string, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\n\t\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\t\treturn SPARQL.Service.executeRawCONSTRUCTQuery( documentURI, constructQuery, requestOptions );\n\t\t} );\n\t}\n\n\texecuteRawDESCRIBEQuery( documentURI:string, describeQuery:string, requestOptions:HTTP.Request.Options = {} ):Promise<[ string, HTTP.Response.Class ]> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\n\t\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\t\treturn SPARQL.Service.executeRawDESCRIBEQuery( documentURI, describeQuery, requestOptions );\n\t\t} );\n\t}\n\n\texecuteUPDATE( documentURI:string, update:string, requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tdocumentURI = this.getRequestURI( documentURI );\n\n\t\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\t\treturn SPARQL.Service.executeUPDATE( documentURI, update, requestOptions );\n\t\t} );\n\t}\n\n\tsparql( documentURI:string ):QueryClause {\n\t\tlet sparqlBuilder:SparqlBuilder = new SparqlBuilder();\n\t\tsparqlBuilder._documents = this;\n\t\tsparqlBuilder._entryPoint = documentURI;\n\n\t\tlet builder:QueryClause = sparqlBuilder.base( documentURI );\n\n\t\tif( ! ! this.context ) {\n\t\t\tbuilder.base( this.context.baseURI );\n\t\t\tif( this.context.hasSetting( \"vocabulary\" ) ) builder.vocab( this.context.resolve( this.context.getSetting( \"vocabulary\" ) ) );\n\n\t\t\tlet schema:ObjectSchema.DigestedObjectSchema = this.context.getObjectSchema();\n\t\t\tschema.prefixes.forEach( ( uri:RDF.URI.Class, prefix:string ) => {\n\t\t\t\tbuilder.prefix( prefix, uri.stringValue );\n\t\t\t} );\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t_getPersistedDocument<T>( rdfDocument:RDF.Document.Class, response:HTTP.Response.Class ):T & PersistedDocument.Class {\n\t\tlet documentResource:RDF.Node.Class = this.getDocumentResource( rdfDocument, response );\n\t\tlet fragmentResources:RDF.Node.Class[] = RDF.Document.Util.getBNodeResources( rdfDocument );\n\t\tfragmentResources = fragmentResources.concat( RDF.Document.Util.getFragmentResources( rdfDocument ) );\n\n\t\tlet uri:string = documentResource[ \"@id\" ];\n\t\tlet documentPointer:Pointer.Class = this.getPointer( uri );\n\n\t\tlet persistedDocument:T & PersistedDocument.Class;\n\t\tif( PersistedDocument.Factory.is( documentPointer ) ) {\n\t\t\tpersistedDocument = this.updatePersistedDocument( <PersistedDocument.Class> documentPointer, documentResource, fragmentResources );\n\t\t} else {\n\t\t\tpersistedDocument = this.createPersistedDocument( documentPointer, documentResource, fragmentResources );\n\t\t}\n\n\t\tpersistedDocument._resolved = true;\n\t\treturn persistedDocument;\n\t}\n\n\t_getFreeResources( nodes:RDF.Node.Class[] ):FreeResources.Class {\n\t\tlet freeResourcesDocument:FreeResources.Class = FreeResources.Factory.create( this );\n\n\t\tlet resources:Resource.Class[] = nodes.map( node => freeResourcesDocument.createResource( node[ \"@id\" ] ) );\n\t\tthis.compact( nodes, resources, freeResourcesDocument );\n\n\t\treturn freeResourcesDocument;\n\t}\n\n\tprivate persistDocument<T extends Document.Class, W extends PersistedProtectedDocument.Class>( parentURI:string, slug:string, document:T, requestOptions:HTTP.Request.Options ):Promise<[ T & W, HTTP.Response.Class ]> {\n\t\tparentURI = this.getRequestURI( parentURI );\n\t\tHTTP.Request.Util.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\n\t\tif( document.id ) {\n\t\t\tlet childURI:string = document.id;\n\t\t\tif( ! ! this.context ) childURI = this.context.resolve( childURI );\n\t\t\tif( ! RDF.URI.Util.isBaseOf( parentURI, childURI ) ) {\n\t\t\t\treturn Promise.reject( new Errors.IllegalArgumentError( \"The document's URI is not relative to the parentURI specified\" ) );\n\t\t\t}\n\t\t}\n\n\t\tif( document[ \"__CarbonSDK_InProgressOfPersisting\" ] ) return Promise.reject( new Errors.IllegalArgumentError( \"The document is already being persisted.\" ) );\n\t\tObject.defineProperty( document, \"__CarbonSDK_InProgressOfPersisting\", { configurable: true, enumerable: false, writable: false, value: true } );\n\n\t\tlet body:string = document.toJSON( this, this.jsonldConverter );\n\n\t\tif( ! ! slug ) HTTP.Request.Util.setSlug( slug, requestOptions );\n\n\t\treturn HTTP.Request.Service.post( parentURI, body, requestOptions ).then<[ T & W, HTTP.Response.Class ]>( ( response:HTTP.Response.Class ) => {\n\t\t\tdelete document[ \"__CarbonSDK_InProgressOfPersisting\" ];\n\n\t\t\tlet locationHeader:HTTP.Header.Class = response.getHeader( \"Location\" );\n\t\t\tif( locationHeader === null || locationHeader.values.length < 1 ) throw new HTTP.Errors.BadResponseError( \"The response is missing a Location header.\", response );\n\t\t\tif( locationHeader.values.length !== 1 ) throw new HTTP.Errors.BadResponseError( \"The response contains more than one Location header.\", response );\n\n\t\t\tconst localID:string = this.getPointerID( locationHeader.values[ 0 ].toString() );\n\t\t\tthis.pointers.set( localID, this.createPointerFrom( document, localID ) );\n\n\t\t\tconst persistedDocument:T & W = <T & W> PersistedProtectedDocument.Factory.decorate<T>( document, this );\n\t\t\tpersistedDocument.getFragments().forEach( PersistedFragment.Factory.decorate );\n\n\t\t\treturn this.applyResponseData( persistedDocument, response );\n\t\t} ).catch( ( error ) => {\n\t\t\tdelete document[ \"__CarbonSDK_InProgressOfPersisting\" ];\n\t\t\treturn Promise.reject( error );\n\t\t} );\n\t}\n\n\tprivate getRDFDocument( requestURL:string, rdfDocuments:RDF.Document.Class[], response:HTTP.Response.Class ):RDF.Document.Class {\n\t\trdfDocuments = rdfDocuments.filter( ( rdfDocument:RDF.Document.Class ) => rdfDocument[ \"@id\" ] === requestURL );\n\n\t\tif( rdfDocuments.length > 1 ) throw new HTTP.Errors.BadResponseError( \"Several documents share the same id.\", response );\n\n\t\treturn rdfDocuments.length > 0 ? rdfDocuments[ 0 ] : null;\n\t}\n\n\tprivate getDocumentResource( rdfDocument:RDF.Document.Class, response:HTTP.Response.Class ):RDF.Node.Class {\n\t\tlet documentResources:RDF.Node.Class[] = RDF.Document.Util.getDocumentResources( rdfDocument );\n\t\tif( documentResources.length === 0 ) throw new HTTP.Errors.BadResponseError( `The RDFDocument: ${ rdfDocument[ \"@id\" ] }, doesn't contain a document resource.`, response );\n\t\tif( documentResources.length > 1 ) throw new HTTP.Errors.BadResponseError( `The RDFDocument: ${ rdfDocument[ \"@id\" ] }, contains more than one document resource.`, response );\n\n\t\treturn documentResources[ 0 ];\n\t}\n\n\tprivate getPointerID( uri:string ):string {\n\t\tif( RDF.URI.Util.isBNodeID( uri ) ) throw new Errors.IllegalArgumentError( \"BNodes cannot be fetched directly.\" );\n\t\t// TODO: Make named fragments independently resolvable\n\t\t/*\n\t\t\tif( RDF.URI.Util.hasFragment( uri ) ) throw new Errors.IllegalArgumentError( \"Fragment URI's cannot be fetched directly.\" );\n\t\t*/\n\n\t\tif( ! ! this.context ) {\n\t\t\tif( RDF.URI.Util.isPrefixed( uri ) ) uri = ObjectSchema.Digester.resolvePrefixedURI( uri, this.getGeneralSchema() );\n\n\t\t\tif( ! RDF.URI.Util.isRelative( uri ) ) {\n\t\t\t\tconst baseURI:string = this.context.baseURI;\n\t\t\t\tif( ! RDF.URI.Util.isBaseOf( baseURI, uri ) ) return null;\n\n\t\t\t\treturn uri.substring( baseURI.length );\n\t\t\t} else {\n\t\t\t\treturn uri[ 0 ] === \"/\" ? uri.substr( 1 ) : uri;\n\t\t\t}\n\t\t} else {\n\t\t\tif( RDF.URI.Util.isPrefixed( uri ) ) throw new Errors.IllegalArgumentError( \"This Documents instance doesn't support prefixed URIs.\" );\n\t\t\tif( RDF.URI.Util.isRelative( uri ) ) throw new Errors.IllegalArgumentError( \"This Documents instance doesn't support relative URIs.\" );\n\t\t\treturn uri;\n\t\t}\n\t}\n\n\tprivate createPointer( localID:string ):Pointer.Class {\n\t\treturn this.createPointerFrom( {}, localID );\n\t}\n\n\tprivate createPointerFrom<T extends Object>( object:T, localID:string ):T & Pointer.Class {\n\t\tlet id:string = ! ! this.context ? this.context.resolve( localID ) : localID;\n\t\tlet pointer:T & Pointer.Class = Pointer.Factory.createFrom<T>( object, id );\n\t\tObject.defineProperty( pointer, \"resolve\", {\n\t\t\twritable: false,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: true,\n\t\t\tvalue: ():Promise<[ PersistedDocument.Class, HTTP.Response.Class ]> => {\n\t\t\t\treturn this.get( id );\n\t\t\t},\n\t\t} );\n\n\t\treturn pointer;\n\t}\n\n\tprivate compact( expandedObjects:Object[], targetObjects:Object[], pointerLibrary:Pointer.Library ):Object[];\n\tprivate compact( expandedObject:Object, targetObject:Object, pointerLibrary:Pointer.Library ):Object;\n\tprivate compact( expandedObjectOrObjects:any, targetObjectOrObjects:any, pointerLibrary:Pointer.Library ):any {\n\t\tif( ! Utils.isArray( expandedObjectOrObjects ) ) return this.compactSingle( expandedObjectOrObjects, targetObjectOrObjects, pointerLibrary );\n\n\t\tlet expandedObjects:Object[] = expandedObjectOrObjects;\n\t\tlet targetObjects:Object[] = ! ! targetObjectOrObjects ? targetObjectOrObjects : [];\n\t\tfor( let i:number = 0, length:number = expandedObjects.length; i < length; i ++ ) {\n\t\t\tlet expandedObject:Object = expandedObjects[ i ];\n\t\t\tlet targetObject:Object = targetObjects[ i ] = ! ! targetObjects[ i ] ? targetObjects[ i ] : {};\n\n\t\t\tthis.compactSingle( expandedObject, targetObject, pointerLibrary );\n\t\t}\n\n\t\treturn targetObjects;\n\t}\n\n\tprivate compactSingle( expandedObject:Object, targetObject:Object, pointerLibrary:Pointer.Library ):Object {\n\t\tlet digestedSchema:ObjectSchema.DigestedObjectSchema = this.getDigestedObjectSchemaForExpandedObject( expandedObject );\n\n\t\treturn this.jsonldConverter.compact( expandedObject, targetObject, digestedSchema, pointerLibrary );\n\t}\n\n\tprivate getDigestedObjectSchemaForExpandedObject( expandedObject:Object ):ObjectSchema.DigestedObjectSchema {\n\t\tlet types:string[] = RDF.Node.Util.getTypes( <any> expandedObject );\n\n\t\treturn this.getDigestedObjectSchema( types, expandedObject[ \"@id\" ] );\n\t}\n\n\tprivate getDigestedObjectSchemaForDocument( document:Document.Class ):ObjectSchema.DigestedObjectSchema {\n\t\tlet types:string[] = Resource.Util.getTypes( document );\n\n\t\treturn this.getDigestedObjectSchema( types, document.id );\n\t}\n\n\tprivate getDigestedObjectSchema( objectTypes:string[], objectID:string ):ObjectSchema.DigestedObjectSchema {\n\t\tif( ! this.context ) return new ObjectSchema.DigestedObjectSchema();\n\n\t\tlet objectSchemas:ObjectSchema.DigestedObjectSchema[] = [ this.context.getObjectSchema() ];\n\t\tif( Utils.isDefined( objectID ) && ! RDF.URI.Util.hasFragment( objectID ) && ! RDF.URI.Util.isBNodeID( objectID ) ) objectSchemas.push( Class._documentSchema );\n\n\t\tfor( let type of objectTypes ) {\n\t\t\tif( this.context.hasObjectSchema( type ) ) objectSchemas.push( this.context.getObjectSchema( type ) );\n\t\t}\n\n\t\tlet digestedSchema:ObjectSchema.DigestedObjectSchema = ObjectSchema.Digester.combineDigestedObjectSchemas( objectSchemas );\n\t\tif( this.context.hasSetting( \"vocabulary\" ) ) digestedSchema.vocab = this.context.resolve( this.context.getSetting( \"vocabulary\" ) );\n\n\t\treturn digestedSchema;\n\t}\n\n\tprivate getRequestURI( uri:string ):string {\n\t\tif( RDF.URI.Util.isPrefixed( uri ) ) {\n\t\t\tif( ! this.context ) throw new Errors.IllegalArgumentError( \"This Documents instance doesn't support prefixed URIs.\" );\n\t\t\turi = ObjectSchema.Digester.resolvePrefixedURI( uri, this.context.getObjectSchema() );\n\t\t\tif( RDF.URI.Util.isPrefixed( uri ) ) throw new Errors.IllegalArgumentError( `The prefixed URI \"${ uri }\" could not be resolved.` );\n\t\t} else if( RDF.URI.Util.isRelative( uri ) ) {\n\t\t\tif( ! this.context ) throw new Errors.IllegalArgumentError( \"This Documents instance doesn't support relative URIs.\" );\n\t\t\turi = this.context.resolve( uri );\n\t\t} else if( this.context && ! RDF.URI.Util.isBaseOf( this.context.baseURI, uri ) ) {\n\t\t\tthrow new Errors.IllegalArgumentError( `\"${ uri }\" isn't a valid URI for this Carbon instance.` );\n\t\t}\n\t\treturn uri;\n\t}\n\n\tprivate setDefaultRequestOptions( requestOptions:HTTP.Request.Options, interactionModel:string ):HTTP.Request.Options {\n\t\tif( this.context && this.context.auth.isAuthenticated() ) this.context.auth.addAuthentication( requestOptions );\n\n\t\tHTTP.Request.Util.setAcceptHeader( \"application/ld+json\", requestOptions );\n\t\tHTTP.Request.Util.setPreferredInteractionModel( interactionModel, requestOptions );\n\n\t\treturn requestOptions;\n\t}\n\n\tprivate getMembershipResource( documentResource:RDF.Node.Class, rdfDocuments:RDF.Document.Class[], response:HTTP.Response.Class ):RDF.Node.Class {\n\t\tlet membershipResource:RDF.Node.Class;\n\n\t\tlet membershipResourceURI:string = RDF.Node.Util.getPropertyURI( documentResource, NS.LDP.Predicate.membershipResource );\n\t\tif( documentResource[ \"@id\" ] === membershipResourceURI ) {\n\t\t\tmembershipResource = documentResource;\n\t\t} else if( membershipResourceURI === null ) {\n\t\t\tif( documentResource[ \"@type\" ].indexOf( NS.LDP.Class.BasicContainer ) !== - 1 ) {\n\t\t\t\tmembershipResource = documentResource;\n\t\t\t} else {\n\t\t\t\tthrow new HTTP.Errors.BadResponseError( \"The document is not an ldp:BasicContainer and it doesn't contain an ldp:membershipResource triple.\", response );\n\t\t\t}\n\t\t} else {\n\t\t\tlet membershipResourceDocument:RDF.Document.Class = this.getRDFDocument( membershipResourceURI, rdfDocuments, response );\n\t\t\tif( membershipResourceDocument === null ) return null;\n\t\t\tmembershipResource = this.getDocumentResource( membershipResourceDocument, response );\n\t\t}\n\n\t\treturn membershipResource;\n\t}\n\n\tprivate createPersistedDocument<T>( documentPointer:Pointer.Class, documentResource:RDF.Node.Class, fragmentResources:RDF.Node.Class[] ):T & PersistedDocument.Class {\n\t\tlet persistedDocument:PersistedDocument.Class = PersistedDocument.Factory.decorate( documentPointer, this );\n\n\t\tlet fragments:PersistedFragment.Class[] = [];\n\t\tfor( let fragmentResource of fragmentResources ) {\n\t\t\tfragments.push( persistedDocument.createFragment( fragmentResource[ \"@id\" ] ) );\n\t\t}\n\n\t\tthis.compact( documentResource, persistedDocument, persistedDocument );\n\t\tthis.compact( fragmentResources, fragments, persistedDocument );\n\n\t\t// TODO: Move this to a more appropriate place. See also updatePersistedDocument() method\n\t\tpersistedDocument._syncSnapshot();\n\t\tfragments.forEach( ( fragment:PersistedFragment.Class ) => fragment._syncSnapshot() );\n\t\tpersistedDocument._syncSavedFragments();\n\n\t\tthis.decoratePersistedDocument( persistedDocument );\n\t\treturn persistedDocument as T & PersistedDocument.Class;\n\t}\n\n\tprivate updatePersistedDocument<T>( persistedDocument:PersistedDocument.Class, documentResource:RDF.Node.Class, fragmentsNode:RDF.Node.Class[] ):T & PersistedDocument.Class {\n\t\tfor( const fragmentNode of fragmentsNode ) {\n\t\t\tconst targetObject:object = {};\n\t\t\tconst currentFragment:PersistedFragment.Class =\n\t\t\t\tpersistedDocument.getFragment( fragmentNode[ \"@id\" ] ) ||\n\t\t\t\tpersistedDocument.createFragment( targetObject, fragmentNode[ \"@id\" ] );\n\t\t\tconst tempFragmentData:object = this.compactSingle( fragmentNode, targetObject, persistedDocument );\n\n\t\t\tif( currentFragment ) Utils.O.shallowUpdate( currentFragment, tempFragmentData );\n\t\t\tcurrentFragment._syncSnapshot();\n\t\t}\n\t\tpersistedDocument._syncSavedFragments();\n\n\t\tconst tempDocumentData:object = this.compact( documentResource, {}, persistedDocument );\n\t\tUtils.O.shallowUpdate( persistedDocument, tempDocumentData );\n\t\tpersistedDocument._syncSnapshot();\n\n\t\tthis.decoratePersistedDocument( persistedDocument );\n\t\treturn persistedDocument as T & PersistedDocument.Class;\n\t}\n\n\tprivate getPersistedMetadataResources<T>( freeNodes:RDF.Node.Class[], rdfDocuments:RDF.Document.Class[], response:HTTP.Response.Class ):(T & PersistedDocument.Class)[] {\n\t\tlet freeResources:FreeResources.Class = this._getFreeResources( freeNodes );\n\n\t\tlet descriptionResources:LDP.ResponseMetadata.Class[] = freeResources.getResources().filter( LDP.ResponseMetadata.Factory.is );\n\t\tif( descriptionResources.length === 0 ) return [];\n\t\tif( descriptionResources.length > 1 ) throw new HTTP.Errors.BadResponseError( `The response contained multiple ${ LDP.ResponseMetadata.RDF_CLASS } objects.`, response );\n\n\t\trdfDocuments.forEach( rdfDocument => this._getPersistedDocument( rdfDocument, response ) );\n\n\t\tlet responseMetadata:LDP.ResponseMetadata.Class = descriptionResources[ 0 ];\n\t\treturn responseMetadata.documentsMetadata.map( ( documentMetadata:LDP.DocumentMetadata.Class ) => {\n\t\t\tconst document:T & PersistedDocument.Class = <T & PersistedDocument.Class> documentMetadata.relatedDocument;\n\t\t\tdocument._etag = documentMetadata.eTag;\n\n\t\t\treturn document;\n\t\t} );\n\t}\n\n\tprivate decoratePersistedDocument( persistedDocument:PersistedDocument.Class ):void {\n\t\tthis._documentDecorators.forEach( ( options:DocumentDecorator, type:string ) => {\n\t\t\tif( ! persistedDocument.hasType( type ) ) return;\n\t\t\toptions.decorator.call( null, persistedDocument, ...options.parameters );\n\t\t} );\n\t}\n\n\tprivate updateFromPreferenceApplied<T>( persistedDocument:T & PersistedDocument.Class, rdfDocuments:RDF.Document.Class[], response:HTTP.Response.Class ):[ T, HTTP.Response.Class ] {\n\t\tlet eTag:string = HTTP.Response.Util.getETag( response );\n\t\tif( eTag === null ) throw new HTTP.Errors.BadResponseError( \"The response doesn't contain an ETag\", response );\n\n\t\tlet rdfDocument:RDF.Document.Class = this.getRDFDocument( persistedDocument.id, rdfDocuments, response );\n\t\tif( rdfDocument === null ) throw new HTTP.Errors.BadResponseError( \"No document was returned.\", response );\n\n\t\tpersistedDocument = this._getPersistedDocument<T>( rdfDocument, response );\n\t\tpersistedDocument._etag = eTag;\n\n\t\treturn [ persistedDocument, response ];\n\t}\n\n\tprivate _parseMembers( pointers:(string | Pointer.Class)[] ):Pointer.Class[] {\n\t\treturn pointers.map( pointer => {\n\t\t\tif( Utils.isString( pointer ) ) return this.getPointer( pointer );\n\t\t\tif( Pointer.Factory.is( pointer ) ) return pointer;\n\n\t\t\tthrow new Errors.IllegalArgumentError( \"No Carbon.Pointer or URI provided.\" );\n\t\t} );\n\t}\n\n\tprivate applyResponseData<T extends PersistedDocument.Class>( persistedProtectedDocument:T, response:HTTP.Response.Class ):[ T, HTTP.Response.Class ] | Promise<[ T, HTTP.Response.Class ]> {\n\t\tif( response.status === 204 || ! response.data ) return [ persistedProtectedDocument, response ];\n\n\t\treturn new JSONLD.Parser.Class().parse( response.data ).then<[ T, HTTP.Response.Class ]>( ( expandedResult:object[] ) => {\n\t\t\tconst freeNodes:RDF.Node.Class[] = RDF.Node.Util.getFreeNodes( expandedResult );\n\t\t\tthis.applyNodeMap( freeNodes );\n\n\t\t\tlet preferenceHeader:HTTP.Header.Class = response.getHeader( \"Preference-Applied\" );\n\t\t\tif( preferenceHeader === null || preferenceHeader.toString() !== \"return=representation\" ) return [ persistedProtectedDocument, response ];\n\n\t\t\tconst rdfDocuments:RDF.Document.Class[] = RDF.Document.Util.getDocuments( expandedResult );\n\t\t\treturn this.updateFromPreferenceApplied<T>( persistedProtectedDocument, rdfDocuments, response );\n\t\t} );\n\t}\n\n\tprivate applyNodeMap( freeNodes:RDF.Node.Class[] ):void {\n\t\tif( ! freeNodes.length ) return;\n\t\tconst freeResources:FreeResources.Class = this._getFreeResources( freeNodes );\n\t\tconst responseMetadata:LDP.ResponseMetadata.Class = <LDP.ResponseMetadata.Class> freeResources.getResources().find( LDP.ResponseMetadata.Factory.is );\n\n\t\tfor( const documentMetadata of responseMetadata.documentsMetadata ) {\n\t\t\tconst document:PersistedDocument.Class = documentMetadata.relatedDocument as PersistedDocument.Class;\n\t\t\tfor( const { key: keyBNode, value: valueBNode } of documentMetadata.bNodesMap.entries ) {\n\t\t\t\tconst originalBNode:PersistedBlankNode.Class = document.getFragment( keyBNode.id );\n\t\t\t\toriginalBNode.id = valueBNode.id;\n\n\t\t\t\tdocument._fragmentsIndex.delete( keyBNode.id );\n\t\t\t\tdocument._fragmentsIndex.set( valueBNode.id, originalBNode );\n\t\t\t}\n\t\t\tdocument._syncSavedFragments();\n\t\t}\n\t}\n}\n\nexport default Class;\n"]}