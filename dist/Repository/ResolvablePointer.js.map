{"version":3,"sources":["Repository/ResolvablePointer.ts"],"names":[],"mappings":"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","file":"ResolvablePointer.js","sourcesContent":["import { _parseResourceParams, _parseURIParams } from \"../DocumentsRepository/Utils\";\nimport { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\n\nimport { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\nimport { ModelTypeGuard } from \"../Model/ModelTypeGuard\";\n\nimport { Pointer } from \"../Pointer/Pointer\";\n\nimport { isFunction, isObject, ObjectUtils } from \"../Utils\";\n\nimport { BaseResolvablePointer } from \"./BaseResolvablePointer\";\nimport { Repository } from \"./Repository\";\n\n\nexport interface ResolvablePointer extends Pointer, Repository {\n\t$repository:Repository;\n\t$eTag:string | undefined;\n\n\t_resolved:boolean;\n\t_snapshot:object;\n\n\n\tisResolved():boolean;\n\n\n\t_syncSnapshot():void;\n\n\tisDirty():boolean;\n\n\trevert():void;\n\n\n\tget( ...params:any[] ):Promise<ResolvablePointer>;\n\tget( uri:string, ...params:any[] ):Promise<ResolvablePointer>;\n\n\tresolve( ...params:any[] ):Promise<ResolvablePointer>;\n\tresolve( resource:ResolvablePointer, ...params:any[] ):Promise<ResolvablePointer>;\n\n\texists( ...params:any[] ):Promise<boolean>;\n\texists( uri:string, ...params:any[] ):Promise<boolean>;\n\n\n\trefresh( ...params:any[] ):Promise<ResolvablePointer>;\n\trefresh( resource:ResolvablePointer, ...params:any[] ):Promise<ResolvablePointer>;\n\n\tsave( ...params:any[] ):Promise<ResolvablePointer>;\n\tsave( resource:ResolvablePointer, ...params:any[] ):Promise<ResolvablePointer>;\n\n\tsaveAndRefresh( ...params:any[] ):Promise<ResolvablePointer>;\n\tsaveAndRefresh( resource:ResolvablePointer, ...params:any[] ):Promise<ResolvablePointer>;\n\n\n\tdelete( ...params:any[] ):Promise<void>;\n\tdelete( uri:string, ...params:any[] ):Promise<void>;\n}\n\n\nfunction __internalRevert( target:any, source:any ):void {\n\tif( ! isObject( target ) || ! isObject( source ) ) return;\n\n\tnew Set<string>( [\n\t\t...Object.keys( target ),\n\t\t...Object.keys( source ),\n\t] ).forEach( key => {\n\t\tconst sourceValue:any = Array.isArray( source[ key ] ) ?\n\t\t\t[ ...source[ key ] ] : source[ key ];\n\n\t\tif( sourceValue === null || sourceValue === void 0 ) {\n\t\t\tdelete target[ key ];\n\t\t\treturn;\n\t\t}\n\n\t\tif( isFunction( sourceValue ) ) return;\n\n\t\ttarget[ key ] = sourceValue;\n\t} );\n}\n\n\nexport type ResolvablePointerFactory =\n\t& ModelPrototype<ResolvablePointer, Pointer>\n\t& ModelDecorator<ResolvablePointer, BaseResolvablePointer>\n\t& ModelTypeGuard<ResolvablePointer>\n\t;\n\nexport const ResolvablePointer:ResolvablePointerFactory = {\n\tPROTOTYPE: {\n\t\tget $repository():Repository {\n\t\t\tthrow new IllegalArgumentError( `Property \"$repository\" is required.` );\n\t\t},\n\n\t\t$eTag: void 0,\n\n\n\t\t_resolved: false,\n\n\t\tisResolved( this:ResolvablePointer ):boolean {\n\t\t\treturn this._resolved;\n\t\t},\n\n\n\t\t_snapshot: {},\n\n\t\t_syncSnapshot( this:{ types?:string[] } & ResolvablePointer ):void {\n\t\t\tconst clone:{ types?:string[] } & ResolvablePointer = ObjectUtils.clone( this, { arrays: true } );\n\t\t\tif( this.types ) clone.types = [ ...this.types ];\n\n\t\t\tthis._snapshot = clone;\n\t\t},\n\n\t\tisDirty( this:ResolvablePointer ):boolean {\n\t\t\treturn ! ObjectUtils\n\t\t\t\t.areEqual( this, this._snapshot, { arrays: true } );\n\t\t},\n\n\t\trevert( this:{ types?:string[] } & ResolvablePointer ):void {\n\t\t\t__internalRevert( this, this._snapshot );\n\t\t\tif( ! this.types ) this.types = [];\n\t\t},\n\n\n\t\tget( this:ResolvablePointer, uri?:string ):Promise<ResolvablePointer> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uri, arguments );\n\t\t\treturn this.$repository.get( _uri, ..._args );\n\t\t},\n\n\t\tresolve( this:ResolvablePointer, resource?:ResolvablePointer ):Promise<ResolvablePointer> {\n\t\t\tconst { _resource, _args } = _parseResourceParams( this, resource, arguments );\n\t\t\treturn this.$repository.resolve( _resource, ..._args );\n\t\t},\n\n\t\texists( this:ResolvablePointer, uri?:string ):Promise<boolean> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uri, arguments );\n\t\t\treturn this.$repository.exists( _uri, ..._args );\n\t\t},\n\n\n\t\trefresh( this:ResolvablePointer, resource?:ResolvablePointer, ...args:any[] ):Promise<ResolvablePointer> {\n\t\t\tconst { _resource, _args } = _parseResourceParams( this, resource, arguments );\n\t\t\treturn this.$repository.refresh( _resource, ..._args );\n\t\t},\n\n\t\tsave( this:ResolvablePointer, resource?:ResolvablePointer, ...args:any[] ):Promise<ResolvablePointer> {\n\t\t\tconst { _resource, _args } = _parseResourceParams( this, resource, arguments );\n\t\t\treturn this.$repository.save( _resource, ..._args );\n\t\t},\n\n\t\tsaveAndRefresh( this:ResolvablePointer, resource?:ResolvablePointer, ...args:any[] ):Promise<ResolvablePointer> {\n\t\t\tconst { _resource, _args } = _parseResourceParams( this, resource, arguments );\n\t\t\treturn this.$repository.saveAndRefresh( _resource, ..._args );\n\t\t},\n\n\n\t\tdelete( uri?:string, ...args:any[] ):Promise<void> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uri, arguments );\n\t\t\treturn this.$repository.delete( _uri, ..._args );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is ResolvablePointer {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( ResolvablePointer.PROTOTYPE, object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends BaseResolvablePointer>( object:T ):T & ResolvablePointer {\n\t\tif( ResolvablePointer.isDecorated( object ) ) return object;\n\n\t\tconst resource:T & Pointer = ModelDecorator\n\t\t\t.decorateMultiple( object, Pointer );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( ResolvablePointer.PROTOTYPE, resource );\n\t},\n\n\n\tis( value:any ):value is ResolvablePointer {\n\t\treturn Pointer.is( value )\n\t\t\t&& ResolvablePointer.isDecorated( value )\n\t\t\t;\n\t},\n};\n"]}