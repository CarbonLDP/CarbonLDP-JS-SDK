{"version":3,"sources":["LDP/DirectContainer.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2CAA0C;AAC1C,0CAAyC;AACzC,kDAAsC;AAEtC,gDAAoC;AAEvB,QAAA,SAAS,GAAU,SAAG,CAAC,eAAe,CAAC;AAMpD;IAAA;IAqCA,CAAC;IApCO,0BAAkB,GAAzB,UAA2B,QAAe;QACzC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAE,QAAQ,EAAE,oBAAoB,CAAE,CAC/D;IACH,CAAC;IAEM,UAAE,GAAT,UAAW,MAAa;QACvB,MAAM,CAAC,mBAAQ,CAAC,EAAE,CAAE,MAAM,CAAE;eACxB,MAAM,CAAC,OAAO,CAAE,iBAAS,CAAE;eAC3B,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE,CACtC;IACH,CAAC;IAEM,cAAM,GAAb,UAAe,kBAA0B,EAAE,iBAAkC,EAAE,kBAAoC;QAClH,MAAM,CAAC,OAAO,CAAC,UAAU,CAAE,EAAE,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,CAAE,CAAC;IAC5F,CAAC;IAEM,kBAAU,GAAjB,UAAqC,MAAQ,EAAE,kBAA0B,EAAE,iBAAkC,EAAE,kBAAoC;QAClJ,EAAE,CAAA,CAAE,OAAO,CAAC,EAAE,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAE,+CAA+C,CAAE,CAAC;QACpH,EAAE,CAAA,CAAE,CAAE,kBAAmB,CAAC;YAAC,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAE,iDAAiD,CAAE,CAAC;QACtH,EAAE,CAAA,CAAE,CAAE,iBAAkB,CAAC;YAAC,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAE,iDAAiD,CAAE,CAAC;QACrH,EAAE,CAAA,CAAE,CAAE,kBAAkB,IAAI,KAAK,CAAC,SAAS,CAAE,kBAAkB,CAAG,CAAC;YAAC,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAE,kDAAkD,CAAE,CAAC;QAEhK,IAAI,SAAS,GAAmB,MAAM,CAAC;QACvC,EAAE,CAAA,CAAE,CAAE,mBAAQ,CAAC,EAAE,CAAE,MAAM,CAAG,CAAC;YAAC,SAAS,GAAS,mBAAQ,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;QAE9E,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,SAAG,CAAC,SAAS,CAAE,CAAC;QACtC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,SAAG,CAAC,eAAe,CAAE,CAAC;QAE5C,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAGlD,SAAS,CAAC,iBAAiB,GAAa,iBAAiB,CAAC;QAC1D,SAAS,CAAC,kBAAkB,GAAa,kBAAkB,CAAC;QAE5D,MAAM,CAAC,SAAS,CAAC;IAClB,CAAC;IACF,cAAC;AAAD,CArCA,AAqCC,IAAA;AArCY,0BAAO","file":"DirectContainer.js","sourcesContent":["import { LDP } from \"../Vocabularies/LDP\";\nimport { Document } from \"./../Document\";\nimport * as Errors from \"./../Errors\";\nimport { Pointer } from \"./../Pointer\";\nimport * as Utils from \"./../Utils\";\n\nexport const RDF_CLASS:string = LDP.DirectContainer;\n\nexport interface Class extends Document {\n\tmembershipResource:Pointer;\n}\n\nexport class Factory {\n\tstatic hasClassProperties( resource:object ):boolean {\n\t\treturn Utils.hasPropertyDefined( resource, \"membershipResource\" )\n\t\t\t;\n\t}\n\n\tstatic is( object:object ):object is Class {\n\t\treturn Document.is( object )\n\t\t\t&& object.hasType( RDF_CLASS )\n\t\t\t&& Factory.hasClassProperties( object )\n\t\t\t;\n\t}\n\n\tstatic create( membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):Class {\n\t\treturn Factory.createFrom( {}, membershipResource, hasMemberRelation, isMemberOfRelation );\n\t}\n\n\tstatic createFrom<T extends object>( object:T, membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):T & Class {\n\t\tif( Factory.is( object ) ) throw new Errors.IllegalArgumentError( \"The base object is already a DirectContainer.\" );\n\t\tif( ! membershipResource ) throw new Errors.IllegalArgumentError( \"The property membershipResource cannot be null.\" );\n\t\tif( ! hasMemberRelation ) throw new Errors.IllegalArgumentError( \"The property hasMemberRelation cannot be empty.\" );\n\t\tif( ! isMemberOfRelation && Utils.isDefined( isMemberOfRelation ) ) throw new Errors.IllegalArgumentError( \"The property isMemberOfRelation cannot be empty.\" );\n\n\t\tlet container:T & Class = <any> object;\n\t\tif( ! Document.is( object ) ) container = <any> Document.createFrom( object );\n\n\t\tcontainer.types.push( LDP.Container );\n\t\tcontainer.types.push( LDP.DirectContainer );\n\n\t\tcontainer.membershipResource = membershipResource;\n\n\t\t// TODO: Handle properties correctly and validate them\n\t\tcontainer.hasMemberRelation = <Pointer> hasMemberRelation;\n\t\tcontainer.isMemberOfRelation = <Pointer> isMemberOfRelation;\n\n\t\treturn container;\n\t}\n}\n\nexport default Class;\n"]}