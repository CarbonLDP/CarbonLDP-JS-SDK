{"version":3,"sources":["LDP/CarbonMap.ts"],"names":[],"mappings":";;AAEA,wCAAuC;AACvC,uCAAsC;AAgBtC,IAAM,MAAM,GAAgB;IAC3B,SAAS,EAAE;QACV,KAAK,EAAE,KAAC,CAAC,KAAK;QACd,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;CACD,CAAC;AAEW,QAAA,SAAS,GAAoB;IACzC,IAAI,EAAE,KAAC,CAAC,GAAG;IACX,MAAM,QAAA;IAEN,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,mBAAQ,CAAC,EAAE,CAAE,MAAM,CAAE;eACxB,MAAM,CAAC,OAAO,CAAE,iBAAS,CAAC,IAAI,CAAE;eAChC,MAAM,CAAC,cAAc,CAAE,SAAS,CAAE,CAAC;IACxC,CAAC;CAED,CAAC","file":"CarbonMap.js","sourcesContent":["import { ModelFactory } from \"../ModelFactory\";\nimport { ObjectSchema } from \"../ObjectSchema\";\nimport { Resource } from \"../Resource\";\nimport { C } from \"../Vocabularies/C\";\nimport { CarbonMapEntry } from \"./CarbonMapEntry\";\n\n\nexport interface CarbonMap<K, V> extends Resource {\n\tentries:CarbonMapEntry<K, V>[];\n}\n\n\nexport interface CarbonMapFactory extends ModelFactory<CarbonMap<any, any>> {\n\tTYPE:string;\n\tSCHEMA:ObjectSchema;\n\n\tis( object:object ):object is CarbonMap<any, any>;\n}\n\nconst SCHEMA:ObjectSchema = {\n\t\"entries\": {\n\t\t\"@id\": C.entry,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n};\n\nexport const CarbonMap:CarbonMapFactory = {\n\tTYPE: C.Map,\n\tSCHEMA,\n\n\tis( object:object ):object is CarbonMap<any, any> {\n\t\treturn Resource.is( object )\n\t\t\t&& object.hasType( CarbonMap.TYPE )\n\t\t\t&& object.hasOwnProperty( \"entries\" );\n\t},\n\n};\n"]}