{"version":3,"sources":["LDP/Map.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wDAA4C;AAG5C,0CAA8E;AAEjE,QAAA,SAAS,GAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;AAE5B,QAAA,MAAM,GAAgB;IAClC,SAAS,EAAE;QACV,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK;QACjB,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;CACD,CAAC;AAMF;IAAA;IAQA,CAAC;IANO,UAAE,GAAT,UAAW,MAAa;QACvB,MAAM,CAAC,kBAAe,CAAC,EAAE,CAAE,MAAM,CAAE;eAC/B,MAAM,CAAC,OAAO,CAAE,iBAAS,CAAE;eAC3B,MAAM,CAAC,cAAc,CAAE,SAAS,CAAE,CAAC;IACxC,CAAC;IAEF,cAAC;AAAD,CARA,AAQC,IAAA;AARY,0BAAO","file":"Map.js","sourcesContent":["import * as NS from \"../Vocabularies/index\";\nimport { Class as ObjectSchema } from \"./../ObjectSchema\";\nimport { Class as Entry } from \"./Entry\";\nimport { Class as Resource, Factory as ResourceFactory } from \"./../Resource\";\n\nexport const RDF_CLASS:string = NS.C.Map;\n\nexport const SCHEMA:ObjectSchema = {\n\t\"entries\": {\n\t\t\"@id\": NS.C.entry,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n};\n\nexport interface Class<K, V> extends Resource {\n\tentries:Entry<K, V>[];\n}\n\nexport class Factory {\n\n\tstatic is( object:object ):object is Class<any, any> {\n\t\treturn ResourceFactory.is( object )\n\t\t\t&& object.hasType( RDF_CLASS )\n\t\t\t&& object.hasOwnProperty( \"entries\" );\n\t}\n\n}\n\nexport default Class;\n"]}