{"version":3,"sources":["LDP/Map.ts"],"names":[],"mappings":";;AAEA,wCAAgD;AAChD,uCAAsC;AAgBtC,IAAM,MAAM,GAAgB;IAC3B,SAAS,EAAE;QACV,KAAK,EAAE,KAAC,CAAC,KAAK;QACd,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;CACD,CAAC;AAEW,QAAA,GAAG,GAAc;IAC7B,IAAI,EAAE,KAAC,CAAC,GAAG;IACX,MAAM,QAAA;IAEN,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,4BAAiB,CAAC,EAAE,CAAE,MAAM,CAAE;eACjC,MAAM,CAAC,OAAO,CAAE,WAAG,CAAC,IAAI,CAAE;eAC1B,MAAM,CAAC,cAAc,CAAE,SAAS,CAAE,CAAC;IACxC,CAAC;CAED,CAAC","file":"Map.js","sourcesContent":["import { ModelFactory } from \"../core/ModelFactory\";\nimport { ObjectSchema } from \"../ObjectSchema\";\nimport { TransientResource } from \"../Resource\";\nimport { C } from \"../Vocabularies/C\";\nimport { MapEntry } from \"./MapEntry\";\n\n\nexport interface Map<K, V> extends TransientResource {\n\tentries:MapEntry<K, V>[];\n}\n\n\nexport interface MapFactory extends ModelFactory<Map<any, any>> {\n\tTYPE:string;\n\tSCHEMA:ObjectSchema;\n\n\tis( object:object ):object is Map<any, any>;\n}\n\nconst SCHEMA:ObjectSchema = {\n\t\"entries\": {\n\t\t\"@id\": C.entry,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n};\n\nexport const Map:MapFactory = {\n\tTYPE: C.Map,\n\tSCHEMA,\n\n\tis( object:object ):object is Map<any, any> {\n\t\treturn TransientResource.is( object )\n\t\t\t&& object.hasType( Map.TYPE )\n\t\t\t&& object.hasOwnProperty( \"entries\" );\n\t},\n\n};\n"]}