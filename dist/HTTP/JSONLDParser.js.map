{"version":3,"sources":["HTTP/JSONLDParser.ts"],"names":[],"mappings":";AAEA,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAGjC,2BAAuB,cAAc,CAAC,CAAA;AAEtC;IAAA;IAsBA,CAAC;IArBA,qBAAK,GAAL,UAAO,KAAY;QAAnB,iBAKC;QAJA,IAAI,UAAU,GAAc,IAAI,oBAAU,EAAE,CAAC;QAC7C,MAAM,CAAC,UAAU,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC,IAAI,CAAE,UAAE,YAAmB;YAC3D,MAAM,CAAC,KAAI,CAAC,UAAU,CAAE,YAAY,CAAE,CAAC;QACxC,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,0BAAU,GAAlB,UAAoB,YAAmB,EAAE,OAA6B;QACrE,MAAM,CAAC,IAAI,OAAO,CAAE,UAAE,OAAiC,EAAE,MAA4B;YACpF,MAAM,CAAC,MAAM,CAAE,YAAY,EAAE,OAAO,EAAE,UAAE,KAAS,EAAE,QAAe;gBACjE,EAAE,CAAC,CAAE,KAAM,CAAC,CAAC,CAAC;oBAEb,MAAM,KAAK,CAAC;gBACb,CAAC;gBAED,YAAY,GAAG,QAAQ,CAAC;gBAExB,OAAO,CAAE,QAAQ,CAAE,CAAC;YACrB,CAAC,CAAE,CAAC;QACL,CAAC,CAAE,CAAC;IACL,CAAC;IACF,YAAC;AAAD,CAtBA,AAsBC,IAAA;AAtBY,aAAK,QAsBjB,CAAA;AAED;kBAAe,KAAK,CAAC","file":"HTTP/JSONLDParser.js","sourcesContent":["/// <reference path=\"../../typings/typings.d.ts\" />\n\nimport * as jsonld from \"jsonld\";\n\nimport Parser from \"./Parser\";\nimport JSONParser from \"./JSONParser\";\n\nexport class Class implements Parser<any> {\n\tparse( input:string ):Promise<any> {\n\t\tlet jsonParser:JSONParser = new JSONParser();\n\t\treturn jsonParser.parse( input ).then( ( parsedObject:Object ) => {\n\t\t\treturn this.expandJSON( parsedObject );\n\t\t});\n\t}\n\n\tprivate expandJSON( parsedObject:Object, options?:jsonld.ExpandOptions ):Promise<Object> {\n\t\treturn new Promise( ( resolve:( result:Object ) => void, reject:( error:any ) => void ):void => {\n\t\t\tjsonld.expand( parsedObject, options, ( error:any, expanded:Object ):void => {\n\t\t\t\tif ( error ) {\n\t\t\t\t\t// TODO: Handle jsonld.expand error\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tparsedObject = expanded;\n\n\t\t\t\tresolve( expanded );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}