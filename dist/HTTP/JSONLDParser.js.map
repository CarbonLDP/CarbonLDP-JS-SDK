{"version":3,"sources":["HTTP/JSONLDParser.ts"],"names":[],"mappings":"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","file":"HTTP/JSONLDParser.js","sourcesContent":["import * as jsonld from \"jsonld\";\n\nimport JSONParser from \"./JSONParser\";\nimport * as HTTP from \"./../HTTP\";\nimport Parser from \"./Parser\";\nimport * as RDF from \"./../RDF\";\nimport * as Utils from \"./../Utils\";\n\nconst MAX_CTX_URLS:number = 10;\nconst LINK_HEADER_REL:string = \"http://www.w3.org/ns/json-ld#context\";\n\n\nfunction _getTargetFromLinkHeader( header:HTTP.Header.Class ):string {\n\tlet rLinkHeader:RegExp = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n\tfor( let value of header.values ) {\n\t\tlet match:string[] = value.toString().match( rLinkHeader );\n\t\tif( ! match ) continue;\n\n\t\tlet target:string = match[ 1 ];\n\t\tlet params:string = match[ 2 ];\n\t\tlet rParams:RegExp = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\n\t\tlet result:{[ key:string ]:string} = {};\n\t\twhile( true ) {\n\t\t\tmatch = rParams.exec( params );\n\t\t\tif( ! match ) break;\n\n\t\t\tresult[ match[ 1 ] ] = ( match[ 2 ] === undefined ) ? match[ 3 ] : match[ 2 ];\n\t\t}\n\t\tif( result[ \"rel\" ] === LINK_HEADER_REL ) return target;\n\t}\n\treturn null;\n}\n\nfunction _findContextURLs( input:Object, contexts:{[ index:string ]:Object}, base:string, replace:boolean = false ):boolean {\n\tlet previousContexts:number = Object.keys( contexts ).length;\n\n\tif( Utils.isArray( input ) ) {\n\t\tfor( let element of (<Array<Object>> input) ) {\n\t\t\t_findContextURLs( element, contexts, base );\n\t\t}\n\t} else if ( Utils.isPlainObject( input ) ) {\n\t\tfor( let key in input ) {\n\t\t\tif( \"@context\" !== key ) {\n\t\t\t\t_findContextURLs( input[ key ], contexts, base );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet urlOrArrayOrContext:string | Array<string | Object> | Object = input[ key ];\n\t\t\tif( Utils.isArray( urlOrArrayOrContext ) ) {\n\t\t\t\tlet contextArray:Array<string | Object> = <Array<string | Object>> urlOrArrayOrContext;\n\t\t\t\tfor( let index:number = 0, length:number = contextArray.length; index < length; ++index ) {\n\t\t\t\t\tlet urlOrContext:string | Object = contextArray[ index ];\n\t\t\t\t\tif( ! Utils.isString( urlOrContext ) ) continue;\n\n\t\t\t\t\tlet url:string = <string> urlOrContext;\n\t\t\t\t\turl = RDF.URI.Util.resolve( base, url );\n\t\t\t\t\tif ( replace ) {\n\t\t\t\t\t\tif ( Utils.isArray( contexts[ url ] ) ) {\n\t\t\t\t\t\t\tArray.prototype.splice.apply( contextArray, [ index, 1 ].concat( <any> contexts[ url ] ) );\n\t\t\t\t\t\t\tindex += (<Array<any>> contexts[ url ]).length - 1;\n\t\t\t\t\t\t\tlength = contextArray.length;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontextArray[ index ] = contexts[ url ];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ( ! ( url in contexts ) ) {\n\t\t\t\t\t\tcontexts[ url ] =  true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( Utils.isString( urlOrArrayOrContext ) ) {\n\t\t\t\tlet url:string = <string> urlOrArrayOrContext;\n\t\t\t\turl = RDF.URI.Util.resolve( base, url );\n\t\t\t\tif ( replace ) {\n\t\t\t\t\tinput[ key ] = contexts[ url ];\n\t\t\t\t} else if ( ! ( url in contexts ) ) {\n\t\t\t\t\tcontexts[ url ] =  null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn previousContexts < Object.keys( contexts ).length;\n}\n\nfunction _retrieveContexts( input:Object, contextsRequested:{[ index:string ]:boolean}, base:string ):Promise<void> {\n\tif( Object.keys( contextsRequested ).length > MAX_CTX_URLS ) throw new Error( \"Maximum number of @context URLs exceeded.\" );\n\n\tlet contextToResolved:{[ index:string ]:Object} = Object.create( null );\n\tif( ! _findContextURLs( input, contextToResolved, base ) ) return;\n\n\tfunction resolved( url:string, promise:Promise<[ any, HTTP.Response.Class ]> ):Promise<any> {\n\t\tlet _contextsRequested:{[ index:string ]:boolean} = Utils.O.clone<{[ index:string ]:boolean}>( contextsRequested );\n\t\t_contextsRequested[ url ] = true;\n\n\t\treturn promise.then( ( [ object, response ]:[ any, HTTP.Response.Class ] ) => {\n\t\t\tlet contextWrapper:Object = { \"@context\": {} };\n\n\t\t\tlet header:HTTP.Header.Class = response.getHeader( \"Content-Type\" );\n\t\t\tif( ! Utils.S.contains( header.toString(),  \"application/ld+json\" ) ) {\n\t\t\t\theader = response.getHeader( \"Link\" );\n\t\t\t\tlet link:string;\n\t\t\t\tif( ! ! header ) link = _getTargetFromLinkHeader( header );\n\t\t\t\tif( ! ! link ) contextWrapper[ \"@context\" ] = link;\n\t\t\t} else {\n\t\t\t\tcontextWrapper[ \"@context\" ]  = ( \"@context\" in object ) ? object[ \"@context\" ] : {};\n\t\t\t}\n\t\t\tcontextToResolved[ url ] = contextWrapper[ \"@context\" ];\n\n\t\t\treturn _retrieveContexts( contextWrapper, _contextsRequested, url );\n\t\t} );\n\t}\n\n\tlet promises:Promise<void>[] = [];\n\tfor( let url in contextToResolved ) {\n\t\tif( url in contextsRequested ) throw new Error( \"Cyclical @context URLs detected.\" );\n\n\t\tlet requestOptions:HTTP.Request.Options = {};\n\t\tHTTP.Request.Util.setAcceptHeader( \"application/ld+json, application/json\", requestOptions );\n\n\t\tlet promise:Promise<[ any, HTTP.Response.Class ]> = HTTP.Request.Service.get( url, requestOptions, new JSONParser() );\n\t\tpromises.push( resolved( url, promise ) );\n\t}\n\n\treturn Promise.all<void>( promises ).then( () => {\n\t\t_findContextURLs( input, contextToResolved, base, true );\n\t} );\n}\n\nfunction _proress( input:Object, context:Object ):Object {\n\treturn input;\n}\n\nexport function expand( input:Object ):Promise<Object> {\n\t// Find and resolve context URLs\n\treturn _retrieveContexts( input, <{[ index:string ]:boolean}> Object.create( null ), \"\" ).then( () => {\n\t\treturn _proress( input, {} );\n\t} );\n}\n\nexport class Class implements Parser<any> {\n\tparse( input:string ):Promise<any> {\n\t\tlet jsonParser:JSONParser = new JSONParser();\n\t\treturn jsonParser.parse( input ).then( ( parsedObject:Object ) => {\n\t\t\treturn this.expandJSON( parsedObject );\n\t\t} );\n\t}\n\n\tprivate expandJSON( parsedObject:Object, options?:jsonld.ExpandOptions ):Promise<Object> {\n\t\treturn new Promise( ( resolve:( result:Object ) => void, reject:( error:any ) => void ):void => {\n\t\t\tjsonld.expand( parsedObject, options, ( error:any, expanded:Object ):void => {\n\t\t\t\tif( error ) {\n\t\t\t\t\t// TODO: Handle jsonld.expand error\n\t\t\t\t\treject( error );\n\t\t\t\t}\n\n\t\t\t\tparsedObject = expanded;\n\n\t\t\t\tresolve( expanded );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}