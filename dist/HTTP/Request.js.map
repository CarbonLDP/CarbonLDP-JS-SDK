{"version":3,"sources":["HTTP/Request.ts"],"names":[],"mappings":"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","file":"HTTP/Request.js","sourcesContent":["import * as Errors from \"./Errors\";\nimport * as Header from \"./Header\";\nimport Method from \"./Method\";\nimport Parser from \"./Parser\";\nimport Response from \"./Response\";\nimport * as ErrorResponse from \"./../LDP/ErrorResponse\";\nimport HTTPError from \"./Errors/HTTPError\";\n\nimport * as Utils from \"./../Utils\";\n\nimport {RequestOptions, ClientRequest, IncomingMessage} from \"http\";\nimport {Url} from \"url\";\n\nexport interface Options {\n\theaders?: Map<string, Header.Class>;\n\tsendCredentialsOnCORS?:boolean;\n\ttimeout?:number;\n\trequest?:XMLHttpRequest;\n}\n\nexport interface ContainerRetrievalPreferences {\n\tinclude?:string[];\n\tomit?:string[];\n}\n\ninterface Reject {\n\t( error:Errors.Error ): void;\n}\ninterface Resolve {\n\t( response:Response ): void;\n}\n\nfunction forEachHeaders( headers:Map<string, Header.Class>, setHeader:( name:string, value:string ) => any ):void {\n\tlet namesIterator:Iterator<string> = headers.keys();\n\tlet next:IteratorResult<string> = namesIterator.next();\n\twhile ( ! next.done ) {\n\t\tlet name:string = next.value;\n\t\tlet value:Header.Class = headers.get( name );\n\t\tsetHeader( name, value.toString() );\n\t\tnext = namesIterator.next();\n\t}\n}\n\nfunction onResolve( resolve:Resolve, reject:Reject, response:Response ):void {\n\tif ( response.status >= 200 && response.status <= 299 ) {\n\t\tresolve( response );\n\n\t} else if ( response.status >= 400 && response.status < 600 && Errors.statusCodeMap.has( response.status ) ) {\n\t\tlet error:typeof Errors.Error = Errors.statusCodeMap.get( response.status );\n\t\t// TODO: Set error message\n\t\treject( new error( \"\", response ) );\n\n\t} else {\n\t\treject( new Errors.UnknownError( response.data, response ) );\n\n\t}\n}\n\nfunction sendWithBrowser( method:string, url:string, body:string | Blob, options:Options ):Promise<Response> {\n\treturn new Promise<Response>( ( resolve:Resolve, reject:Reject ):void => {\n\t\tlet request:XMLHttpRequest = options.request ? options.request : new XMLHttpRequest();\n\t\trequest.open( method, url, true );\n\n\t\tif ( options.headers ) forEachHeaders( options.headers, ( name:string, value:string ) => request.setRequestHeader( name, value ) );\n\t\trequest.withCredentials = options.sendCredentialsOnCORS;\n\t\tif ( options.timeout ) request.timeout = options.timeout;\n\n\t\trequest.onload = request.onerror = () => {\n\t\t\tlet response:Response = new Response( request );\n\t\t\tonResolve( resolve, reject, response );\n\t\t};\n\n\t\tif ( body ) {\n\t\t\trequest.send( body );\n\t\t} else {\n\t\t\trequest.send();\n\t\t}\n\t});\n}\n\nfunction sendWithNode( method:string, url:string, body:string | Buffer, options:Options ):Promise<Response>  {\n\treturn new Promise<Response>( ( resolve:Resolve, reject:Reject ):void => {\n\t\tlet URL:any = require( \"url\" );\n\t\tlet parsedURL:Url = URL.parse( url );\n\t\tlet HTTP:any = parsedURL.protocol === \"http:\" ? require( \"http\" ) : require( \"https\" );\n\n\t\tlet requestOptions:RequestOptions & { withCredentials: boolean } = {\n\t\t\tprotocol: parsedURL.protocol,\n\t\t\thostname: parsedURL.hostname,\n\t\t\tpath: parsedURL.path,\n\t\t\tmethod: method,\n\t\t\theaders: {},\n\t\t\twithCredentials: options.sendCredentialsOnCORS,\n\t\t};\n\t\tif ( options.headers ) forEachHeaders( options.headers, ( name:string, value:string ) => requestOptions.headers[ name ] = value );\n\n\t\tlet request:ClientRequest = HTTP.request( requestOptions, ( res:IncomingMessage ) => {\n\t\t\tlet data:string = \"\";\n\n\t\t\tres.setEncoding( \"utf8\" );\n\t\t\tres.on( \"data\", ( chunk ) => {\n\t\t\t\tdata = chunk;\n\t\t\t});\n\n\t\t\tres.on( \"end\", () => {\n\t\t\t\tlet response:Response = new Response( request, data, res );\n\t\t\t\tonResolve( resolve, reject, response );\n\t\t\t});\n\t\t});\n\t\tif ( options.timeout ) request.setTimeout( options.timeout );\n\n\t\trequest.on( \"error\", ( error ) => {\n\t\t\tlet response:Response = new Response( request, error.message );\n\t\t\tonResolve( resolve, reject, response );\n\t\t});\n\n\t\trequest.end( body );\n\t});\n}\n\nfunction isBody( data:string ): boolean;\nfunction isBody( data:Blob ): boolean;\nfunction isBody( data:Buffer ): boolean;\nfunction isBody( data:string | Blob | Buffer ): boolean {\n\treturn Utils.isString( data )\n\t\t|| typeof Blob !== \"undefined\" && data instanceof Blob\n\t\t|| typeof Buffer !== \"undefined\" && data instanceof Buffer;\n}\n\nexport class Service {\n\n\tprivate static defaultOptions:Options = {\n\t\tsendCredentialsOnCORS: true,\n\t};\n\n\tstatic send( method:(Method | string), url:string, body:Blob, options?:Options ):Promise<Response>;\n\tstatic send<T>( method:(Method | string), url:string, body:Blob, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic send( method:(Method | string), url:string, body:Buffer, options?:Options ):Promise<Response>;\n\tstatic send<T>( method:(Method | string), url:string, body:Buffer, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\n\tstatic send( method:(Method | string), url:string, options?:Options ):Promise<Response>;\n\tstatic send( method:(Method | string), url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic send( method:(Method | string), url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic send<T>( method:(Method | string), url:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic send<T>( method:(Method | string), url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic send<T>( method:any, url:string, bodyOrOptions:any = Service.defaultOptions, optionsOrParser:any = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\tlet body:string | Blob | Buffer = null;\n\t\tlet options:Options = Utils.hasProperty( optionsOrParser, \"parse\" ) ? bodyOrOptions : optionsOrParser;\n\t\tparser = Utils.hasProperty( optionsOrParser, \"parse\" ) ? optionsOrParser : parser;\n\n\t\tif ( isBody( bodyOrOptions ) ) {\n\t\t\tbody = bodyOrOptions;\n\t\t} else {\n\t\t\toptions = bodyOrOptions ? bodyOrOptions : options;\n\t\t}\n\n\t\toptions = Utils.extend( options || {}, Service.defaultOptions );\n\n\t\tif ( Utils.isNumber( method ) ) method = Method[ method ];\n\n\t\tlet requestPromise:Promise<Response>;\n\t\tif ( typeof XMLHttpRequest !== \"undefined\" ) {\n\t\t\trequestPromise = sendWithBrowser( method, url, <string | Blob> body, options );\n\t\t} else {\n\t\t\trequestPromise = sendWithNode( method, url, <string | Buffer> body, options );\n\t\t}\n\n\t\tif( parser === null ) return requestPromise;\n\n\t\treturn requestPromise.then( ( response:Response ) => {\n\t\t\treturn parser.parse( response.data ).then( ( parsedBody:T ) => {\n\t\t\t\treturn [ parsedBody, response ];\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic options( url:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.OPTIONS, url, options );\n\t}\n\n\tstatic head( url:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.HEAD, url, options );\n\t}\n\n\tstatic get( url:string, options?:Options ):Promise<Response>;\n\tstatic get<T>( url:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic get<T>( url:string, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.GET, url, null, options, parser );\n\t}\n\n\tstatic post( url:string, body:Buffer, options?:Options ):Promise<Response>;\n\tstatic post<T>( url:string, body:Buffer, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ] >;\n\tstatic post( url:string, body:Blob, options?:Options ):Promise<Response>;\n\tstatic post<T>( url:string, body:Blob, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ] >;\n\tstatic post( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic post<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ] >;\n\tstatic post<T>( url:string, bodyOrOptions:any = Service.defaultOptions, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.POST, url, bodyOrOptions, options, parser );\n\t}\n\n\tstatic put( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic put<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic put<T>( url:string, bodyOrOptions:any = Service.defaultOptions, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.PUT, url, bodyOrOptions, options, parser );\n\t}\n\n\tstatic patch( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic patch<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic patch<T>( url:string, bodyOrOptions:any = Service.defaultOptions, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.PATCH, url, bodyOrOptions, options, parser );\n\t}\n\n\tstatic delete( url:string, options?:Options ):Promise<Response>;\n\tstatic delete( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic delete<T>( url:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic delete<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic delete<T>( url:string, bodyOrOptions:any = Service.defaultOptions, optionsOrParser:any = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.DELETE, url, bodyOrOptions, optionsOrParser, parser );\n\t}\n}\n\nexport class Util {\n\n\tstatic getHeader( headerName:string, requestOptions:Options, initialize:boolean = false ):Header.Class {\n\t\theaderName = headerName.toLowerCase();\n\n\t\tif( initialize ) {\n\t\t\tlet headers:Map<string, Header.Class> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header.Class>();\n\t\t\tif ( ! headers.has( headerName ) )\n\t\t\t\theaders.set( headerName, new Header.Class() );\n\t\t}\n\n\t\tif( ! requestOptions.headers  ) return undefined;\n\t\treturn requestOptions.headers.get( headerName );\n\t}\n\n\tstatic setAcceptHeader( accept:string, requestOptions:Options ):Options {\n\t\tlet headers:Map<string, Header.Class> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header.Class>();\n\t\theaders.set( \"accept\", new Header.Class( accept ) );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setContentTypeHeader( contentType:string, requestOptions:Options ):Options {\n\t\tlet headers:Map<string, Header.Class> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header.Class>();\n\t\theaders.set( \"content-type\", new Header.Class( contentType ) );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setIfMatchHeader( etag:string, requestOptions:Options ):Options {\n\t\tlet headers:Map<string, Header.Class> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header.Class>();\n\t\theaders.set( \"if-match\", new Header.Class( etag ) );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setPreferredInteractionModel( interactionModelURI:string, requestOptions:Options ):Options {\n\t\tlet prefer:Header.Class = Util.getHeader( \"prefer\", requestOptions, true );\n\t\tprefer.values.push( new Header.Value( interactionModelURI + \"; rel=interaction-model\" ) );\n\n\t\treturn requestOptions;\n\t}\n\n\tstatic setContainerRetrievalPreferences( preferences:ContainerRetrievalPreferences, requestOptions:Options, returnRepresentation:boolean = true ):Options {\n\t\tlet prefer:Header.Class = Util.getHeader( \"prefer\", requestOptions, true );\n\t\tlet representation:string = returnRepresentation ? \"return=representation; \" : \"\";\n\n\t\tlet keys:string[] = [ \"include\", \"omit\" ];\n\t\tfor ( let key of keys ) {\n\t\t\tif ( key in preferences && preferences[ key ].length > 0 ) {\n\t\t\t\tprefer.values.push( new Header.Value( `${ representation }${ key }=\"${ preferences[ key ].join( \" \" ) }\"` ) );\n\t\t\t}\n\t\t}\n\n\t\treturn requestOptions;\n\t}\n\n\tstatic setSlug( slug:string, requestOptions:Options ):Options {\n\t\tlet slugHeader:Header.Class = Util.getHeader( \"slug\", requestOptions, true );\n\t\tslugHeader.values.push( new Header.Value( slug ) );\n\n\t\treturn requestOptions;\n\t}\n\n\tstatic isOptions( object:Object ):boolean {\n\t\treturn Utils.hasPropertyDefined( object, \"headers\" )\n\t\t\t|| Utils.hasPropertyDefined( object, \"sendCredentialsOnCORS\" )\n\t\t\t|| Utils.hasPropertyDefined( object, \"timeout\" )\n\t\t\t|| Utils.hasPropertyDefined( object, \"request\" );\n\t}\n\n}\n"],"sourceRoot":"/source/"}