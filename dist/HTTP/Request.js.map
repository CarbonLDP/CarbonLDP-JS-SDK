{"version":3,"sources":["HTTP/Request.ts"],"names":[],"mappings":"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","file":"Request.js","sourcesContent":["import HTTP, {\n\tClientRequest,\n\tIncomingMessage,\n\tRequestOptions,\n} from \"http\";\nimport HTTPS from \"https\";\nimport URL from \"url\";\n\nimport * as Utils from \"./../Utils\";\nimport { BadResponseError } from \"./Errors\";\nimport { Header } from \"./Header\";\nimport Method from \"./Method\";\nimport Parser from \"./Parser\";\nimport Response from \"./Response\";\n\nexport interface Options {\n\theaders?:Map<string, Header>;\n\tsendCredentialsOnCORS?:boolean;\n\ttimeout?:number;\n\trequest?:XMLHttpRequest;\n}\n\nexport interface GETOptions extends Options {\n\tensureLatest?:boolean;\n}\n\nexport interface RetrievalPreferences {\n\tinclude?:string[];\n\tomit?:string[];\n}\n\ninterface ResponseCallback {\n\t( response:Response ):void;\n}\n\nfunction forEachHeaders( headers:Map<string, Header>, setHeader:( name:string, value:string ) => any ):void {\n\tlet namesIterator:Iterator<string> = headers.keys();\n\tlet next:IteratorResult<string> = namesIterator.next();\n\twhile( ! next.done ) {\n\t\tlet name:string = next.value;\n\t\tlet value:Header = headers.get( name );\n\t\tsetHeader( name, value.toString() );\n\t\tnext = namesIterator.next();\n\t}\n}\n\nfunction onResolve( resolve:ResponseCallback, reject:ResponseCallback, response:Response ):void {\n\tif( response.status >= 200 && response.status <= 299 ) {\n\t\tresolve( response );\n\t} else {\n\t\treject( response );\n\t}\n}\n\nfunction sendWithBrowser( method:string, url:string, body:string | Blob, options:Options ):Promise<Response> {\n\treturn new Promise<Response>( ( resolve:ResponseCallback, reject:ResponseCallback ):void => {\n\t\tlet request:XMLHttpRequest = options.request ? options.request : new XMLHttpRequest();\n\t\trequest.open( method, url, true );\n\n\t\tif( options.headers ) forEachHeaders( options.headers, ( name:string, value:string ) => request.setRequestHeader( name, value ) );\n\t\trequest.withCredentials = options.sendCredentialsOnCORS;\n\t\tif( options.timeout ) request.timeout = options.timeout;\n\n\t\trequest.onload = request.onerror = () => {\n\t\t\tlet response:Response = new Response( request );\n\t\t\tonResolve( resolve, reject, response );\n\t\t};\n\n\t\tif( body ) {\n\t\t\trequest.send( body );\n\t\t} else {\n\t\t\trequest.send();\n\t\t}\n\t} );\n}\n\nfunction sendWithNode( method:string, url:string, body:string | Buffer, options:Options ):Promise<Response> {\n\treturn new Promise<Response>( ( resolve:ResponseCallback, reject:ResponseCallback ):void => {\n\t\tfunction returnResponse( request:ClientRequest, res:IncomingMessage ):void {\n\t\t\tlet rawData:Buffer[] = [];\n\n\t\t\tres.on( \"data\", ( chunk:string | Buffer ):void => {\n\t\t\t\tif( typeof chunk === \"string\" ) chunk = Buffer.from( <any>chunk, \"utf-8\" );\n\t\t\t\trawData.push( chunk );\n\t\t\t} ).on( \"end\", () => {\n\t\t\t\tlet data:string = Buffer.concat( rawData ).toString( \"utf8\" );\n\t\t\t\tlet response:Response = new Response( request, data, res );\n\n\t\t\t\tonResolve( resolve, reject, response );\n\t\t\t} );\n\t\t}\n\n\t\tlet numberOfRedirects:number = 0;\n\n\t\tfunction sendRequestWithRedirect( _url:string ):void {\n\t\t\tlet parsedURL:URL.Url = URL.parse( _url );\n\t\t\tlet Adapter:any = parsedURL.protocol === \"http:\" ? HTTP : HTTPS;\n\n\t\t\tlet requestOptions:RequestOptions = {\n\t\t\t\tprotocol: parsedURL.protocol,\n\t\t\t\thostname: parsedURL.hostname,\n\t\t\t\tport: parsedURL.port,\n\t\t\t\tpath: parsedURL.path,\n\t\t\t\tmethod: method,\n\t\t\t\theaders: {},\n\t\t\t};\n\t\t\tif( options.headers ) forEachHeaders( options.headers, ( name:string, value:string ) => requestOptions.headers[ name ] = value );\n\n\t\t\tlet request:ClientRequest = Adapter.request( requestOptions );\n\t\t\tif( options.timeout ) request.setTimeout( options.timeout );\n\t\t\trequest.on( \"response\", ( res:IncomingMessage ) => {\n\t\t\t\tif( res.statusCode >= 300 && res.statusCode <= 399 && \"location\" in res.headers ) {\n\t\t\t\t\tif( ++ numberOfRedirects < 10 ) return sendRequestWithRedirect( URL.resolve( _url, res.headers.location ) );\n\t\t\t\t}\n\n\t\t\t\treturnResponse( request, res );\n\t\t\t} );\n\n\t\t\trequest.on( \"error\", ( error ) => {\n\t\t\t\tlet response:Response = new Response( request, error.message );\n\t\t\t\tonResolve( resolve, reject, response );\n\t\t\t} );\n\t\t\trequest.end( body );\n\t\t}\n\n\t\tsendRequestWithRedirect( url );\n\n\t} );\n}\n\nfunction sendRequest( method:string, url:string, body:string | Blob | Buffer, options:Options ):Promise<Response> {\n\treturn typeof XMLHttpRequest !== \"undefined\" ?\n\t\tsendWithBrowser( method, url, <string | Blob> body, options ) :\n\t\tsendWithNode( method, url, <string | Buffer> body, options );\n}\n\nfunction isBody( data:string | Blob | Buffer ):boolean {\n\treturn Utils.isString( data )\n\t\t|| typeof Blob !== \"undefined\" && data instanceof Blob\n\t\t|| typeof Buffer !== \"undefined\" && data instanceof Buffer;\n}\n\nexport class Service {\n\tprivate static defaultOptions:Options = {\n\t\tsendCredentialsOnCORS: true,\n\t};\n\n\tstatic send( method:(Method | string), url:string, options?:Options ):Promise<Response>;\n\tstatic send( method:(Method | string), url:string, body:string | Blob | Buffer, options?:Options ):Promise<Response>;\n\tstatic send( method:(Method | string), url:string, body:string | Blob | Buffer, options?:Options ):Promise<Response>;\n\tstatic send<T>( method:(Method | string), url:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic send<T>( method:(Method | string), url:string, body:string | Blob | Buffer, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic send<T>( method:any, url:string, bodyOrOptions:any = Service.defaultOptions, optionsOrParser:any = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\tlet body:string | Blob | Buffer = null;\n\t\tlet options:Options = Utils.hasProperty( optionsOrParser, \"parse\" ) ? bodyOrOptions : optionsOrParser;\n\t\tparser = Utils.hasProperty( optionsOrParser, \"parse\" ) ? optionsOrParser : parser;\n\n\t\tif( isBody( bodyOrOptions ) ) {\n\t\t\tbody = bodyOrOptions;\n\t\t} else {\n\t\t\toptions = bodyOrOptions ? bodyOrOptions : options;\n\t\t}\n\n\t\toptions = Object.assign( {}, Service.defaultOptions, options );\n\n\t\tif( Utils.isNumber( method ) ) method = Method[ method ];\n\n\t\tconst requestPromise:Promise<Response> = sendRequest( method, url, body, options )\n\t\t\t.then( response => {\n\t\t\t\tif( method === \"GET\" && options.headers ) return this._handleGETResponse( url, options, response );\n\t\t\t\telse return response;\n\t\t\t} )\n\t\t;\n\n\t\tif( parser === null ) return requestPromise;\n\n\t\treturn requestPromise.then( ( response:Response ) => {\n\t\t\treturn parser.parse( response.data ).then( ( parsedBody:T ) => {\n\t\t\t\treturn [ parsedBody, response ];\n\t\t\t} );\n\t\t} );\n\t}\n\n\tstatic options( url:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.OPTIONS, url, options );\n\t}\n\n\tstatic head( url:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.HEAD, url, options );\n\t}\n\n\tstatic get( url:string, options?:Options ):Promise<Response>;\n\tstatic get<T>( url:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic get<T>( url:string, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.GET, url, null, options, parser );\n\t}\n\n\tstatic post( url:string, body:Buffer, options?:Options ):Promise<Response>;\n\tstatic post<T>( url:string, body:Buffer, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic post( url:string, body:Blob, options?:Options ):Promise<Response>;\n\tstatic post<T>( url:string, body:Blob, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic post( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic post<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic post<T>( url:string, bodyOrOptions:any = Service.defaultOptions, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.POST, url, bodyOrOptions, options, parser );\n\t}\n\n\tstatic put( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic put<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic put<T>( url:string, bodyOrOptions:any = Service.defaultOptions, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.PUT, url, bodyOrOptions, options, parser );\n\t}\n\n\tstatic patch( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic patch<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic patch<T>( url:string, bodyOrOptions:any = Service.defaultOptions, options:Options = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.PATCH, url, bodyOrOptions, options, parser );\n\t}\n\n\tstatic delete( url:string, options?:Options ):Promise<Response>;\n\tstatic delete( url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic delete<T>( url:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic delete<T>( url:string, body:string, options?:Options, parser?:Parser<T> ):Promise<[ T, Response ]>;\n\tstatic delete<T>( url:string, bodyOrOptions:any = Service.defaultOptions, optionsOrParser:any = Service.defaultOptions, parser:Parser<T> = null ):any {\n\t\treturn Service.send( Method.DELETE, url, bodyOrOptions, optionsOrParser, parser );\n\t}\n\n\t/**\n\t * GET requests can be affected by previously cached resources that were originally requested with a different Accept header. This method identifies that\n\t * and retries the request with headers that force browsers to ignore cache.\n\t */\n\tprivate static _handleGETResponse( url:string, requestOptions:Options, response:Response ):Promise<Response> {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tif( this._contentTypeIsAccepted( requestOptions, response ) ) return response;\n\n\t\t\t\tthis._setNoCacheHeaders( requestOptions );\n\n\t\t\t\tif( ! this._isChromiumAgent() ) this._setFalseETag( requestOptions );\n\n\t\t\t\treturn sendRequest( \"GET\", url, null, requestOptions )\n\t\t\t\t\t.then( noCachedResponse => {\n\t\t\t\t\t\tif( ! this._contentTypeIsAccepted( requestOptions, response ) ) {\n\t\t\t\t\t\t\tthrow new BadResponseError( \"The server responded with an unacceptable Content-Type\", response );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn noCachedResponse;\n\t\t\t\t\t} );\n\t\t\t} );\n\t}\n\n\tprivate static _contentTypeIsAccepted( requestOptions:Options, response:Response ):boolean {\n\t\tconst accepts:string[] = requestOptions.headers.has( \"accept\" ) ?\n\t\t\trequestOptions.headers.get( \"accept\" ).values :\n\t\t\t[]\n\t\t;\n\n\t\tconst contentType:Header = response.headers.has( \"content-type\" ) ?\n\t\t\tresponse.headers.get( \"content-type\" ) :\n\t\t\tnull\n\t\t;\n\t\treturn ! contentType || accepts.some( contentType.hasValue, contentType );\n\t}\n\n\tprivate static _setNoCacheHeaders( requestOptions:Options ):void {\n\t\trequestOptions.headers\n\t\t\t.set( \"pragma\", new Header( \"no-cache\" ) )\n\t\t\t.set( \"cache-control\", new Header( \"no-cache, max-age=0\" ) )\n\t\t;\n\t}\n\n\tprivate static _isChromiumAgent():boolean {\n\t\treturn typeof window !== \"undefined\" && ! window[ \"chrome\" ];\n\t}\n\n\tprivate static _setFalseETag( requestOptions:Options ):void {\n\t\trequestOptions.headers.set( \"if-none-match\", new Header() );\n\t}\n}\n\nexport class Util {\n\n\tstatic getHeader( headerName:string, requestOptions:Options, initialize:boolean = false ):Header {\n\t\theaderName = headerName.toLowerCase();\n\n\t\tif( initialize ) {\n\t\t\tlet headers:Map<string, Header> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header>();\n\t\t\tif( ! headers.has( headerName ) )\n\t\t\t\theaders.set( headerName, new Header() );\n\t\t}\n\n\t\tif( ! requestOptions.headers ) return undefined;\n\t\treturn requestOptions.headers.get( headerName );\n\t}\n\n\tstatic setAcceptHeader( accept:string, requestOptions:Options ):Options {\n\t\tlet headers:Map<string, Header> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header>();\n\t\theaders.set( \"accept\", new Header( accept ) );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setContentTypeHeader( contentType:string, requestOptions:Options ):Options {\n\t\tlet headers:Map<string, Header> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header>();\n\t\theaders.set( \"content-type\", new Header( contentType ) );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setIfMatchHeader( eTag:string, requestOptions:Options ):Options {\n\t\tif( ! eTag ) return;\n\n\t\tlet headers:Map<string, Header> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header>();\n\t\theaders.set( \"if-match\", new Header( eTag ) );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setIfNoneMatchHeader( eTag:string, requestOptions:Options ):Options {\n\t\tif( ! eTag ) return;\n\n\t\tlet headers:Map<string, Header> = requestOptions.headers ? requestOptions.headers : requestOptions.headers = new Map<string, Header>();\n\t\theaders.set( \"if-none-match\", new Header( eTag ) );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setPreferredInteractionModel( interactionModelURI:string, requestOptions:Options ):Options {\n\t\tlet prefer:Header = Util.getHeader( \"prefer\", requestOptions, true );\n\t\tprefer.values.push( interactionModelURI + \"; rel=interaction-model\" );\n\n\t\treturn requestOptions;\n\t}\n\n\tstatic setPreferredRetrieval( retrievalType:\"representation\" | \"minimal\", requestOptions:Options ):Options {\n\t\tconst prefer:Header = Util.getHeader( \"prefer\", requestOptions, true );\n\n\t\tprefer.values.push( `return=${ retrievalType }` );\n\t\treturn requestOptions;\n\t}\n\n\tstatic setRetrievalPreferences( preferences:RetrievalPreferences, requestOptions:Options, returnRepresentation:boolean = true ):Options {\n\t\tlet prefer:Header = Util.getHeader( \"prefer\", requestOptions, true );\n\t\tlet representation:string = returnRepresentation ? \"return=representation; \" : \"\";\n\n\t\tlet keys:string[] = [ \"include\", \"omit\" ];\n\t\tfor( let key of keys ) {\n\t\t\tif( key in preferences && preferences[ key ].length > 0 ) {\n\t\t\t\tprefer.values.push( `${ representation }${ key }=\"${ preferences[ key ].join( \" \" ) }\"` );\n\t\t\t}\n\t\t}\n\n\t\treturn requestOptions;\n\t}\n\n\tstatic setSlug( slug:string, requestOptions:Options ):Options {\n\t\tlet slugHeader:Header = Util.getHeader( \"slug\", requestOptions, true );\n\t\tslugHeader.values.push( slug );\n\n\t\treturn requestOptions;\n\t}\n\n\tstatic isOptions( object:Object ):object is Options {\n\t\treturn Utils.hasPropertyDefined( object, \"headers\" )\n\t\t\t|| Utils.hasPropertyDefined( object, \"sendCredentialsOnCORS\" )\n\t\t\t|| Utils.hasPropertyDefined( object, \"timeout\" )\n\t\t\t|| Utils.hasPropertyDefined( object, \"request\" );\n\t}\n\n\tstatic cloneOptions( options:Options ):Options {\n\t\tconst clone:Options = {\n\t\t\t...options,\n\t\t\theaders: new Map(),\n\t\t};\n\n\t\tif( options.headers ) options.headers\n\t\t\t.forEach( ( value, key ) => clone.headers.set( key, new Header( value.values.slice() ) ) );\n\n\t\treturn clone;\n\t}\n\n}\n"]}