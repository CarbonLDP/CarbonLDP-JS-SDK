{"version":3,"sources":["HTTP/Errors.ts"],"names":[],"mappings":"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","file":"Errors.js","sourcesContent":["import HTTPError from \"./Errors/HTTPError\";\n\nimport BadRequestError from \"./Errors/client/BadRequestError\";\nimport ConflictError from \"./Errors/client/ConflictError\";\nimport ForbiddenError from \"./Errors/client/ForbiddenError\";\nimport MethodNotAllowedError from \"./Errors/client/MethodNotAllowedError\";\nimport NotAcceptableError from \"./Errors/client/NotAcceptableError\";\nimport NotFoundError from \"./Errors/client/NotFoundError\";\nimport PreconditionFailedError from \"./Errors/client/PreconditionFailedError\";\nimport PreconditionRequiredError from \"./Errors/client/PreconditionRequiredError\";\nimport RequestEntityTooLargeError from \"./Errors/client/RequestEntityTooLargeError\";\nimport RequestHeaderFieldsTooLargeError from \"./Errors/client/RequestHeaderFieldsTooLargeError\";\nimport RequestURITooLongError from \"./Errors/client/RequestURITooLongError\";\nimport TooManyRequestsError from \"./Errors/client/TooManyRequestsError\";\nimport UnauthorizedError from \"./Errors/client/UnauthorizedError\";\nimport UnsupportedMediaTypeError from \"./Errors/client/UnsupportedMediaTypeError\";\n\nimport BadResponseError from \"./Errors/server/BadResponseError\";\nimport BadGatewayError from \"./Errors/server/BadGatewayError\";\nimport GatewayTimeoutError from \"./Errors/server/GatewayTimeoutError\";\nimport HTTPVersionNotSupportedError from \"./Errors/server/HTTPVersionNotSupportedError\";\nimport InternalServerErrorError from \"./Errors/server/InternalServerErrorError\";\nimport NotImplementedError from \"./Errors/server/NotImplementedError\";\nimport ServiceUnavailableError from \"./Errors/server/ServiceUnavailableError\";\n\nimport UnknownError from \"./Errors/UnknownError\";\n\n\nlet client:Array<typeof HTTPError> = [];\nclient.push( BadRequestError );\nclient.push( ConflictError );\nclient.push( ForbiddenError );\nclient.push( MethodNotAllowedError );\nclient.push( NotAcceptableError );\nclient.push( NotFoundError );\nclient.push( PreconditionFailedError );\nclient.push( PreconditionRequiredError );\nclient.push( RequestEntityTooLargeError );\nclient.push( RequestHeaderFieldsTooLargeError );\nclient.push( RequestURITooLongError );\nclient.push( TooManyRequestsError );\nclient.push( UnauthorizedError );\nclient.push( UnsupportedMediaTypeError );\n\nlet server:Array<typeof HTTPError> = [];\nserver.push( BadResponseError );\nserver.push( BadGatewayError );\nserver.push( GatewayTimeoutError );\nserver.push( HTTPVersionNotSupportedError );\nserver.push( InternalServerErrorError );\nserver.push( NotImplementedError );\nserver.push( ServiceUnavailableError );\n\nlet statusCodeMap:Map<number, typeof HTTPError> = new Map<number, typeof HTTPError>();\nfor( let i:number = 0, length:number = client.length; i < length; i ++ ) {\n\tstatusCodeMap.set( client[ i ].statusCode, client[ i ] );\n}\nfor( let i:number = 0, length:number = server.length; i < length; i ++ ) {\n\tstatusCodeMap.set( server[ i ].statusCode, server[ i ] );\n}\n\nexport {\n\tHTTPError as Error,\n\n\tBadRequestError,\n\tConflictError,\n\tForbiddenError,\n\tMethodNotAllowedError,\n\tNotAcceptableError,\n\tNotFoundError,\n\tPreconditionFailedError,\n\tPreconditionRequiredError,\n\tRequestEntityTooLargeError,\n\tRequestHeaderFieldsTooLargeError,\n\tRequestURITooLongError,\n\tTooManyRequestsError,\n\tUnauthorizedError,\n\tUnsupportedMediaTypeError,\n\n\tBadResponseError,\n\tBadGatewayError,\n\tGatewayTimeoutError,\n\tHTTPVersionNotSupportedError,\n\tInternalServerErrorError,\n\tNotImplementedError,\n\tServiceUnavailableError,\n\n\tUnknownError,\n\n\tclient,\n\tserver,\n\tstatusCodeMap\n};\n"]}