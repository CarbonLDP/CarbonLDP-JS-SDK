{"version":3,"sources":["HTTP/Response.ts"],"names":[],"mappings":";AAAA,IAAY,MAAM,WAAM,UAAU,CAAC,CAAA;AAEnC,sBAAiC,UAAU,CAAC,CAAA;AAE5C;IAQC,eAAa,OAAsC,EAAE,IAAY,EAAE,QAAkC;QAAlC,wBAAkC,GAAlC,WAAgC,EAAE;QACpG,EAAE,CAAA,CAAE,OAAO,cAAc,KAAK,WAAW,IAAI,OAAO,YAAY,cAAe,CAAC,CAAC,CAAC;YACjF,IAAI,GAAG,GAAkB,OAAO,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAE,GAAG,CAAC,qBAAqB,EAAE,CAAE,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAW,QAAQ,CAAC,OAAO,CAAE,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAEM,yBAAS,GAAhB,UAAkB,IAAW;QAC5B,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAE,IAAI,IAAI,CAAC;IACzC,CAAC;IAIO,0BAAU,GAAlB,UAAoB,OAAW;QAC9B,EAAE,CAAA,CAAE,gBAAQ,CAAE,OAAO,CAAG,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAwB,CAAC;YAC/C,EAAE,CAAA,CAAE,gBAAQ,CAAE,OAAO,CAAG,CAAC,CAAC,CAAC;gBAC1B,GAAG,CAAA,CAAc,UAAsB,EAAtB,KAAA,MAAM,CAAC,IAAI,CAAE,OAAO,CAAE,EAAtB,cAAsB,EAAtB,IAAuB,CAAC;oBAApC,IAAI,MAAI,SAAA;oBACZ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAE,MAAI,EAAE,IAAI,MAAM,CAAC,KAAK,CAAE,OAAO,CAAE,MAAI,CAAE,CAAE,CAAE,CAAC;iBAC9D;YACF,CAAC;QACF,CAAC;IACF,CAAC;IACF,YAAC;AAAD,CA1CA,AA0CC,IAAA;AA1CY,aAAK,QA0CjB,CAAA;AAED;IAAA;IAYA,CAAC;IAXO,YAAO,GAAd,UAAgB,QAAc;QAC7B,EAAE,CAAA,CAAE,CAAE,QAAQ,IAAI,CAAE,QAAQ,CAAC,OAAQ,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAEnD,IAAI,UAAU,GAAgB,QAAQ,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;QAE3D,EAAE,CAAA,CAAE,CAAE,UAAW,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAC/B,EAAE,CAAA,CAAE,CAAE,UAAU,CAAC,MAAM,CAAC,MAAO,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAC7C,EAAE,CAAA,CAAE,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAE,CAAC;YAAC,OAAO,CAAC,IAAI,CAAE,wDAAwD,EAAE,QAAQ,CAAE,CAAC;QAEtH,MAAM,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,QAAQ,EAAE,CAAC;IAC1C,CAAC;IACF,WAAC;AAAD,CAZA,AAYC,IAAA;AAZY,YAAI,OAYhB,CAAA;AAED;kBAAe,KAAK,CAAC","file":"HTTP/Response.js","sourcesContent":["import * as Header from \"./Header\";\nimport {ClientRequest, IncomingMessage} from \"http\";\nimport {isString, isObject} from \"../Utils\";\n\nexport class Class {\n\tstatus:number;\n\tdata:string;\n\theaders:Map<string, Header.Class>;\n\trequest:XMLHttpRequest | ClientRequest;\n\n\tconstructor( request:XMLHttpRequest );\n\tconstructor( request:ClientRequest, data:string, response?:IncomingMessage );\n\tconstructor( request:XMLHttpRequest | ClientRequest, data?:string, response:IncomingMessage = <any>{} ) {\n\t\tif( typeof XMLHttpRequest !== \"undefined\" && request instanceof XMLHttpRequest ) {\n\t\t\tlet res:XMLHttpRequest = request;\n\t\t\tthis.status = res.status;\n\t\t\tthis.data = res.responseText;\n\t\t\tthis.setHeaders( res.getAllResponseHeaders() );\n\t\t} else {\n\t\t\tthis.status = response.statusCode;\n\t\t\tthis.data = data || \"\";\n\t\t\tthis.setHeaders( <Object> response.headers );\n\t\t}\n\n\t\tthis.request = request;\n\t}\n\n\tpublic getHeader( name:string ):Header.Class {\n\t\tname = name.toLowerCase();\n\t\treturn this.headers.get( name ) || null;\n\t}\n\n\tprivate setHeaders( headersString:string ):void;\n\tprivate setHeaders( headerObject:Object ):void;\n\tprivate setHeaders( headers:any ):void {\n\t\tif( isString( headers ) ) {\n\t\t\tthis.headers = Header.Util.parseHeaders( headers );\n\t\t} else {\n\t\t\tthis.headers = new Map<string, Header.Class>();\n\t\t\tif( isObject( headers ) ) {\n\t\t\t\tfor( let name of Object.keys( headers ) ) {\n\t\t\t\t\tthis.headers.set( name, new Header.Class( headers[ name ] ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class Util {\n\tstatic getETag( response:Class ):string {\n\t\tif( ! response || ! response.headers ) return null;\n\n\t\tlet etagHeader:Header.Class = response.getHeader( \"ETag\" );\n\n\t\tif( ! etagHeader ) return null;\n\t\tif( ! etagHeader.values.length ) return null;\n\t\tif( etagHeader.values.length > 1 ) console.warn( \"The response contains more than one ETag. Response: %o\", response );\n\n\t\treturn etagHeader.values[ 0 ].toString();\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}