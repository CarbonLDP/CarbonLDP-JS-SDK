{"version":3,"sources":["HTTP/Errors/client/ForbiddenError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,4CAAuC;AAGvC,IAAM,IAAI,GAAU,gBAAgB,CAAC;AACrC,IAAM,UAAU,GAAU,GAAG,CAAC;AAE9B;IAAoC,kCAAS;IAK5C,wBAAa,OAAc,EAAE,QAAiB;QAA9C,YACC,kBAAO,OAAO,EAAE,QAAQ,CAAE,SAE1B;QADA,MAAM,CAAC,cAAc,CAAE,KAAI,EAAE,cAAc,CAAC,SAAS,CAAE,CAAC;;IACzD,CAAC;IAPD,sBAAW,4BAAU;aAArB,cAAiC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAErD,sBAAI,gCAAI;aAAR,cAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAMnC,qBAAC;AAAD,CATA,AASC,CATmC,mBAAS,GAS5C;AATY,wCAAc;AAW3B,kBAAe,cAAc,CAAC","file":"ForbiddenError.js","sourcesContent":["import HTTPError from \"./../HTTPError\";\nimport Response from \"./../../Response\";\n\nconst name:string = \"ForbiddenError\";\nconst statusCode:number = 403;\n\nexport class ForbiddenError extends HTTPError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n\n\tconstructor( message:string, response:Response ) {\n\t\tsuper( message, response );\n\t\tObject.setPrototypeOf( this, ForbiddenError.prototype );\n\t}\n}\n\nexport default ForbiddenError;\n"]}