{"version":3,"sources":["HTTP/Errors/client/UnauthorizedError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,4CAAuC;AAGvC,IAAM,IAAI,GAAU,mBAAmB,CAAC;AACxC,IAAM,UAAU,GAAU,GAAG,CAAC;AAE9B;IAAuC,qCAAS;IAK/C,2BAAa,OAAc,EAAE,QAAiB;QAA9C,YACC,kBAAO,OAAO,EAAE,QAAQ,CAAE,SAE1B;QADA,MAAM,CAAC,cAAc,CAAE,KAAI,EAAE,iBAAiB,CAAC,SAAS,CAAE,CAAC;;IAC5D,CAAC;IAPD,sBAAW,+BAAU;aAArB,cAAiC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAErD,sBAAI,mCAAI;aAAR,cAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAMnC,wBAAC;AAAD,CATA,AASC,CATsC,mBAAS,GAS/C;AATY,8CAAiB;AAW9B,kBAAe,iBAAiB,CAAC","file":"UnauthorizedError.js","sourcesContent":["import HTTPError from \"./../HTTPError\";\nimport Response from \"./../../Response\";\n\nconst name:string = \"UnauthorizedError\";\nconst statusCode:number = 401;\n\nexport class UnauthorizedError extends HTTPError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n\n\tconstructor( message:string, response:Response ) {\n\t\tsuper( message, response );\n\t\tObject.setPrototypeOf( this, UnauthorizedError.prototype );\n\t}\n}\n\nexport default UnauthorizedError;\n"]}