{"version":3,"sources":["HTTP/Errors/server/BadResponseError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,6DAAuC;AAGvC,IAAM,IAAI,GAAU,kBAAkB,CAAC;AACvC,IAAM,UAAU,GAAU,CAAC,CAAC;AAE5B;IAA2B,yBAAS;IAKnC,eAAa,OAAc,EAAE,QAAiB;QAA9C,YACC,kBAAO,OAAO,EAAE,QAAQ,CAAE,SAE1B;QADA,MAAM,CAAC,cAAc,CAAE,KAAI,EAAE,KAAK,CAAC,SAAS,CAAE,CAAC;;IAChD,CAAC;IAPD,sBAAW,mBAAU;aAArB,cAAiC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAErD,sBAAI,uBAAI;aAAR,cAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAMnC,YAAC;AAAD,CATA,AASC,CAT0B,mBAAS,GASnC;AATY,sBAAK;AAWlB,kBAAe,KAAK,CAAC","file":"BadResponseError.js","sourcesContent":["import HTTPError from \"./../HTTPError\";\nimport Response from \"./../../Response\";\n\nconst name:string = \"BadResponseError\";\nconst statusCode:number = 0;\n\nexport class Class extends HTTPError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n\n\tconstructor( message:string, response:Response ) {\n\t\tsuper( message, response );\n\t\tObject.setPrototypeOf( this, Class.prototype );\n\t}\n}\n\nexport default Class;\n"]}