{"version":3,"sources":["HTTP/Errors/server/InternalServerErrorError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,4CAAuC;AAGvC,IAAM,IAAI,GAAU,0BAA0B,CAAC;AAC/C,IAAM,UAAU,GAAU,GAAG,CAAC;AAE9B;IAAuC,4CAAS;IAK/C,kCAAa,OAAc,EAAE,QAAiB;QAA9C,YACC,kBAAO,OAAO,EAAE,QAAQ,CAAE,SAE1B;QADA,MAAM,CAAC,cAAc,CAAE,KAAI,EAAE,wBAAwB,CAAC,SAAS,CAAE,CAAC;;IACnE,CAAC;IAPD,sBAAW,sCAAU;aAArB,cAAiC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAErD,sBAAI,0CAAI;aAAR,cAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAMnC,+BAAC;AAAD,CATA,AASC,CATsC,mBAAS,GAS/C;AAED,kBAAe,wBAAwB,CAAC","file":"InternalServerErrorError.js","sourcesContent":["import HTTPError from \"./../HTTPError\";\nimport Response from \"./../../Response\";\n\nconst name:string = \"InternalServerErrorError\";\nconst statusCode:number = 500;\n\nclass InternalServerErrorError extends HTTPError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n\n\tconstructor( message:string, response:Response ) {\n\t\tsuper( message, response );\n\t\tObject.setPrototypeOf( this, InternalServerErrorError.prototype );\n\t}\n}\n\nexport default InternalServerErrorError;\n"]}