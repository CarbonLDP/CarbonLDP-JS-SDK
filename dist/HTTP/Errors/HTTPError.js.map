{"version":3,"sources":["HTTP/Errors/HTTPError.ts"],"names":[],"mappings":";;;;;;AAAA,8BAA0B,8BAA8B,CAAC,CAAA;AAIzD;IAAwB,6BAAa;IAQpC,mBAAa,OAAc,EAAE,QAAiB;QAC7C,kBAAO,OAAO,CAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAVD,sBAAW,uBAAU;aAArB,cAAiC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAE/C,sBAAI,2BAAI;aAAR,cAAoB,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;;;OAAA;IAS1C,gBAAC;AAAD,CAZA,AAYC,CAZuB,uBAAa,GAYpC;AAED;kBAAe,SAAS,CAAC","file":"HTTP/Errors/HTTPError.js","sourcesContent":["import AbstractError from \"./../../Errors/AbstractError\";\nimport Response from \"./../Response\";\nimport ErrorResponse from \"./../../LDP/ErrorResponse\";\n\nclass HTTPError extends AbstractError {\n\tstatic get statusCode():number { return null; }\n\n\tget name():string { return \"HTTPError\"; }\n\n\tresponse:Response;\n\terrorResponse:ErrorResponse;\n\n\tconstructor( message:string, response:Response ) {\n\t\tsuper( message );\n\t\tthis.response = response;\n\t}\n}\n\nexport default HTTPError;\n"],"sourceRoot":"/source/"}