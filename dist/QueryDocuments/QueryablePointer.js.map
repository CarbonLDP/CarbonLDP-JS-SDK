{"version":3,"sources":["QueryDocuments/QueryablePointer.ts"],"names":[],"mappings":";;AAAA,0DAAyD;AAKzD,qEAAoE;AAmBvD,QAAA,gBAAgB,GAA2B;IACvD,SAAS,EAAE;QACV,kBAAkB,EAAE,KAAK,CAAC;QAE1B,SAAS,EAAT;YACC,MAAM,CAAC,CAAE,CAAE,IAAI,CAAC,kBAAkB,CAAC;QACpC,CAAC;KACD;IAGD,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,+BAAc;aACnB,iBAAiB,CAAE,wBAAgB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC3D,CAAC;IAED,QAAQ,EAAR,UAA2C,MAAQ;QAClD,EAAE,CAAA,CAAE,wBAAgB,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAE3D,IAAM,MAAM,GAAyB,+BAAc;aACjD,gBAAgB,CAAE,MAAM,EAAE,qCAAiB,CAAE,CAAC;QAEhD,MAAM,CAAC,+BAAc;aACnB,oBAAoB,CAAE,wBAAgB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC9D,CAAC;IAGD,EAAE,EAAF,UAAI,KAAS;QACZ,MAAM,CAAC,qCAAiB,CAAC,EAAE,CAAE,KAAK,CAAE;eAChC,wBAAgB,CAAC,WAAW,CAAE,KAAK,CAAE,CACvC;IACH,CAAC;CACD,CAAC","file":"QueryablePointer.js","sourcesContent":["import { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\nimport { ModelTypeGuard } from \"../Model/ModelTypeGuard\";\n\nimport { BaseResolvablePointer } from \"../Repository/BaseResolvablePointer\";\nimport { ResolvablePointer } from \"../Repository/ResolvablePointer\";\n\nimport { QueryableMetadata } from \"./QueryableMetadata\";\n\n\nexport interface QueryablePointer extends ResolvablePointer {\n\t_queryableMetadata:QueryableMetadata | undefined;\n\n\n\tisQueried():boolean;\n}\n\n\nexport type QueryablePointerFactory =\n\t& ModelPrototype<QueryablePointer, ResolvablePointer>\n\t& ModelDecorator<QueryablePointer, BaseResolvablePointer>\n\t& ModelTypeGuard<QueryablePointer>\n\t;\n\nexport const QueryablePointer:QueryablePointerFactory = {\n\tPROTOTYPE: {\n\t\t_queryableMetadata: void 0,\n\n\t\tisQueried( this:QueryablePointer ):boolean {\n\t\t\treturn ! ! this._queryableMetadata;\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is QueryablePointer {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( QueryablePointer.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseResolvablePointer>( object:T ):T & QueryablePointer {\n\t\tif( QueryablePointer.isDecorated( object ) ) return object;\n\n\t\tconst target:T & ResolvablePointer = ModelDecorator\n\t\t\t.decorateMultiple( object, ResolvablePointer );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( QueryablePointer.PROTOTYPE, target );\n\t},\n\n\n\tis( value:any ):value is QueryablePointer {\n\t\treturn ResolvablePointer.is( value )\n\t\t\t&& QueryablePointer.isDecorated( value )\n\t\t\t;\n\t},\n};\n"]}