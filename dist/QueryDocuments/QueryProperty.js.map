{"version":3,"sources":["QueryDocuments/QueryProperty.ts"],"names":[],"mappings":"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","file":"QueryProperty.js","sourcesContent":["import { OptionalToken, PatternToken, SubjectToken } from \"sparqler/tokens\";\n\nimport { DigestedObjectSchema } from \"../ObjectSchema/DigestedObjectSchema\";\n\nimport { QueryContext } from \"./QueryContext\";\nimport { QueryDocumentBuilder } from \"./QueryDocumentBuilder\";\nimport { QueryVariable } from \"./QueryVariable\";\nimport { _createAllPattern, _createGraphPattern, _createTypesPattern } from \"./Utils\";\n\n\nexport enum QueryPropertyType {\n\tFULL,\n\tPARTIAL,\n\tALL,\n\tEMPTY,\n}\n\nexport class QueryProperty {\n\treadonly name:string;\n\treadonly variable:QueryVariable;\n\n\t_builder:QueryDocumentBuilder;\n\n\tprivate _context:QueryContext;\n\n\tprivate _optional:boolean;\n\tprivate _type?:QueryPropertyType;\n\n\tprivate _patterns:PatternToken[];\n\tprivate _schema:DigestedObjectSchema;\n\n\tconstructor( context:QueryContext, name:string ) {\n\t\tthis.name = name;\n\t\tthis.variable = context.getVariable( name );\n\n\t\tthis._optional = true;\n\n\t\tthis._context = context;\n\t\tthis._patterns = [];\n\t}\n\n\taddPattern( ...patterns:PatternToken[] ):this {\n\t\tthis._patterns.push( ...patterns );\n\t\treturn this;\n\t}\n\n\tgetPatterns():PatternToken[] {\n\t\tconst patterns:PatternToken[] = this._patterns.slice();\n\n\t\tconst fn:FunctionPattern = getFunctionPattern( this.getType() );\n\t\tif( fn ) {\n\t\t\tconst index:number = patterns.findIndex( pattern => pattern === void 0 );\n\t\t\tpatterns[ index ] = fn( this._context, this.name );\n\t\t}\n\n\t\tif( ! this._optional ) return patterns;\n\n\t\treturn [ new OptionalToken()\n\t\t\t.addPattern( ...patterns ),\n\t\t];\n\t}\n\n\tgetSchema():DigestedObjectSchema {\n\t\tif( this._schema ) return this._schema;\n\t\treturn this._schema = new DigestedObjectSchema();\n\t}\n\n\tisOptional():boolean {\n\t\treturn this._optional;\n\t}\n\n\tsetOptional( optional:boolean ):this {\n\t\tthis._optional = optional;\n\t\treturn this;\n\t}\n\n\tgetType():QueryPropertyType {\n\t\treturn this._type;\n\t}\n\n\tsetType( type:QueryPropertyType ):this {\n\t\tif( this._type === void 0 ) this._patterns.push( void 0 );\n\t\tthis._type = type;\n\n\t\treturn this;\n\t}\n\n\tgetTriple():SubjectToken {\n\t\treturn this._patterns\n\t\t\t.find( pattern => pattern instanceof SubjectToken ) as SubjectToken;\n\t}\n\n\ttoString():string {\n\t\treturn `${ this.variable }`;\n\t}\n}\n\ntype FunctionPattern = ( context:QueryContext, resourcePath:string ) => PatternToken;\n\nfunction getFunctionPattern( type:QueryPropertyType | undefined ):null | FunctionPattern {\n\tswitch( type ) {\n\t\tcase QueryPropertyType.ALL:\n\t\t\treturn _createAllPattern;\n\n\t\tcase QueryPropertyType.FULL:\n\t\t\treturn _createGraphPattern;\n\n\t\tcase QueryPropertyType.EMPTY:\n\t\tcase QueryPropertyType.PARTIAL:\n\t\t\treturn _createTypesPattern;\n\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n"]}