{"version":3,"sources":["QueryDocuments/Utils.ts"],"names":[],"mappings":"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","file":"Utils.js","sourcesContent":["import {\n\tFilterToken,\n\tGraphToken,\n\tIRIToken,\n\tOptionalToken,\n\tPatternToken,\n\tPredicateToken,\n\tPrefixedNameToken,\n\tSubjectToken,\n\tVariableToken\n} from \"sparqler/tokens\";\n\nimport { DigestedObjectSchemaProperty } from \"../ObjectSchema/DigestedObjectSchemaProperty\";\nimport { isObject } from \"../Utils\";\n\nimport { QueryContext } from \"./QueryContext\";\n\n\nexport function _getLevelRegExp( property:string ):RegExp {\n\tif( property ) property += \".\";\n\tconst parsedName:string = property.replace( /\\./g, \"\\\\.\" );\n\n\treturn new RegExp( `^${ parsedName }[^.]+$` );\n}\n\n\nexport function _createPropertyPatterns( context:QueryContext, resourcePath:string, propertyPath:string, propertyDefinition:DigestedObjectSchemaProperty ):PatternToken[] {\n\tconst { uri, literalType, pointerType } = propertyDefinition;\n\n\tconst propertyIRI:IRIToken | PrefixedNameToken = context.compactIRI( uri );\n\n\tconst resource:VariableToken = context.getVariable( resourcePath );\n\tconst propertyObject:VariableToken = context.getVariable( propertyPath );\n\n\tconst propertyPatterns:PatternToken[] = [ new SubjectToken( resource )\n\t\t.addPredicate( new PredicateToken( propertyIRI )\n\t\t\t.addObject( propertyObject ) ),\n\t];\n\n\tif( literalType !== null ) propertyPatterns\n\t\t.push( new FilterToken( `datatype( ${ propertyObject } ) = ${ context.compactIRI( literalType ) }` ) );\n\tif( pointerType !== null ) propertyPatterns\n\t\t.push( new FilterToken( `! isLiteral( ${ propertyObject } )` ) );\n\n\treturn propertyPatterns;\n}\n\nexport function _createTypesPattern( context:QueryContext, resourcePath:string ):PatternToken {\n\treturn new OptionalToken()\n\t\t.addPattern( new SubjectToken( context.getVariable( resourcePath ) )\n\t\t\t.addPredicate( new PredicateToken( \"a\" )\n\t\t\t\t.addObject( context.getVariable( `${ resourcePath }.types` ) )\n\t\t\t)\n\t\t);\n}\n\nexport function _createGraphPattern( context:QueryContext, resourcePath:string ):PatternToken {\n\treturn new GraphToken( context.getVariable( resourcePath ) )\n\t\t.addPattern( new SubjectToken( context.getVariable( `${ resourcePath }._subject` ) )\n\t\t\t.addPredicate( new PredicateToken( context.getVariable( `${ resourcePath }._predicate` ) )\n\t\t\t\t.addObject( context.getVariable( `${ resourcePath }._object` ) ) )\n\t\t)\n\t\t;\n}\n\nexport function _createAllPattern( context:QueryContext, resourcePath:string ):PatternToken {\n\treturn new SubjectToken( context.getVariable( resourcePath ) )\n\t\t.addPredicate( new PredicateToken( context.getVariable( `${ resourcePath }._predicate` ) )\n\t\t\t.addObject( context.getVariable( `${ resourcePath }._object` ) )\n\t\t)\n\t\t;\n}\n\n\nexport function _getParentPath( path:string ):string {\n\treturn path\n\t\t.split( \".\" )\n\t\t.slice( 0, - 1 )\n\t\t.join( \".\" )\n\t\t;\n}\n\n\nexport function _getAllTriples( patterns:PatternToken[] ):SubjectToken[] {\n\tconst subjectsMap:Map<string, SubjectToken> = new Map();\n\t__internalTripleAdder( subjectsMap, patterns );\n\n\treturn Array.from( subjectsMap.values() );\n}\n\nfunction __isFullTriple( triple:SubjectToken ):boolean {\n\treturn triple\n\t\t.predicates\n\t\t.map( x => x.predicate )\n\t\t.some( x => isObject( x ) && x.token === \"variable\" )\n\t\t;\n}\n\nfunction __internalTripleAdder( subjectsMap:Map<string, SubjectToken>, patterns:PatternToken[] ):void {\n\tpatterns.forEach( ( pattern:PatternToken ) => {\n\t\tif( pattern.token === \"optional\" || pattern.token === \"graph\" )\n\t\t\treturn __internalTripleAdder( subjectsMap, pattern.patterns );\n\n\t\tif( pattern.token !== \"subject\" ) return;\n\n\t\tconst valid:boolean = pattern.predicates\n\t\t\t.map( predicate => predicate.objects )\n\t\t\t.some( objects => objects.some( object => object.token === \"variable\" ) );\n\t\tif( ! valid ) return;\n\n\t\tconst subject:SubjectToken = __getSubject( subjectsMap, pattern );\n\t\tif( __isFullTriple( subject ) ) return;\n\n\t\tif( __isFullTriple( pattern ) ) subject.predicates.length = 0;\n\t\tsubject.predicates.push( ...pattern.predicates );\n\t} );\n}\n\nfunction __getSubject( subjectsMap:Map<string, SubjectToken>, original:SubjectToken ):SubjectToken {\n\tconst subjectStr:string = original.subject.toString();\n\tif( subjectsMap.has( subjectStr ) ) return subjectsMap.get( subjectStr );\n\n\tconst subject:SubjectToken = new SubjectToken( original.subject );\n\tsubjectsMap.set( subjectStr, subject );\n\n\treturn subject;\n}\n\n\nexport function _getPathProperty( element:any, path:string ):any {\n\tif( element === void 0 || ! path ) return element;\n\n\tconst [ propName, ...restParts ] = path.split( \".\" );\n\n\tconst property:any = element[ propName ];\n\tconst restPath:string = restParts.join( \".\" );\n\n\treturn _getPathProperty( property, restPath );\n}\n\nexport function _areDifferentType( a:any, b:any ):boolean {\n\tif( typeof a !== typeof b ) return true;\n\tif( typeof a === \"object\" ) return a instanceof Date !== b instanceof Date;\n\n\treturn false;\n}\n"]}