{"version":3,"sources":["Resource/TransientResource.ts"],"names":[],"mappings":";;;;;;;;;AAAA,sCAAqC;AACrC,8CAAkC;AA6BlC,2BAA2D,IAAW;IACrE,EAAE,CAAA,CAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,KAAK,CAAE,CAAE,CAAC;QAAC,MAAM,CAAC;IAEhD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;AACzB,CAAC;AAJD,8CAIC;AAED,2BAA2D,IAAW;IACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,KAAK,CAAE,CAAC,CAAC;AAC3C,CAAC;AAFD,8CAEC;AAED,8BAA8D,IAAW;IACxE,IAAM,KAAK,GAAU,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;IAChD,EAAE,CAAA,CAAE,KAAK,KAAK,CAAE,CAAE,CAAC;QAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;AACnD,CAAC;AAHD,oDAGC;AAEY,QAAA,iBAAiB,GAA4B;IACzD,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,CACN,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,OAAO,CAAE;eAExC,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,SAAS,CAAE;eACtC,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,SAAS,CAAE;eACtC,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,YAAY,CAAE,CAC5C,CAAC;IACH,CAAC;IAED,EAAE,EAAF,UAAI,KAAS;QACZ,MAAM,CAAC,iBAAO,CAAC,EAAE,CAAE,KAAK,CAAE;eACtB,yBAAiB,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC;IAC5C,CAAC;IAED,MAAM,EAAN,UAA0B,IAAsB;QAC/C,IAAM,KAAK,GAAK,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QAC1C,MAAM,CAAC,yBAAiB,CAAC,UAAU,CAAK,KAAK,CAAE,CAAC;IACjD,CAAC;IAED,UAAU,EAAV,UAA8B,MAAuB;QACpD,MAAM,CAAC,yBAAiB,CAAC,QAAQ,CAAK,MAAM,CAAE,CAAC;IAChD,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ;QACnC,EAAE,CAAA,CAAE,yBAAiB,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAE5D,IAAM,QAAQ,GAAyB,MAA+B,CAAC;QACvE,iBAAO,CAAC,QAAQ,CAAK,QAAQ,CAAE,CAAC;QAEhC,MAAM,CAAC,gBAAgB,CAAE,QAAQ,EAAE;YAClC,OAAO,EAAE;gBACR,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,EAAE;aAC3B;YAED,SAAS,EAAE;gBACV,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,iBAAiB;aACxB;YACD,SAAS,EAAE;gBACV,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,iBAAiB;aACxB;YACD,YAAY,EAAE;gBACb,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,oBAAoB;aAC3B;SACD,CAAE,CAAC;QAEJ,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;CACD,CAAC","file":"TransientResource.js","sourcesContent":["import { Pointer } from \"../Pointer\";\nimport * as Utils from \"../Utils\";\nimport { BaseResource } from \"./BaseResource\";\n\n\nexport interface TransientResource extends Pointer {\n\ttypes:string[];\n\n\n\taddType( type:string ):void;\n\n\thasType( type:string ):boolean;\n\n\tremoveType( type:string ):void;\n}\n\nexport interface TransientResourceFactory {\n\tisDecorated( object:object ):object is TransientResource;\n\n\tis( value:any ):value is TransientResource;\n\n\n\tcreate<T extends object>( data?:T & BaseResource ):T & TransientResource;\n\n\tcreateFrom<T extends object>( object:T & BaseResource ):T & TransientResource;\n\n\tdecorate<T extends object>( object:T ):T & TransientResource;\n}\n\n\nexport function addTypeInResource( this:TransientResource, type:string ):void {\n\tif( this.types.indexOf( type ) !== - 1 ) return;\n\n\tthis.types.push( type );\n}\n\nexport function hasTypeInResource( this:TransientResource, type:string ):boolean {\n\treturn this.types.indexOf( type ) !== - 1;\n}\n\nexport function removeTypeInResource( this:TransientResource, type:string ):void {\n\tconst index:number = this.types.indexOf( type );\n\tif( index !== - 1 ) this.types.splice( index, 1 );\n}\n\nexport const TransientResource:TransientResourceFactory = {\n\tisDecorated( object:object ):object is TransientResource {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( object, \"types\" )\n\n\t\t\t&& Utils.hasFunction( object, \"addType\" )\n\t\t\t&& Utils.hasFunction( object, \"hasType\" )\n\t\t\t&& Utils.hasFunction( object, \"removeType\" )\n\t\t);\n\t},\n\n\tis( value:any ):value is TransientResource {\n\t\treturn Pointer.is( value )\n\t\t\t&& TransientResource.isDecorated( value );\n\t},\n\n\tcreate<T extends object>( data?:T & BaseResource ):T & TransientResource {\n\t\tconst clone:T = Object.assign( {}, data );\n\t\treturn TransientResource.createFrom<T>( clone );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseResource ):T & TransientResource {\n\t\treturn TransientResource.decorate<T>( object );\n\t},\n\n\tdecorate<T extends object>( object:T ):T & TransientResource {\n\t\tif( TransientResource.isDecorated( object ) ) return object;\n\n\t\tconst resource:T & TransientResource = object as T & TransientResource;\n\t\tPointer.decorate<T>( resource );\n\n\t\tObject.defineProperties( resource, {\n\t\t\t\"types\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: resource.types || [],\n\t\t\t},\n\n\t\t\t\"addType\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: addTypeInResource,\n\t\t\t},\n\t\t\t\"hasType\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: hasTypeInResource,\n\t\t\t},\n\t\t\t\"removeType\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: removeTypeInResource,\n\t\t\t},\n\t\t} );\n\n\t\treturn resource;\n\t},\n};\n"]}