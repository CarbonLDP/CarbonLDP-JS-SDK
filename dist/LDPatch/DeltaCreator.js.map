{"version":3,"sources":["LDPatch/DeltaCreator.ts"],"names":[],"mappings":"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","file":"DeltaCreator.js","sourcesContent":["import { isBNodeLabel, isRelative } from \"sparqler/iri\";\n\nimport {\n\tBlankNodeToken,\n\tCollectionToken,\n\tIRIToken,\n\tLiteralToken,\n\tObjectToken,\n\tPredicateToken,\n\tPrefixedNameToken,\n\tSubjectToken\n} from \"sparqler/tokens\";\nimport { Converter } from \"../JSONLD\";\nimport { XSD } from \"../NS\";\nimport { ContainerType, DigestedObjectSchema, DigestedPropertyDefinition } from \"../ObjectSchema\";\nimport * as Pointer from \"../Pointer\";\nimport { URI } from \"../RDF\";\nimport * as Resource from \"../Resource\";\nimport { isBoolean, isDate, isFunction, isNumber, isString } from \"../Utils\";\n\nimport {\n\tAddToken,\n\tDeleteToken,\n\tLDPatchToken,\n\tPrefixToken,\n\tSliceToken,\n\tUpdateListToken\n} from \"./Tokens\";\n\ninterface ArrayDelta {\n\ttoAdd:ObjectToken[];\n\ttoDelete:ObjectToken[];\n}\n\ninterface UpdateDelta {\n\tslice:[ number, number ];\n\tobjects:ObjectToken[];\n}\n\nexport class Class {\n\n\tprivate prefixesMap:Map<string, PrefixToken>;\n\tprivate jsonldConverter:Converter.Class;\n\n\tprivate addToken:AddToken;\n\tprivate deleteToken:DeleteToken;\n\tprivate updateLists:UpdateListToken[];\n\n\tconstructor( jsonldConverter:Converter.Class ) {\n\t\tthis.prefixesMap = new Map();\n\t\tthis.jsonldConverter = jsonldConverter;\n\n\t\tthis.addToken = new AddToken();\n\t\tthis.deleteToken = new DeleteToken();\n\t\tthis.updateLists = [];\n\t}\n\n\tgetPatch():string {\n\t\tconst patch:LDPatchToken = new LDPatchToken();\n\n\t\tthis.prefixesMap.forEach( prefix => patch.prologues.push( prefix ) );\n\n\t\tpatch.statements.push( ...this.updateLists );\n\t\tif( this.addToken.triples.length ) patch.statements.push( this.addToken );\n\t\tif( this.deleteToken.triples.length ) patch.statements.push( this.deleteToken );\n\n\t\treturn `${ patch }`;\n\t}\n\n\taddResource( schema:DigestedObjectSchema, oldResource:Resource.Class, newResource:Resource.Class ):void {\n\t\tconst id:string = newResource.id;\n\t\tconst resource:IRIToken | PrefixedNameToken | BlankNodeToken = isBNodeLabel( id ) ?\n\t\t\tnew BlankNodeToken( id ) : this.compactIRI( schema, id );\n\n\t\tconst addTriples:SubjectToken = new SubjectToken( resource );\n\t\tconst deleteTriples:SubjectToken = new SubjectToken( resource );\n\n\t\tnew Set( [\n\t\t\t...Object.keys( oldResource ),\n\t\t\t...Object.keys( newResource ),\n\t\t] ).forEach( propertyName => {\n\t\t\tconst predicateURI:IRIToken | PrefixedNameToken = this.getPropertyIRI( schema, propertyName );\n\n\t\t\tconst definition:DigestedPropertyDefinition = schema.properties.get( propertyName );\n\t\t\tconst oldValue:any = oldResource[ propertyName ];\n\t\t\tconst newValue:any = newResource[ propertyName ];\n\n\t\t\tif( definition && definition.containerType === ContainerType.LIST && isValidValue( oldValue ) ) {\n\t\t\t\tif( ! isValidValue( newValue ) ) {\n\t\t\t\t\tthis.updateLists.push( new UpdateListToken(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tpredicateURI,\n\t\t\t\t\t\tnew SliceToken( 0 ),\n\t\t\t\t\t\tnew CollectionToken()\n\t\t\t\t\t) );\n\n\t\t\t\t\tdeleteTriples.addPredicate( new PredicateToken( predicateURI )\n\t\t\t\t\t\t.addObject( new CollectionToken() )\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst tempDefinition:DigestedPropertyDefinition = {\n\t\t\t\t\t...definition,\n\t\t\t\t\tcontainerType: ContainerType.SET,\n\t\t\t\t};\n\n\t\t\t\tconst oldObjects:ObjectToken[] = this.getObjects( oldValue, schema, tempDefinition );\n\t\t\t\tconst newObjects:ObjectToken[] = this.getObjects( newValue, schema, tempDefinition );\n\n\t\t\t\tgetListDelta( oldObjects, newObjects ).forEach( updateDelta => {\n\t\t\t\t\tconst collection:CollectionToken = new CollectionToken();\n\t\t\t\t\tupdateDelta.objects.forEach( collection.addObject, collection );\n\n\t\t\t\t\tthis.updateLists.push( new UpdateListToken(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tpredicateURI,\n\t\t\t\t\t\tupdateDelta.objects.length ?\n\t\t\t\t\t\t\tnew SliceToken( updateDelta.slice[ 0 ], updateDelta.slice[ 0 ] ) :\n\t\t\t\t\t\t\tnew SliceToken( ...updateDelta.slice ),\n\t\t\t\t\t\tcollection\n\t\t\t\t\t) );\n\t\t\t\t} );\n\n\t\t\t} else {\n\t\t\t\tconst oldObjects:ObjectToken[] = this.getObjects( oldValue, schema, definition );\n\t\t\t\tconst newObjects:ObjectToken[] = this.getObjects( newValue, schema, definition );\n\n\t\t\t\tconst setDelta:ArrayDelta = getArrayDelta( oldObjects, newObjects );\n\n\t\t\t\tconst addValues:( objects:ObjectToken[], triple:SubjectToken ) => void = ( objects, triple ) => {\n\t\t\t\t\tif( ! objects.length ) return;\n\n\t\t\t\t\tconst predicate:PredicateToken = new PredicateToken( predicateURI );\n\t\t\t\t\tobjects.forEach( predicate.addObject, predicate );\n\n\t\t\t\t\ttriple.addPredicate( predicate );\n\t\t\t\t};\n\n\t\t\t\taddValues( setDelta.toAdd, addTriples );\n\t\t\t\taddValues( setDelta.toDelete, deleteTriples );\n\t\t\t}\n\t\t} );\n\n\t\tif( addTriples.predicates.length ) this.addToken.triples.push( addTriples );\n\t\tif( deleteTriples.predicates.length ) this.deleteToken.triples.push( deleteTriples );\n\t}\n\n\tprivate getPropertyIRI( schema:DigestedObjectSchema, propertyName:string ):IRIToken | PrefixedNameToken {\n\t\tconst uri:string = schema.properties.has( propertyName ) ?\n\t\t\tschema.properties.get( propertyName ).uri.stringValue :\n\t\t\tpropertyName;\n\n\t\treturn this.compactIRI( schema, uri );\n\t}\n\n\tprivate getObjects( value:any, schema:DigestedObjectSchema, definition?:DigestedPropertyDefinition ):ObjectToken[] {\n\t\tconst values:any[] = ( Array.isArray( value ) ?\n\t\t\t\t! definition || definition.containerType !== null ? value : value.slice( 0, 1 ) :\n\t\t\t\t[ value ]\n\t\t).filter( isValidValue );\n\n\t\tif( definition && definition.containerType === ContainerType.LIST ) {\n\t\t\tif( ! isValidValue( value ) ) return [];\n\n\t\t\tconst collection:CollectionToken = new CollectionToken();\n\t\t\tcollection.objects.push( ...this.expandValues( values, schema, definition ) );\n\n\t\t\treturn [ collection ];\n\t\t}\n\n\t\tif( definition && definition.containerType === ContainerType.LANGUAGE ) {\n\t\t\treturn this.expandLanguageMap( values, schema );\n\t\t}\n\n\t\treturn this.expandValues( values, schema, definition );\n\t}\n\n\tprivate expandValues( values:any[], schema:DigestedObjectSchema, definition?:DigestedPropertyDefinition ):ObjectToken[] {\n\t\tconst areDefinedLiteral:boolean = definition && definition.literal !== null ? definition.literal : null;\n\t\treturn values.map( value => {\n\t\t\tconst isLiteral:boolean = areDefinedLiteral !== null ? areDefinedLiteral : ! Pointer.Factory.is( value );\n\n\t\t\tif( isLiteral ) return this.expandLiteral( value, schema, definition );\n\t\t\treturn this.expandPointer( value, schema );\n\t\t} ).filter( isValidValue );\n\t}\n\n\tprivate expandLanguageMap( values:any[], schema:DigestedObjectSchema ):ObjectToken[] {\n\t\tif( ! values.length ) return [];\n\t\tconst languageMap:object = values[ 0 ];\n\n\t\treturn Object.keys( languageMap ).map( key => {\n\t\t\tconst value:any = languageMap[ key ];\n\n\t\t\tconst tempDefinition:DigestedPropertyDefinition = new DigestedPropertyDefinition();\n\t\t\ttempDefinition.language = key;\n\t\t\ttempDefinition.literalType = new URI.Class( XSD.DataType.string );\n\n\t\t\treturn this.expandLiteral( value, schema, tempDefinition );\n\t\t} ).filter( isValidValue );\n\t}\n\n\tprivate expandPointer( value:any, schema:DigestedObjectSchema ):IRIToken | PrefixedNameToken | BlankNodeToken {\n\t\tlet id:string = Pointer.Factory.is( value ) ? value.id : value;\n\t\tif( ! isString( id ) ) return null;\n\n\t\treturn isBNodeLabel( id ) ?\n\t\t\tnew BlankNodeToken( id ) :\n\t\t\tthis.compactIRI( schema, id );\n\t}\n\n\tprivate expandLiteral( value:any, schema:DigestedObjectSchema, definition?:DigestedPropertyDefinition ):LiteralToken {\n\t\tconst type:string = definition && definition.literalType ?\n\t\t\tdefinition.literalType.stringValue :\n\t\t\tguessType( value );\n\n\t\tif( ! this.jsonldConverter.literalSerializers.has( type ) ) return null;\n\n\t\tvalue = this.jsonldConverter.literalSerializers.get( type ).serialize( value );\n\t\tconst literal:LiteralToken = new LiteralToken( value );\n\n\t\tif( type !== XSD.DataType.string ) literal.setType( this.compactIRI( schema, type ) );\n\t\tif( definition && definition.language !== void 0 ) literal.setLanguage( definition.language );\n\n\t\treturn literal;\n\t}\n\n\tprivate compactIRI( schema:DigestedObjectSchema, iri:string ):IRIToken | PrefixedNameToken {\n\t\tif( isRelative( iri ) && schema.vocab ) iri = schema.vocab + iri;\n\n\t\t// noinspection JSMismatchedCollectionQueryUpdate\n\t\tconst matchPrefix:[ string, URI.Class ] = Array.from( schema.prefixes.entries() )\n\t\t\t.find( ( [ , prefixURI ] ) => iri.startsWith( prefixURI.stringValue ) );\n\n\t\tif( matchPrefix === void 0 ) return new IRIToken( iri );\n\n\t\tconst [ namespace, { stringValue: prefixIRI } ] = matchPrefix;\n\t\tif( ! this.prefixesMap.has( namespace ) )\n\t\t\tthis.prefixesMap.set( namespace, new PrefixToken( namespace, new IRIToken( prefixIRI ) ) );\n\n\t\treturn new PrefixedNameToken( namespace, iri.substr( prefixIRI.length ) );\n\t}\n\n}\n\nfunction guessType( value:any ):string {\n\tif( isFunction( value ) )\n\t\treturn null;\n\n\tif( isString( value ) )\n\t\treturn XSD.DataType.string;\n\tif( isDate( value ) )\n\t\treturn XSD.DataType.dateTime;\n\tif( isNumber( value ) )\n\t\treturn XSD.DataType.float;\n\tif( isBoolean( value ) )\n\t\treturn XSD.DataType.boolean;\n\n\treturn null;\n}\n\nfunction getArrayDelta( oldValues:ObjectToken[], newValues:ObjectToken[] ):ArrayDelta {\n\tconst objectMapper:( object:ObjectToken ) => [ string, ObjectToken ] = object => [ `${ object }`, object ];\n\tconst toAdd:Map<string, ObjectToken> = new Map( newValues.map( objectMapper ) );\n\tconst toDelete:Map<string, ObjectToken> = new Map( oldValues.map( objectMapper ) );\n\n\ttoAdd.forEach( ( value, identifier ) => {\n\t\tif( ! toDelete.has( identifier ) ) return;\n\n\t\ttoDelete.delete( identifier );\n\t\ttoAdd.delete( identifier );\n\t} );\n\n\treturn {\n\t\ttoAdd: Array.from( toAdd.values() ),\n\t\ttoDelete: Array.from( toDelete.values() ),\n\t};\n}\n\nfunction getListDelta( oldValues:ObjectToken[], newValues:ObjectToken[] ):UpdateDelta[] {\n\tinterface Node {\n\t\tidentifier:string;\n\t\tobject:ObjectToken;\n\t\tindex:number;\n\t}\n\n\tconst nodeMapper:( object:ObjectToken, index:number ) => Node = ( object, index ) => ( {\n\t\tidentifier: `${ object }`,\n\t\tobject,\n\t\tindex,\n\t} );\n\tconst oldPositions:Node[] = oldValues.map( nodeMapper );\n\tconst newPositions:Node[] = newValues.map( nodeMapper );\n\n\tconst addsSet:Set<Node> = new Set( newPositions );\n\tconst deletes:Node[] = [];\n\n\tlet offset:number = 0;\n\tlet remnants:Node[] = newPositions;\n\n\toldPositions.forEach( oldNode => {\n\t\tconst currentIndex:number = remnants.findIndex( newNode => newNode.identifier === oldNode.identifier )/*?*/;\n\n\t\tif( currentIndex === - 1 ) {\n\t\t\toldNode.index -= offset ++;\n\t\t\tdeletes.push( oldNode );\n\t\t} else {\n\t\t\taddsSet.delete( remnants[ currentIndex ] );\n\t\t\tremnants = remnants.slice( currentIndex + 1 );\n\t\t}\n\t} );\n\n\tconst updates:UpdateDelta[] = [];\n\n\tlet last:UpdateDelta;\n\tdeletes.forEach( node => {\n\t\tif( last && last.slice[ 0 ] === node.index ) {\n\t\t\tlast.slice = [ last.slice[ 0 ], last.slice[ 1 ] + 1 ];\n\t\t\treturn;\n\t\t}\n\n\t\tupdates.push( last = {\n\t\t\tslice: [ node.index, node.index + 1 ],\n\t\t\tobjects: [],\n\t\t} );\n\t} );\n\n\tlast = void 0;\n\taddsSet.forEach( node => {\n\t\tif( last && last.slice[ 1 ] === node.index ) {\n\t\t\tlast.slice = [ last.slice[ 0 ], node.index + 1 ];\n\t\t\tlast.objects.push( node.object );\n\t\t\treturn;\n\t\t}\n\n\t\tupdates.push( last = {\n\t\t\tslice: [ node.index, node.index + 1 ],\n\t\t\tobjects: [ node.object ],\n\t\t} );\n\t} );\n\n\treturn updates;\n}\n\nfunction isValidValue( value:any ):boolean {\n\treturn value !== null && value !== void 0;\n}\n\n\nexport default Class;\n"]}