{"version":3,"sources":["PersistedProtectedDocument.ts"],"names":[],"mappings":";;AAIA,yDAAwD;AAExD,+BAAiC;AACjC,wCAAuC;AAiB1B,QAAA,0BAA0B,GAAqC;IAC3E,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,MAAM,CAAE;eAC3B,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,QAAQ,CAAE,CACvC;IACH,CAAC;IAED,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,kCAA0B,CAAC,WAAW,CAAE,MAAM,CAAE;eACnD,qCAAiB,CAAC,EAAE,CAAE,MAAM,CAAE,CAChC;IACH,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ,EAAE,SAAmB;QACxD,EAAE,CAAA,CAAE,kCAA0B,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAErE,qCAAiB,CAAC,QAAQ,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEhD,IAAM,0BAA0B,GAAkC,MAAwC,CAAC;QAC3G,MAAM,CAAC,gBAAgB,CAAE,0BAA0B,EAAE;YACpD,QAAQ,EAAE;gBACT,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,MAAM;aACb;SACD,CAAE,CAAC;QAEJ,MAAM,CAAC,0BAA0B,CAAC;IACnC,CAAC;CAED,CAAC;AAMF,gBAAkD,cAA8B;IAAhF,iBASC;IARA,IAAM,UAAU,GAAoB,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QACtD,OAAO,CAAC,OAAO,CAAE,IAAI,CAAC,iBAAiB,CAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAa,yBAAwB,IAAI,CAAC,EAAE,WAAQ,OAAE,CAAC,iBAAiB,YAAU,CAAE;aACzG,IAAI,CAAE,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,GAAG,EAAzB,CAAyB,CAAE,CAAC;IAEhD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,UAAE,GAAW;QACpC,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAgB,GAAG,CAAC,EAAE,EAAE,cAAc,CAAE,CAAC;IACpE,CAAC,CAAE,CAAC;AACL,CAAC","file":"PersistedProtectedDocument.js","sourcesContent":["import { PersistedACL } from \"./Auth/PersistedACL\";\nimport { Documents } from \"./Documents\";\nimport { RequestOptions } from \"./HTTP/Request\";\nimport { ModelDecorator } from \"./ModelDecorator\";\nimport { PersistedDocument } from \"./PersistedDocument\";\nimport { Pointer } from \"./Pointer\";\nimport * as Utils from \"./Utils\";\nimport { CS } from \"./Vocabularies/CS\";\n\nexport interface PersistedProtectedDocument extends PersistedDocument {\n\taccessControlList?:Pointer;\n\n\tgetACL( requestOptions?:RequestOptions ):Promise<PersistedACL>;\n}\n\n\nexport interface PersistedProtectedDocumentFactory extends ModelDecorator<PersistedProtectedDocument> {\n\tisDecorated( object:object ):object is PersistedProtectedDocument;\n\n\tis( object:object ):object is PersistedProtectedDocument;\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & PersistedProtectedDocument;\n}\n\nexport const PersistedProtectedDocument:PersistedProtectedDocumentFactory = {\n\tisDecorated( object:object ):object is PersistedProtectedDocument {\n\t\treturn Utils.isObject( object )\n\t\t\t&& Utils.hasFunction( object, \"getACL\" )\n\t\t\t;\n\t},\n\n\tis( object:object ):object is PersistedProtectedDocument {\n\t\treturn PersistedProtectedDocument.isDecorated( object )\n\t\t\t&& PersistedDocument.is( object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & PersistedProtectedDocument {\n\t\tif( PersistedProtectedDocument.isDecorated( object ) ) return object;\n\n\t\tPersistedDocument.decorate( object, documents );\n\n\t\tconst persistedProtectedDocument:T & PersistedProtectedDocument = object as T & PersistedProtectedDocument;\n\t\tObject.defineProperties( persistedProtectedDocument, {\n\t\t\t\"getACL\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getACL,\n\t\t\t},\n\t\t} );\n\n\t\treturn persistedProtectedDocument;\n\t},\n\n};\n\ninterface ACLResult {\n\tacl:Pointer;\n}\n\nfunction getACL( this:PersistedProtectedDocument, requestOptions?:RequestOptions ):Promise<PersistedACL> {\n\tconst aclPromise:Promise<Pointer> = this.isResolved() ?\n\t\tPromise.resolve( this.accessControlList ) :\n\t\tthis.executeSELECTQuery<ACLResult>( `SELECT ?acl WHERE {<${ this.id }> <${ CS.accessControlList }> ?acl}` )\n\t\t\t.then( results => results.bindings[ 0 ].acl );\n\n\treturn aclPromise.then( ( acl:Pointer ) => {\n\t\treturn this._documents.get<PersistedACL>( acl.id, requestOptions );\n\t} );\n}\n"]}