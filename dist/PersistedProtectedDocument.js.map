{"version":3,"sources":["PersistedProtectedDocument.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0CAQyB;AAMzB,yDAAwD;AAExD,6CAAiC;AAmBpB,QAAA,0BAA0B,GAAqC;IAC3E,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,MAAM,CAAE;eAC3B,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,QAAQ,CAAE,CACvC;IACH,CAAC;IAED,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,kCAA0B,CAAC,WAAW,CAAE,MAAM,CAAE;eACnD,qCAAiB,CAAC,EAAE,CAAE,MAAM,CAAE,CAChC;IACH,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ,EAAE,SAAmB;QACxD,EAAE,CAAA,CAAE,kCAA0B,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAErE,qCAAiB,CAAC,QAAQ,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEhD,IAAM,0BAA0B,GAAkC,MAAwC,CAAC;QAC3G,MAAM,CAAC,gBAAgB,CAAE,0BAA0B,EAAE;YACpD,QAAQ,EAAE;gBACT,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,MAAM;aACb;SACD,CAAE,CAAC;QAEJ,MAAM,CAAC,0BAA0B,CAAC;IACnC,CAAC;CAED,CAAC;AAEF,gBAA6B,cAAwC;IAAxC,+BAAA,EAAA,mBAAwC;IACpE,EAAE,CAAA,CAAE,IAAI,CAAC,UAAU,EAAG,CAAC;QAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,cAAc,CAAE,CAAC;IAEhG,IAAM,WAAW,GAAiB,IAAI,sBAAa,CAAE,GAAG,CAAE,CAAC;IAE3D,IAAM,SAAS,GAAgB,IAAI,qBAAY,CAAE,IAAI,iBAAQ,CAAE,IAAI,CAAC,EAAE,CAAE,CAAE;SACxE,YAAY,CAAE,IAAI,uBAAc,CAAE,IAAI,iBAAQ,CAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE,CAAE;SACpF,SAAS,CAAE,WAAW,CAAE,CAAE,CAAC;IAE9B,IAAM,UAAU,GAAgB,IAAI,qBAAY,CAAE,IAAI,sBAAa,CAAE,GAAG,CAAE,CAAE;SAC1E,YAAY,CAAE,IAAI,uBAAc,CAAE,IAAI,sBAAa,CAAE,GAAG,CAAE,CAAE;SAC3D,SAAS,CAAE,IAAI,sBAAa,CAAE,GAAG,CAAE,CAAE,CAAE,CAAC;IAE3C,IAAM,KAAK,GAAc,IAAI,mBAAU,CAAE,IAAI,uBAAc,EAAE;SAC3D,SAAS,CAAE,UAAU,CAAE;SACvB,UAAU,CAAE,SAAS,CAAE;SACvB,UAAU,CAAE,IAAI,mBAAU,CAAE,WAAW,CAAE;SACxC,UAAU,CAAE,UAAU,CAAE,CACzB,CACD,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,UAAU;SACpB,sBAAsB,CAAgB,IAAI,CAAC,EAAE,EAAE,cAAc,EAAE,KAAK,CAAE,CACtE;AACH,CAAC;AAED,kBAAe,KAAK,CAAC","file":"PersistedProtectedDocument.js","sourcesContent":["import {\n\tConstructToken,\n\tGraphToken,\n\tIRIToken,\n\tPredicateToken,\n\tQueryToken,\n\tSubjectToken,\n\tVariableToken,\n} from \"sparqler/tokens\";\n\nimport { PersistedACL } from \"./Auth/PersistedACL\";\nimport { Documents } from \"./Documents\";\nimport { RequestOptions } from \"./HTTP/Request\";\nimport { ModelDecorator } from \"./ModelDecorator\";\nimport { PersistedDocument } from \"./PersistedDocument\";\nimport { Pointer } from \"./Pointer\";\nimport * as Utils from \"./Utils\";\nimport { CS } from \"./Vocabularies/CS\";\n\n\nexport interface PersistedProtectedDocument extends PersistedDocument {\n\taccessControlList?:Pointer;\n\n\tgetACL( requestOptions?:RequestOptions ):Promise<PersistedACL>;\n}\n\n\nexport interface PersistedProtectedDocumentFactory extends ModelDecorator<PersistedProtectedDocument> {\n\tisDecorated( object:object ):object is PersistedProtectedDocument;\n\n\tis( object:object ):object is PersistedProtectedDocument;\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & PersistedProtectedDocument;\n}\n\nexport const PersistedProtectedDocument:PersistedProtectedDocumentFactory = {\n\tisDecorated( object:object ):object is PersistedProtectedDocument {\n\t\treturn Utils.isObject( object )\n\t\t\t&& Utils.hasFunction( object, \"getACL\" )\n\t\t\t;\n\t},\n\n\tis( object:object ):object is PersistedProtectedDocument {\n\t\treturn PersistedProtectedDocument.isDecorated( object )\n\t\t\t&& PersistedDocument.is( object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & PersistedProtectedDocument {\n\t\tif( PersistedProtectedDocument.isDecorated( object ) ) return object;\n\n\t\tPersistedDocument.decorate( object, documents );\n\n\t\tconst persistedProtectedDocument:T & PersistedProtectedDocument = object as T & PersistedProtectedDocument;\n\t\tObject.defineProperties( persistedProtectedDocument, {\n\t\t\t\"getACL\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getACL,\n\t\t\t},\n\t\t} );\n\n\t\treturn persistedProtectedDocument;\n\t},\n\n};\n\nfunction getACL( this:Class, requestOptions:HTTP.Request.Options = {} ):Promise<PersistedACL> {\n\tif( this.isResolved() ) return this._documents.get( this.accessControlList.id, requestOptions );\n\n\tconst aclGraphVar:VariableToken = new VariableToken( \"g\" );\n\n\tconst aclGetter:SubjectToken = new SubjectToken( new IRIToken( this.id ) )\n\t\t.addPredicate( new PredicateToken( new IRIToken( NS.CS.Predicate.accessControlList ) )\n\t\t\t.addObject( aclGraphVar ) );\n\n\tconst aclContent:SubjectToken = new SubjectToken( new VariableToken( \"s\" ) )\n\t\t.addPredicate( new PredicateToken( new VariableToken( \"p\" ) )\n\t\t\t.addObject( new VariableToken( \"o\" ) ) );\n\n\tconst query:QueryToken = new QueryToken( new ConstructToken()\n\t\t.addTriple( aclContent )\n\t\t.addPattern( aclGetter )\n\t\t.addPattern( new GraphToken( aclGraphVar )\n\t\t\t.addPattern( aclContent )\n\t\t)\n\t);\n\n\treturn this._documents\n\t\t._getConstructDocuments<PersistedACL>( this.id, requestOptions, query )\n\t\t;\n}\n\nexport default Class;\n"]}