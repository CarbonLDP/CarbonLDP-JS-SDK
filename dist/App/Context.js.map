{"version":3,"sources":["App/Context.ts"],"names":[],"mappings":";;;;;;AAAA,wDAAmD;AACnD,+BAA0B;AAE1B,8BAAgC;AAGhC;IAA2B,yBAAe;IAQzC,eAAa,aAAqB,EAAE,GAAgB;QAApD,YACC,kBAAO,aAAa,CAAE,SAStB;QARA,KAAI,CAAC,IAAI,GAAG,IAAI,cAAI,CAAE,KAAI,CAAE,CAAC;QAC7B,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAEhB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAE,KAAI,CAAC,GAAG,CAAE,CAAC;QAGrC,KAAI,CAAC,SAAS,CAAC,aAAa,CAAE,GAAG,CAAC,aAAa,CAAE,CAAC;QAClD,GAAG,CAAC,aAAa,GAAS,KAAI,CAAC,SAAS,CAAC,UAAU,CAAE,GAAG,CAAC,aAAa,CAAC,EAAE,CAAE,CAAC;;IAC7E,CAAC;IAfD,sBAAW,sBAAG;aAAd,cAAgC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAAA,CAAC;IAiBpD,uBAAO,GAAP,UAAS,GAAU;QAClB,EAAE,CAAA,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAE,GAAG,CAAG,CAAC;YAAC,MAAM,CAAC,GAAG,CAAC;QAEhD,IAAI,QAAQ,GAAU,IAAI,CAAC,aAAa,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC9D,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAE,QAAQ,EAAE,GAAG,CAAE,CAAC;IAC9C,CAAC;IAEO,uBAAO,GAAf,UAAiB,QAAqB;QACrC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;IAClC,CAAC;IACF,YAAC;AAAD,CA9BA,AA8BC,CA9B0B,yBAAe,GA8BzC;AA9BY,sBAAK;;AAgClB,kBAAe,KAAK,CAAC","file":"Context.js","sourcesContent":["import AbstractContext from \"./../AbstractContext\";\nimport Auth from \"./Auth\";\nimport Context from \"./../Context\";\nimport * as RDF from \"./../RDF\";\nimport PersistedApp from \"./../PersistedApp\";\n\nexport class Class extends AbstractContext {\n\tpublic auth:Auth;\n\n\tpublic get app():PersistedApp { return this._app; };\n\n\tprivate _app:PersistedApp;\n\tprivate base:string;\n\n\tconstructor( parentContext:Context, app:PersistedApp ) {\n\t\tsuper( parentContext );\n\t\tthis.auth = new Auth( this );\n\t\tthis._app = app;\n\n\t\tthis.base = this.getBase( this.app );\n\n\t\t// Reassign the rootContainer pointer because the previous one was created in the SDKContext and this one must be resolved by this context.\n\t\tthis.documents.removePointer( app.rootContainer );\n\t\tapp.rootContainer = <any> this.documents.getPointer( app.rootContainer.id );\n\t}\n\n\tresolve( uri:string ):string {\n\t\tif( RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\t\tlet finalURI:string = this.parentContext.resolve( this.base );\n\t\treturn RDF.URI.Util.resolve( finalURI, uri );\n\t}\n\n\tprivate getBase( resource:PersistedApp ):string {\n\t\treturn resource.rootContainer.id;\n\t}\n}\n\nexport default Class;\n"]}