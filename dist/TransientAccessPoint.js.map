{"version":3,"sources":["TransientAccessPoint.ts"],"names":[],"mappings":";;AAAA,2EAA0E;AAG1E,sCAAqC;AA2BxB,QAAA,oBAAoB,GAA+B;IAC/D,IAAI,EAAE,KAAC,CAAC,WAAW;IAEnB,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,mDAAwB,CAAC,EAAE,CAAE,MAAM,CAAE,CAAC;IAC9C,CAAC;IAED,MAAM,EAAN,UAAQ,kBAA0B,EAAE,iBAAkC,EAAE,kBAAoC;QAC3G,MAAM,CAAC,4BAAoB,CAAC,UAAU,CAAE,EAAE,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,CAAE,CAAC;IACzG,CAAC;IAED,UAAU,EAAV,UAA8B,MAAQ,EAAE,kBAA0B,EAAE,iBAAkC,EAAE,kBAAoC;QAC3I,MAAM,CAAO,mDAAwB,CAAC,UAAU,CAAK,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,CAAE,CAAC;IAC1H,CAAC;CACD,CAAC","file":"TransientAccessPoint.js","sourcesContent":["import { TransientDirectContainer } from \"./LDP/TransientDirectContainer\";\nimport { ModelFactory } from \"./core/ModelFactory\";\nimport { Pointer } from \"./Pointer\";\nimport { C } from \"./Vocabularies/C\";\n\n\nexport interface AccessPointBase {\n\thasMemberRelation:string | Pointer;\n\tisMemberOfRelation?:string | Pointer;\n\tinsertedContentRelation?:string | Pointer;\n}\n\nexport interface TransientAccessPoint extends TransientDirectContainer {\n\thasMemberRelation:Pointer;\n\tisMemberOfRelation?:Pointer;\n\tinsertedContentRelation?:Pointer;\n}\n\n\nexport interface TransientAccessPointFactory extends ModelFactory<TransientAccessPoint> {\n\tTYPE:string;\n\n\tis( object:object ):object is TransientAccessPoint;\n\n\n\tcreate( membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):TransientAccessPoint;\n\n\tcreateFrom<T extends object>( object:T, membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):T & TransientAccessPoint;\n}\n\nexport const TransientAccessPoint:TransientAccessPointFactory = {\n\tTYPE: C.AccessPoint,\n\n\tis( object:object ):object is TransientAccessPoint {\n\t\treturn TransientDirectContainer.is( object );\n\t},\n\n\tcreate( membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):TransientAccessPoint {\n\t\treturn TransientAccessPoint.createFrom( {}, membershipResource, hasMemberRelation, isMemberOfRelation );\n\t},\n\n\tcreateFrom<T extends object>( object:T, membershipResource:Pointer, hasMemberRelation:string | Pointer, isMemberOfRelation?:string | Pointer ):T & TransientAccessPoint {\n\t\treturn <any> TransientDirectContainer.createFrom<T>( object, membershipResource, hasMemberRelation, isMemberOfRelation );\n\t},\n};\n"]}