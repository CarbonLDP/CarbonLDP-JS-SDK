{"version":3,"sources":["CarbonLDP.ts"],"names":[],"mappings":"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","file":"CarbonLDP.js","sourcesContent":["import { hasProtocol } from \"sparqler/iri\";\n\nimport { AbstractContext } from \"./AbstractContext\";\nimport { AccessPoint } from \"./AccessPoint\";\nimport * as Auth from \"./Auth\";\nimport { BlankNode } from \"./BlankNode\";\nimport { Document } from \"./Document\";\nimport { Documents } from \"./Documents\";\nimport * as Errors from \"./Errors\";\nimport { Fragment } from \"./Fragment\";\nimport { FreeResources } from \"./FreeResources\";\nimport { PersistedProtectedDocument } from \"./PersistedProtectedDocument\";\nimport { ProtectedDocument } from \"./ProtectedDocument\";\nimport { ServiceAwareDocument } from \"./ServiceAwareDocument\";\nimport * as HTTP from \"./HTTP\";\nimport * as JSONLD from \"./JSONLD\";\nimport * as LDP from \"./LDP\";\nimport * as LDPatch from \"./LDPatch\";\nimport * as Messaging from \"./Messaging\";\nimport { NamedFragment } from \"./NamedFragment\";\nimport {\n\tContainerType,\n\tDigestedObjectSchema,\n\tDigestedObjectSchemaProperty,\n\tObjectSchemaDigester,\n\tObjectSchemaUtils,\n\tPointerType,\n} from \"./ObjectSchema\";\nimport { PersistedDocument } from \"./PersistedDocument\";\nimport { PersistedFragment } from \"./PersistedFragment\";\nimport { PersistedNamedFragment } from \"./PersistedNamedFragment\";\nimport { PersistedResource } from \"./PersistedResource\";\nimport { Pointer } from \"./Pointer\";\nimport * as RDF from \"./RDF\";\nimport { Resource } from \"./Resource\";\nimport {\n\tglobalContext,\n\tSDKContext,\n} from \"./SDKContext\";\nimport {\n\tCarbonLDPSettings,\n\tContextSettings,\n\tDocumentPaths,\n} from \"./Settings\";\nimport * as SHACL from \"./SHACL\";\nimport * as SPARQL from \"./SPARQL\";\nimport * as System from \"./System\";\nimport * as Utils from \"./Utils\";\nimport * as Vocabularies from \"./Vocabularies\";\n\nexport class CarbonLDP extends AbstractContext {\n\n\tstatic AbstractContext:typeof AbstractContext = AbstractContext;\n\tstatic AccessPoint:typeof AccessPoint = AccessPoint;\n\tstatic Auth:typeof Auth = Auth;\n\tstatic BlankNode:typeof BlankNode = BlankNode;\n\tstatic Document:typeof Document = Document;\n\tstatic Documents:typeof Documents = Documents;\n\tstatic Errors:typeof Errors = Errors;\n\tstatic Fragment:typeof Fragment = Fragment;\n\tstatic FreeResources:typeof FreeResources = FreeResources;\n\tstatic HTTP:typeof HTTP = HTTP;\n\tstatic JSONLD:typeof JSONLD = JSONLD;\n\tstatic LDP:typeof LDP = LDP;\n\tstatic LDPatch:typeof LDPatch = LDPatch;\n\tstatic Messaging:typeof Messaging = Messaging;\n\tstatic NamedFragment:typeof NamedFragment = NamedFragment;\n\tstatic Vocabularies:typeof Vocabularies = Vocabularies;\n\tstatic ObjectSchemaUtils:typeof ObjectSchemaUtils = ObjectSchemaUtils;\n\tstatic ObjectSchemaDigester:typeof ObjectSchemaDigester = ObjectSchemaDigester;\n\tstatic DigestedObjectSchemaProperty:typeof DigestedObjectSchemaProperty = DigestedObjectSchemaProperty;\n\tstatic PointerType:typeof PointerType = PointerType;\n\tstatic ContainerType:typeof ContainerType = ContainerType;\n\tstatic DigestedObjectSchema:typeof DigestedObjectSchema = DigestedObjectSchema;\n\tstatic PersistedDocument:typeof PersistedDocument = PersistedDocument;\n\tstatic PersistedFragment:typeof PersistedFragment = PersistedFragment;\n\tstatic PersistedNamedFragment:typeof PersistedNamedFragment = PersistedNamedFragment;\n\tstatic PersistedProtectedDocument:typeof PersistedProtectedDocument = PersistedProtectedDocument;\n\tstatic PersistedResource:typeof PersistedResource = PersistedResource;\n\tstatic Pointer:typeof Pointer = Pointer;\n\tstatic ProtectedDocument:typeof ProtectedDocument = ProtectedDocument;\n\tstatic RDF:typeof RDF = RDF;\n\tstatic Resource:typeof Resource = Resource;\n\tstatic SDKContext:typeof SDKContext = SDKContext;\n\tstatic globalContext:typeof globalContext = globalContext;\n\tstatic ServiceAwareDocument:typeof ServiceAwareDocument = ServiceAwareDocument;\n\tstatic SHACL:typeof SHACL = SHACL;\n\tstatic SPARQL:typeof SPARQL = SPARQL;\n\tstatic System:typeof System = System;\n\tstatic Utils:typeof Utils = Utils;\n\n\n\tstatic get version():string { return \"1.0.0-alpha.16\"; }\n\n\t// noinspection JSMethodCanBeStatic\n\tget version():string { return CarbonLDP.version; }\n\n\tprotected _baseURI:string;\n\tprotected settings:ContextSettings = {\n\t\tvocabulary: \"vocabularies/main/#\",\n\t\tpaths: {\n\t\t\tsystem: {\n\t\t\t\tslug: \".system/\",\n\t\t\t\tpaths: {\n\t\t\t\t\tplatform: \"platform/\",\n\t\t\t\t\tcredentials: \"credentials/\",\n\t\t\t\t\troles: \"roles/\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tusers: {\n\t\t\t\tslug: \"users/\",\n\t\t\t\tpaths: {\n\t\t\t\t\tme: \"me/\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n\n\tmessaging:Messaging.MessagingService;\n\n\tconstructor( url:string );\n\tconstructor( settings:CarbonLDPSettings );\n\tconstructor( urlOrSettings:string | CarbonLDPSettings ) {\n\t\tsuper();\n\n\t\tif( Utils.isString( urlOrSettings ) ) {\n\t\t\tif( ! RDF.URI.hasProtocol( urlOrSettings ) ) throw new Errors.IllegalArgumentError( `The URL must contain a valid protocol: \"http://\", \"https://\".` );\n\t\t\tthis._baseURI = urlOrSettings;\n\n\t\t} else {\n\t\t\tif( ! Utils.isString( urlOrSettings.host ) ) throw new Errors.IllegalArgumentError( `The settings object must contains a valid host string.` );\n\t\t\tif( hasProtocol( urlOrSettings.host ) ) throw new Errors.IllegalArgumentError( `The host must not contain a protocol.` );\n\t\t\tif( urlOrSettings.host.includes( \":\" ) ) throw new Errors.IllegalArgumentError( `The host must not contain a port.` );\n\n\t\t\tthis._baseURI = `${ urlOrSettings.ssl === false ? \"http://\" : \"https://\" }${ urlOrSettings.host }`;\n\n\t\t\tif( Utils.isNumber( urlOrSettings.port ) ) {\n\t\t\t\tif( this._baseURI.endsWith( \"/\" ) ) this._baseURI = this._baseURI.slice( 0, - 1 );\n\t\t\t\tthis._baseURI += `:${ urlOrSettings.port }`;\n\t\t\t}\n\n\t\t\turlOrSettings.ssl = urlOrSettings.host = urlOrSettings.port = null;\n\n\t\t\tconst paths:ContextSettings[ \"paths\" ] = mergePaths( this.settings.paths, urlOrSettings.paths );\n\n\t\t\tthis.settings = Utils.ObjectUtils.extend( this.settings, urlOrSettings );\n\t\t\tthis.settings.paths = paths;\n\t\t}\n\n\t\tif( ! this._baseURI.endsWith( \"/\" ) ) this._baseURI = this._baseURI + \"/\";\n\n\t\tthis.messaging = new Messaging.MessagingService( this );\n\t}\n\n\t/**\n\t * Retrieves the Metadata related to the CarbonLDP Platform.\n\t */\n\tgetPlatformMetadata():Promise<System.PlatformMetadata> {\n\t\treturn Utils.promiseMethod( () => {\n\t\t\tconst uri:string = this._resolvePath( \"system.platform\" );\n\t\t\treturn this.documents.get<System.PlatformMetadata>( uri );\n\t\t} );\n\t}\n\n}\n\nfunction mergePaths( target:ContextSettings[ \"paths\" ], source:ContextSettings[ \"paths\" ] ):ContextSettings[ \"paths\" ] {\n\tif( ! source ) return target;\n\tif( ! target ) return Utils.ObjectUtils.clone( source, { objects: true } );\n\n\tfor( const key of Object.keys( source ) ) {\n\t\tconst sourcePath:string | DocumentPaths = source[ key ];\n\n\t\tif( sourcePath === null ) {\n\t\t\tdelete target[ key ];\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst targetPath:string | DocumentPaths = target[ key ];\n\t\tif( ! targetPath ) {\n\t\t\ttarget[ key ] = Utils.isObject( sourcePath ) ?\n\t\t\t\tUtils.ObjectUtils.clone( sourcePath, { objects: true } ) :\n\t\t\t\tsourcePath;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( Utils.isString( sourcePath ) ) {\n\t\t\tif( Utils.isObject( targetPath ) ) {\n\t\t\t\ttargetPath.slug = sourcePath;\n\t\t\t} else {\n\t\t\t\ttarget[ key ] = sourcePath;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( sourcePath.slug === void 0 && sourcePath.paths === void 0 ) continue;\n\n\t\tconst targetDocPaths:DocumentPaths = Utils.isString( targetPath ) ?\n\t\t\ttarget[ key ] = { slug: targetPath } : targetPath;\n\n\t\tif( sourcePath.slug !== void 0 ) targetDocPaths.slug = sourcePath.slug;\n\t\tif( sourcePath.paths !== void 0 ) targetDocPaths.paths = mergePaths( targetDocPaths.paths, sourcePath.paths );\n\t}\n\n\treturn target;\n}\n"]}