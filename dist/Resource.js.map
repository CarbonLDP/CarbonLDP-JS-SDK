{"version":3,"sources":["Resource.ts"],"names":[],"mappings":";;;;;;;;;AAEA,qCAAoC;AACpC,6CAAiC;AA4BjC,iBAAkB,IAAW;IAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;AACzB,CAAC;AAED,iBAAkB,IAAW;IAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,KAAK,CAAE,CAAC,CAAC;AAC3C,CAAC;AAED,oBAAqB,IAAW;IAC/B,IAAI,KAAK,GAAU,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;IAC9C,EAAE,CAAA,CAAE,KAAK,KAAK,CAAE,CAAE,CAAC;QAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;AACnD,CAAC;AAEY,QAAA,QAAQ,GAAmB;IACvC,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,CACN,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,OAAO,CAAE;eAExC,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,SAAS,CAAE;eACtC,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,SAAS,CAAE;eACtC,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,YAAY,CAAE,CAC5C,CAAC;IACH,CAAC;IAED,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,iBAAO,CAAC,EAAE,CAAE,MAAM,CAAE;eACvB,gBAAQ,CAAC,WAAW,CAAE,MAAM,CAAE,CAAC;IACpC,CAAC;IAED,MAAM,EAAN,UAAQ,EAAU,EAAE,KAAe;QAClC,MAAM,CAAC,gBAAQ,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAE,CAAC;IAC7C,CAAC;IAED,UAAU,EAAV,UAA8B,MAAQ,EAAE,EAAU,EAAE,KAAe;QAClE,IAAM,QAAQ,GAAgB,gBAAQ,CAAC,QAAQ,CAAK,MAAM,CAAE,CAAC;QAE7D,EAAE,CAAA,CAAE,EAAG,CAAC;YAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;QAC1B,EAAE,CAAA,CAAE,KAAM,CAAC;YAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnC,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ;QACnC,IAAM,QAAQ,GAAgB,MAAsB,CAAC;QACrD,EAAE,CAAA,CAAE,gBAAQ,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,QAAQ,CAAC;QAErD,iBAAO,CAAC,QAAQ,CAAK,QAAQ,CAAE,CAAC;QAEhC,MAAM,CAAC,gBAAgB,CAAE,QAAQ,EAAE;YAClC,OAAO,EAAE;gBACR,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,EAAE;aAC3B;YAED,SAAS,EAAE;gBACV,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,OAAO;aACd;YACD,SAAS,EAAE;gBACV,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,OAAO;aACd;YACD,YAAY,EAAE;gBACb,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,UAAU;aACjB;SACD,CAAE,CAAC;QAEJ,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;CACD,CAAC;AAEF,kBAAe,gBAAQ,CAAC","file":"Resource.js","sourcesContent":["import { ModelDecorator } from \"./ModelDecorator\";\nimport { ModelFactory } from \"./ModelFactory\";\nimport { Pointer } from \"./Pointer\";\nimport * as Utils from \"./Utils\";\n\n\nexport interface Resource extends Pointer {\n\ttypes:string[];\n\n\n\taddType( type:string ):void;\n\n\thasType( type:string ):boolean;\n\n\tremoveType( type:string ):void;\n}\n\nexport interface ResourceFactory extends ModelFactory<Resource>, ModelDecorator<Resource> {\n\tisDecorated( object:object ):object is Resource;\n\n\tis( object:object ):object is Resource;\n\n\n\tcreate( id?:string, types?:string[] ):Resource;\n\n\tcreateFrom<T extends object>( object:T, id?:string, types?:string[] ):T & Resource;\n\n\tdecorate<T extends object>( object:T ):T & Resource;\n}\n\n\nfunction addType( type:string ):void {\n\tthis.types.push( type );\n}\n\nfunction hasType( type:string ):boolean {\n\treturn this.types.indexOf( type ) !== - 1;\n}\n\nfunction removeType( type:string ):void {\n\tlet index:number = this.types.indexOf( type );\n\tif( index !== - 1 ) this.types.splice( index, 1 );\n}\n\nexport const Resource:ResourceFactory = {\n\tisDecorated( object:object ):object is Resource {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( object, \"types\" )\n\n\t\t\t&& Utils.hasFunction( object, \"addType\" )\n\t\t\t&& Utils.hasFunction( object, \"hasType\" )\n\t\t\t&& Utils.hasFunction( object, \"removeType\" )\n\t\t);\n\t},\n\n\tis( object:object ):object is Resource {\n\t\treturn Pointer.is( object )\n\t\t\t&& Resource.isDecorated( object );\n\t},\n\n\tcreate( id?:string, types?:string[] ):Resource {\n\t\treturn Resource.createFrom( {}, id, types );\n\t},\n\n\tcreateFrom<T extends object>( object:T, id?:string, types?:string[] ):T & Resource {\n\t\tconst resource:T & Resource = Resource.decorate<T>( object );\n\n\t\tif( id ) resource.id = id;\n\t\tif( types ) resource.types = types;\n\n\t\treturn resource;\n\t},\n\n\tdecorate<T extends object>( object:T ):T & Resource {\n\t\tconst resource:T & Resource = object as T & Resource;\n\t\tif( Resource.isDecorated( object ) ) return resource;\n\n\t\tPointer.decorate<T>( resource );\n\n\t\tObject.defineProperties( resource, {\n\t\t\t\"types\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: resource.types || [],\n\t\t\t},\n\n\t\t\t\"addType\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: addType,\n\t\t\t},\n\t\t\t\"hasType\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: hasType,\n\t\t\t},\n\t\t\t\"removeType\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: removeType,\n\t\t\t},\n\t\t} );\n\n\t\treturn resource;\n\t},\n};\n\nexport default Resource;\n"]}