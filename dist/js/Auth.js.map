{"version":3,"sources":["Auth.ts"],"names":["Method","Class","Class.constructor","Class.isAuthenticated","Class.authenticate","Class.addAuthentication","Class.clearAuthentication","Class.getAuthenticator"],"mappings":"AAGA,mCAA+B,2BAA2B,CAAC,CAAA;AAC3D,mCAA+B,2BAA2B,CAAC,CAAA;AAC3D,yCAAqC,iCAAiC,CAAC,CAAA;AAGvE,IAAY,MAAM,WAAM,UAAU,CAAC,CAAA;AAEnC,IAAY,KAAK,WAAM,SAAS,CAAC,CAAA;AAEjC,WAAY,MAAM;IACjBA,qCAAKA,CAAAA;IACLA,qCAAKA,CAAAA;AACNA,CAACA,EAHW,cAAM,KAAN,cAAM,QAGjB;AAHD,IAAY,MAAM,GAAN,cAGX,CAAA;AAED;IAOCC,eAAaA,OAAeA;QAJpBC,WAAMA,GAAUA,IAAIA,CAACA;QAK5BA,IAAIA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;QAEvBA,IAAIA,CAACA,cAAcA,GAAGA,EAAEA,CAACA;QACzBA,IAAIA,CAACA,cAAcA,CAACA,IAAIA,CAAEA,IAAIA,4BAAkBA,CAAEA,IAAIA,CAACA,OAAOA,CAAEA,CAAEA,CAACA;QACnEA,IAAIA,CAACA,cAAcA,CAACA,IAAIA,CAAEA,IAAIA,4BAAkBA,EAAEA,CAAEA,CAACA;IACtDA,CAACA;IAEDD,+BAAeA,GAAfA,UAAiBA,SAAwBA;QAAxBE,yBAAwBA,GAAxBA,gBAAwBA;QACxCA,MAAMA,CAACA,CACNA,CAAEA,IAAIA,CAACA,aAAaA,IAAIA,IAAIA,CAACA,aAAaA,CAACA,eAAeA,EAAEA,CAAEA;YAC9DA,CAAEA,SAASA,IAAIA,CAAEA,CAAEA,IAAIA,CAACA,OAAOA,CAACA,aAAaA,IAAIA,IAAIA,CAACA,OAAOA,CAACA,aAAaA,CAACA,IAAIA,KAAKA,IAAIA,IAAIA,IAAIA,CAACA,OAAOA,CAACA,aAAaA,CAACA,IAAIA,CAACA,eAAeA,EAAEA,CAAEA,CAChJA,CAACA;IACHA,CAACA;IAIDF,4BAAYA,GAAZA,UAAcA,eAAmBA,EAAEA,QAAsBA;QAAzDG,iBAmBCA;QAnBkCA,wBAAsBA,GAAtBA,eAAsBA;QACxDA,MAAMA,CAACA,IAAIA,OAAOA,CAAQA,UAAEA,OAA8BA,EAAEA,MAA+BA;YAC1FA,EAAEA,CAAAA,CAAEA,CAAEA,eAAgBA,CAACA;gBAACA,MAAMA,IAAIA,MAAMA,CAACA,oBAAoBA,CAAEA,2DAA2DA,CAAEA,CAACA;YAE7HA,IAAIA,mBAAuCA,CAACA;YAC5CA,EAAEA,CAAAA,CAAEA,KAAKA,CAACA,QAAQA,CAAEA,eAAeA,CAAGA,CAACA,CAACA,CAACA;gBACxCA,IAAIA,QAAQA,GAAUA,eAAeA,CAACA;gBACtCA,EAAEA,CAAAA,CAAEA,CAAEA,QAASA,CAACA;oBAACA,MAAMA,IAAIA,MAAMA,CAACA,oBAAoBA,CAAEA,mDAAmDA,CAAEA,CAACA;gBAC9GA,mBAAmBA,GAAGA,IAAIA,kCAAwBA,CAAEA,QAAQA,EAAEA,QAAQA,CAAEA,CAACA;YAC1EA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACPA,mBAAmBA,GAAGA,eAAeA,CAACA;YACvCA,CAACA;YAEDA,EAAEA,CAAAA,CAAEA,KAAIA,CAACA,aAAcA,CAACA;gBAACA,KAAIA,CAACA,mBAAmBA,EAAEA,CAACA;YAEpDA,KAAIA,CAACA,aAAaA,GAAGA,KAAIA,CAACA,gBAAgBA,CAAEA,mBAAmBA,CAAEA,CAACA;YAElEA,OAAOA,CAAEA,KAAIA,CAACA,aAAaA,CAACA,YAAYA,CAAEA,mBAAmBA,CAAEA,CAAEA,CAACA;QACnEA,CAACA,CAACA,CAACA;IACJA,CAACA;IAEDH,iCAAiBA,GAAjBA,UAAmBA,cAAmCA;QACrDI,EAAEA,CAAAA,CAAEA,IAAIA,CAACA,eAAeA,CAAEA,KAAKA,CAAGA,CAACA,CAACA,CAACA;YACpCA,IAAIA,CAACA,aAAaA,CAACA,iBAAiBA,CAAEA,cAAcA,CAAEA,CAACA;QACxDA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAAAA,CAAEA,eAAeA,IAAIA,IAAIA,CAACA,OAAQA,CAACA,CAACA,CAACA;YAC7CA,IAAIA,CAACA,OAAOA,CAACA,aAAaA,CAACA,IAAIA,CAACA,iBAAiBA,CAAEA,cAAcA,CAAEA,CAACA;QACrEA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACPA,OAAOA,CAACA,IAAIA,CAAEA,mDAAmDA,CAAEA,CAACA;QACrEA,CAACA;IACFA,CAACA;IAEDJ,mCAAmBA,GAAnBA;QACCK,EAAEA,CAAAA,CAAEA,CAAEA,IAAIA,CAACA,aAAcA,CAACA;YAACA,MAAMA,CAACA;QAElCA,IAAIA,CAACA,aAAaA,CAACA,mBAAmBA,EAAEA,CAACA;QACzCA,IAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA;IAC3BA,CAACA;IAEOL,gCAAgBA,GAAxBA,UAA0BA,mBAAuCA;QAChEM,GAAGA,CAAAA,CAAuBA,UAAmBA,EAAnBA,KAAAA,IAAIA,CAACA,cAAcA,EAAxCA,cAAiBA,EAAjBA,IAAyCA,CAACA;YAA1CA,IAAIA,aAAaA,SAAAA;YACrBA,EAAEA,CAAAA,CAAEA,aAAaA,CAACA,QAAQA,CAAEA,mBAAmBA,CAAGA,CAACA;gBAACA,MAAMA,CAACA,aAAaA,CAACA;SACzEA;QAEDA,MAAMA,IAAIA,MAAMA,CAACA,iBAAiBA,CAAEA,wDAAwDA,CAAEA,CAACA;IAChGA,CAACA;IACFN,YAACA;AAADA,CArEA,AAqECA,IAAA;AArEY,aAAK,QAqEjB,CAAA;AAED;kBAAe,KAAK,CAAC","file":"Auth.js","sourcesContent":["/// <reference path=\"../typings/es6-promise/es6-promise.d.ts\" />\nimport AuthenticationToken from \"./Auth/AuthenticationToken\";\nimport Authenticator from \"./Auth/Authenticator\";\nimport BasicAuthenticator from \"./Auth/BasicAuthenticator\";\nimport TokenAuthenticator from \"./Auth/TokenAuthenticator\";\nimport UsernameAndPasswordToken from \"./Auth/UsernameAndPasswordToken\";\n\nimport * as HTTP from \"./HTTP\";\nimport * as Errors from \"./Errors\";\nimport Context from \"./Context\";\nimport * as Utils from \"./Utils\";\n\nexport enum Method {\n\tBASIC,\n\tTOKEN\n}\n\nexport class Class {\n\tprivate context:Context;\n\n\tprivate method:Method = null;\n\tprivate authenticators:Array<Authenticator<AuthenticationToken>>;\n\tprivate authenticator:Authenticator<AuthenticationToken>;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\n\t\tthis.authenticators = [];\n\t\tthis.authenticators.push( new TokenAuthenticator( this.context ) );\n\t\tthis.authenticators.push( new BasicAuthenticator() );\n\t}\n\n\tisAuthenticated( askParent:boolean = true ):boolean {\n\t\treturn (\n\t\t\t( this.authenticator && this.authenticator.isAuthenticated() ) ||\n\t\t\t( askParent && ! ! this.context.parentContext && this.context.parentContext.Auth !== this && this.context.parentContext.Auth.isAuthenticated() )\n\t\t);\n\t}\n\n\tauthenticate( username:string, password:string ):Promise<void>;\n\tauthenticate( authenticationToken:AuthenticationToken ):Promise<void>;\n\tauthenticate( usernameOrToken:any, password:string = null ):Promise<void> {\n\t\treturn new Promise<void>( ( resolve:( result:any ) => void, reject:( reject:Error ) => void ) => {\n\t\t\tif( ! usernameOrToken ) throw new Errors.IllegalArgumentError( \"Either a username or an authenticationToken are required.\" );\n\n\t\t\tlet authenticationToken:AuthenticationToken;\n\t\t\tif( Utils.isString( usernameOrToken ) ) {\n\t\t\t\tlet username:string = usernameOrToken;\n\t\t\t\tif( ! password ) throw new Errors.IllegalArgumentError( \"A password is required when providing a username.\" );\n\t\t\t\tauthenticationToken = new UsernameAndPasswordToken( username, password );\n\t\t\t} else {\n\t\t\t\tauthenticationToken = usernameOrToken;\n\t\t\t}\n\n\t\t\tif( this.authenticator ) this.clearAuthentication();\n\n\t\t\tthis.authenticator = this.getAuthenticator( authenticationToken );\n\n\t\t\tresolve( this.authenticator.authenticate( authenticationToken ) );\n\t\t});\n\t}\n\n\taddAuthentication( requestOptions:HTTP.Request.Options ):void {\n\t\tif( this.isAuthenticated( false ) ) {\n\t\t\tthis.authenticator.addAuthentication( requestOptions );\n\t\t} else if( \"parentContext\" in this.context ) {\n\t\t\tthis.context.parentContext.Auth.addAuthentication( requestOptions );\n\t\t} else {\n\t\t\tconsole.warn( \"There is no authentication to add to the request.\" );\n\t\t}\n\t}\n\n\tclearAuthentication():void {\n\t\tif( ! this.authenticator ) return;\n\n\t\tthis.authenticator.clearAuthentication();\n\t\tthis.authenticator = null;\n\t}\n\n\tprivate getAuthenticator( authenticationToken:AuthenticationToken ):Authenticator<AuthenticationToken> {\n\t\tfor( let authenticator of this.authenticators ) {\n\t\t\tif( authenticator.supports( authenticationToken ) ) return authenticator;\n\t\t}\n\n\t\tthrow new Errors.IllegalStateError( \"The configured authentication method isn\\'t supported.\" );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}