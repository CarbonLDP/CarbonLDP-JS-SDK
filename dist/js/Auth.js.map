{"version":3,"sources":["Auth.ts"],"names":["Method","Class","Class.constructor","Class.isAuthenticated","Class.authenticate","Class.addAuthentication","Class.clearAuthentication","Class.getAuthenticator"],"mappings":"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","file":"Auth.js","sourcesContent":["/// <reference path=\"./../typings/typings.d.ts\" />\n\nimport AuthenticationToken from \"./Auth/AuthenticationToken\";\nimport Authenticator from \"./Auth/Authenticator\";\nimport BasicAuthenticator from \"./Auth/BasicAuthenticator\";\nimport * as Token from \"./Auth/Token\";\nimport TokenAuthenticator from \"./Auth/TokenAuthenticator\";\nimport UsernameAndPasswordToken from \"./Auth/UsernameAndPasswordToken\";\n\nimport * as HTTP from \"./HTTP\";\nimport * as Errors from \"./Errors\";\nimport Context from \"./Context\";\nimport * as Utils from \"./Utils\";\n\nexport {\n\tAuthenticationToken,\n\tAuthenticator,\n\tBasicAuthenticator,\n\tToken,\n\tTokenAuthenticator,\n\tUsernameAndPasswordToken\n}\n\nexport enum Method {\n\tBASIC,\n\tTOKEN\n}\n\nexport class Class {\n\tprivate context:Context;\n\n\tprivate method:Method = null;\n\tprivate authenticators:Array<Authenticator<AuthenticationToken>>;\n\tprivate authenticator:Authenticator<AuthenticationToken>;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\n\t\tthis.authenticators = [];\n\t\tthis.authenticators.push( new TokenAuthenticator( this.context ) );\n\t\tthis.authenticators.push( new BasicAuthenticator() );\n\t}\n\n\tisAuthenticated( askParent:boolean = true ):boolean {\n\t\treturn (\n\t\t\t( this.authenticator && this.authenticator.isAuthenticated() ) ||\n\t\t\t( askParent && !! this.context.parentContext && this.context.parentContext.Auth.isAuthenticated() )\n\t\t);\n\t}\n\n\tauthenticate( username:string, password:string ):Promise<void>;\n\tauthenticate( authenticationToken:AuthenticationToken ):Promise<void>;\n\tauthenticate( usernameOrToken:any, password:string = null ):Promise<void> {\n\t\treturn new Promise<void>( ( resolve:( result:any ) => void, reject:( reject:Error ) => void ) => {\n\t\t\tif( ! usernameOrToken ) throw new Errors.IllegalArgumentError( \"Either a username or an authenticationToken are required.\" );\n\n\t\t\tlet authenticationToken:AuthenticationToken;\n\t\t\tif( Utils.isString( usernameOrToken ) ) {\n\t\t\t\tlet username:string = usernameOrToken;\n\t\t\t\tif( ! password ) throw new Errors.IllegalArgumentError( \"A password is required when providing a username.\" );\n\t\t\t\tauthenticationToken = new UsernameAndPasswordToken( username, password );\n\t\t\t} else {\n\t\t\t\tauthenticationToken = usernameOrToken;\n\t\t\t}\n\n\t\t\tif( this.authenticator ) this.clearAuthentication();\n\n\t\t\tthis.authenticator = this.getAuthenticator( authenticationToken );\n\n\t\t\tresolve( this.authenticator.authenticate( authenticationToken ) );\n\t\t});\n\t}\n\n\taddAuthentication( requestOptions:HTTP.Request.Options ):void {\n\t\tif( this.isAuthenticated( false ) ) {\n\t\t\tthis.authenticator.addAuthentication( requestOptions );\n\t\t} else if( !! this.context.parentContext ) {\n\t\t\tthis.context.parentContext.Auth.addAuthentication( requestOptions );\n\t\t} else {\n\t\t\tconsole.warn( \"There is no authentication to add to the request.\" );\n\t\t}\n\t}\n\n\tclearAuthentication():void {\n\t\tif( ! this.authenticator ) return;\n\n\t\tthis.authenticator.clearAuthentication();\n\t\tthis.authenticator = null;\n\t}\n\n\tprivate getAuthenticator( authenticationToken:AuthenticationToken ):Authenticator<AuthenticationToken> {\n\t\tfor( let authenticator of this.authenticators ) {\n\t\t\tif( authenticator.supports( authenticationToken ) ) return authenticator;\n\t\t}\n\n\t\tthrow new Errors.IllegalStateError( \"The configured authentication method isn\\'t supported.\" );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}