{"version":3,"sources":["HTTP/Errors/client/UnsupportedMediaTypeError.ts"],"names":["UnsupportedMediaTypeError","UnsupportedMediaTypeError.constructor","UnsupportedMediaTypeError.statusCode","UnsupportedMediaTypeError.name"],"mappings":";;;;;AAAA,0BAAsB,gBAAgB,CAAC,CAAA;AAEvC,IAAM,IAAI,GAAU,2BAA2B,CAAC;AAChD,IAAM,UAAU,GAAU,GAAG,CAAC;AAE9B;IAAwCA,6CAASA;IAAjDA;QAAwCC,8BAASA;IAIjDA,CAACA;IAHAD,sBAAWA,uCAAUA;aAArBA,cAAiCE,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA;;;OAAAF;IAErDA,sBAAIA,2CAAIA;aAARA,cAAoBG,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;;;OAAAH;IACnCA,gCAACA;AAADA,CAJA,AAICA,EAJuC,mBAAS,EAIhD;AAED;kBAAe,yBAAyB,CAAC","file":"HTTP/Errors/client/UnsupportedMediaTypeError.js","sourcesContent":["import RESTError from \"./../HTTPError\";\n\nconst name:string = \"UnsupportedMediaTypeError\";\nconst statusCode:number = 415;\n\nclass UnsupportedMediaTypeError extends RESTError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n}\n\nexport default UnsupportedMediaTypeError;\n"],"sourceRoot":"/source/"}