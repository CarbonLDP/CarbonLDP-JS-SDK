{"version":3,"sources":["HTTP/Errors/client/RequestHeaderFieldsTooLargeError.ts"],"names":["RequestHeaderFieldsTooLargeError","RequestHeaderFieldsTooLargeError.constructor","RequestHeaderFieldsTooLargeError.statusCode","RequestHeaderFieldsTooLargeError.name"],"mappings":";;;;;;;QAEM,IAAI,EACJ,UAAU;;;;;;;YADV,IAAI,GAAU,kCAAkC,CAAC;YACjD,UAAU,GAAU,GAAG,CAAC;YAE9B;gBAA+CA,oDAASA;gBAAxDA;oBAA+CC,8BAASA;gBAIxDA,CAACA;gBAHAD,sBAAWA,8CAAUA;yBAArBA,cAAiCE,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA;;;mBAAAF;gBAErDA,sBAAIA,kDAAIA;yBAARA,cAAoBG,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;;;mBAAAH;gBACnCA,uCAACA;YAADA,CAJA,AAICA,EAJ8C,mBAAS,EAIvD;YAED,oBAAe,gCAAgC,EAAC","file":"HTTP/Errors/client/RequestHeaderFieldsTooLargeError.js","sourcesContent":["import HTTPError from \"./../HTTPError\";\n\nconst name:string = \"RequestHeaderFieldsTooLargeError\";\nconst statusCode:number = 431;\n\nclass RequestHeaderFieldsTooLargeError extends HTTPError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n}\n\nexport default RequestHeaderFieldsTooLargeError;\n"],"sourceRoot":"/source/"}