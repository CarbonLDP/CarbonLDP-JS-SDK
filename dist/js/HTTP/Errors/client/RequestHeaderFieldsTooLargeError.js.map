{"version":3,"sources":["HTTP/Errors/client/RequestHeaderFieldsTooLargeError.ts"],"names":["RequestHeaderFieldsTooLargeError","RequestHeaderFieldsTooLargeError.constructor","RequestHeaderFieldsTooLargeError.statusCode","RequestHeaderFieldsTooLargeError.name"],"mappings":";;;;;AAAA,0BAAsB,gBAAgB,CAAC,CAAA;AAEvC,IAAM,IAAI,GAAU,kCAAkC,CAAC;AACvD,IAAM,UAAU,GAAU,GAAG,CAAC;AAE9B;IAA+CA,oDAASA;IAAxDA;QAA+CC,8BAASA;IAIxDA,CAACA;IAHAD,sBAAWA,8CAAUA;aAArBA,cAAiCE,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA;;;OAAAF;IAErDA,sBAAIA,kDAAIA;aAARA,cAAoBG,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;;;OAAAH;IACnCA,uCAACA;AAADA,CAJA,AAICA,EAJ8C,mBAAS,EAIvD;AAED;kBAAe,gCAAgC,CAAC","file":"HTTP/Errors/client/RequestHeaderFieldsTooLargeError.js","sourcesContent":["import HTTPError from \"./../HTTPError\";\n\nconst name:string = \"RequestHeaderFieldsTooLargeError\";\nconst statusCode:number = 431;\n\nclass RequestHeaderFieldsTooLargeError extends HTTPError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n}\n\nexport default RequestHeaderFieldsTooLargeError;\n"],"sourceRoot":"/source/"}