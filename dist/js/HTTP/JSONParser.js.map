{"version":3,"sources":["HTTP/JSONParser.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;YAIrD;gBAAA;gBAWA,CAAC;gBAVA,qBAAK,GAAL,UAAO,IAAW;oBACjB,MAAM,CAAC,IAAI,OAAO,CAAU,UAAE,OAAiC,EAAE,MAA8B;wBAC9F,IAAI,CAAC;4BACJ,OAAO,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;wBAC/B,CAAE;wBAAA,KAAK,CAAC,CAAE,KAAM,CAAC,CAAC,CAAC;4BAClB,2BAA2B;4BAC3B,MAAM,CAAE,KAAK,CAAE,CAAC;wBACjB,CAAC;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC;gBACF,YAAC;YAAD,CAXA,AAWC,IAAA;YAXD,yBAWC,CAAA;YAED,oBAAe,KAAK,EAAC","file":"HTTP/JSONParser.js","sourcesContent":["/// <reference path=\"./../../typings/typings.d.ts\" />\n\nimport Parser from \"./Parser\";\n\nexport class Class implements Parser<Object> {\n\tparse( body:string ):Promise<Object> {\n\t\treturn new Promise<Object>( ( resolve:( result:string ) => void, reject:( error:Error ) => void ) => {\n\t\t\ttry {\n\t\t\t\tresolve( JSON.parse( body ) );\n\t\t\t} catch ( error ) {\n\t\t\t\t// TODO: Handle SyntaxError\n\t\t\t\treject( error );\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}