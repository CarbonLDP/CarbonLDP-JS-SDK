{"version":3,"sources":["HTTP/Header.ts"],"names":[],"mappings":"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","file":"HTTP/Header.js","sourcesContent":["/// <reference path=\"../../typings/typings.d.ts\" />\n\nimport * as Utils from \"./../Utils\";\n\nexport class Class {\n\tconstructor();\n\tconstructor( values:Value[] );\n\tconstructor( value:string );\n\tconstructor( valueOrValues?:(string | Value[]) ) {\n\t\tif ( ! valueOrValues ) {\n\t\t\treturn;\n\t\t} else if ( Array.isArray( valueOrValues ) ) {\n\t\t\tthis.values = <Value[]> valueOrValues;\n\t\t} else {\n\t\t\tthis.setValues( <string> valueOrValues );\n\t\t}\n\t}\n\n\tvalues:Value[] = [];\n\n\ttoString():string {\n\t\treturn this.values.join( \", \" );\n\t}\n\n\tprivate setValues( valuesString:string ):void {\n\t\tthis.values = [];\n\n\t\tlet valueStrings:string[] = valuesString.split( \",\" );\n\t\tfor ( let i:number = 0, length:number = valueStrings.length; i < length; i ++ ) {\n\t\t\tlet valueString:string = valueStrings[ i ].trim();\n\t\t\tthis.values.push( new Value( valueString ) );\n\t\t}\n\t}\n}\n\nexport class Value {\n\tprivate value:string;\n\n\tconstructor( value:string ) {\n\t\tthis.value = value;\n\t}\n\n\ttoString():string {\n\t\treturn this.value;\n\t}\n}\n\nexport class Util {\n\tstatic parseHeaders( headersString:string ):Map<string, Class> {\n\t\tlet headers:Map<string, Class> = new Map<string, Class>();\n\n\t\tlet headerStrings:string[] = headersString.split( /\\r?\\n/ );\n\t\tfor ( let i:number = 0, length:number = headerStrings.length; i < length; i ++ ) {\n\t\t\tlet headerString:string = headerStrings[ i ];\n\t\t\tif ( ! headerString.trim() ) continue;\n\n\t\t\tlet parts:string[] = headerString.split( \":\" );\n\t\t\tif ( parts.length < 2 ) throw new Error( \"ParseError: The header couldn't be parsed.\" );\n\t\t\tif ( parts.length > 2 ) parts[ 1 ] = parts.slice( 1 ).join( \":\" );\n\n\t\t\tlet name:string = parts[ 0 ].trim();\n\t\t\tlet header:Class = new Class( parts[ 1 ].trim() );\n\t\t\tif ( headers.has( name ) ) {\n\t\t\t\tlet existingHeader:Class = headers.get( name );\n\t\t\t\texistingHeader.values.concat( header.values );\n\t\t\t} else headers.set( name, header );\n\t\t}\n\n\t\treturn headers;\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}