{"version":3,"sources":["HTTP/Header.ts"],"names":["Class","Class.constructor","Class.toString","Class.setValues","Value","Value.constructor","Value.cleanString","Value.toString","Value.setValue","Value.setMain","Value.setSecondary","Util","Util.constructor","Util.parseHeaders"],"mappings":"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","file":"HTTP/Header.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n\nimport * as Utils from \"./../Utils\";\n\nexport class Class {\n\tconstructor();\n\tconstructor( values:Value[] );\n\tconstructor( value:string );\n\tconstructor( valueOrValues?:(string | Value[]) ) {\n\t\tif ( ! valueOrValues ) {\n\t\t\treturn;\n\t\t} else if ( Array.isArray( valueOrValues ) ) {\n\t\t\tthis.values = <Value[]> valueOrValues;\n\t\t} else {\n\t\t\tthis.setValues( <string> valueOrValues );\n\t\t}\n\t}\n\n\tvalues:Value[] = [];\n\n\ttoString():string {\n\t\treturn this.values.join( \", \" );\n\t}\n\n\tprivate setValues( valuesString:string ):void {\n\t\tthis.values = [];\n\n\t\tlet valueStrings:string[] = valuesString.split( \",\" );\n\t\tfor ( let i:number = 0, length:number = valueStrings.length; i < length; i ++ ) {\n\t\t\tlet valueString:string = valueStrings[ i ];\n\t\t\tlet value:Value = new Value( valueString );\n\t\t\tthis.values.push( value );\n\t\t}\n\t}\n}\n\nexport class Value {\n\tconstructor( value:string );\n\tconstructor( mainKey:string, mainValue:string, secondaryKey:string, secondaryValue:string );\n\tconstructor( value:string, mainValue?:string, secondaryKey?:string, secondaryValue?:string ) {\n\t\tif ( mainValue ) {\n\t\t\tthis.mainKey = value;\n\t\t\tthis.mainValue = mainValue;\n\t\t\tthis.secondaryKey = secondaryKey;\n\t\t\tthis.secondaryValue = secondaryValue;\n\t\t} else this.setValue( value );\n\t}\n\n\tmainKey:string = null;\n\tmainValue:string = null;\n\tsecondaryKey:string = null;\n\tsecondaryValue:string = null;\n\n\tprivate static cleanString( toClean:string ):string {\n\t\ttoClean = toClean.trim();\n\t\t// toClean = (Utils.S.startsWith( toClean, \"\\\"\" ) || Utils.S.startsWith( toClean, \"'\" )) ? toClean.substr( 1, toClean.length ) : toClean;\n\t\t// toClean = (Utils.S.endsWith( toClean, \"\\\"\" ) || Utils.S.endsWith( toClean, \"'\" )) ? toClean.substr( 0, toClean.length - 1 ) : toClean;\n\t\treturn toClean;\n\t}\n\n\ttoString():string {\n\t\tlet result:string = \"\";\n\t\tif ( this.mainKey ) result += this.mainKey + \"=\";\n\t\tresult += this.mainValue;\n\t\tif ( this.secondaryKey || this.secondaryValue ) result += \"; \";\n\t\tif ( this.secondaryKey ) result += this.secondaryKey + \"=\";\n\t\tif ( this.secondaryValue ) result += this.secondaryValue;\n\t\treturn result;\n\t}\n\n\tprivate setValue( value:string ):void {\n\t\tlet parts:string[] = value.split( \";\" );\n\t\tthis.setMain( parts[ 0 ] );\n\t\tif ( parts.length > 1 ) this.setSecondary( parts[ 1 ] );\n\t}\n\n\tprivate setMain( main:string ):void {\n\t\tlet parts:string[] = main.split( \"=\" );\n\t\tif ( parts.length === 1 ) {\n\t\t\tthis.mainValue = Value.cleanString( parts[ 0 ] );\n\t\t} else if ( parts.length === 2 ) {\n\t\t\tthis.mainKey = Value.cleanString( parts[ 0 ] );\n\t\t\tthis.mainValue = Value.cleanString( parts[ 1 ] );\n\t\t} else this.mainValue = main;\n\t}\n\n\tprivate setSecondary( secondary:string ):void {\n\t\tlet parts:string[] = secondary.split( \"=\" );\n\t\tif ( parts.length === 1 ) {\n\t\t\tthis.secondaryValue = Value.cleanString( parts[ 0 ] );\n\t\t} else if ( parts.length === 2 ) {\n\t\t\tthis.secondaryKey = Value.cleanString( parts[ 0 ] );\n\t\t\tthis.secondaryValue = Value.cleanString( parts[ 1 ] );\n\t\t} else this.secondaryValue = secondary;\n\t}\n}\n\nexport class Util {\n\tstatic parseHeaders( headersString:string ):Map<string, Class> {\n\t\tlet headers:Map<string, Class> = new Map<string, Class>();\n\n\t\tlet headerStrings:string[] = headersString.split( \"\\r\\n\" );\n\t\tfor ( let i:number = 0, length:number = headerStrings.length; i < length; i ++ ) {\n\t\t\tlet headerString:string = headerStrings[ i ];\n\t\t\tif ( ! headerString.trim() ) continue;\n\n\t\t\tlet parts:string[] = headerString.split( \":\" );\n\t\t\tif ( parts.length < 2 ) throw new Error( \"ParseError: The header couldn't be parsed.\" );\n\t\t\tif ( parts.length > 2 ) parts[ 1 ] = parts.slice( 1 ).join( \":\" );\n\n\t\t\tlet name:string = parts[ 0 ].trim();\n\t\t\tlet header:Class = new Class( parts[ 1 ].trim() );\n\t\t\tif ( headers.has( name ) ) {\n\t\t\t\tlet existingHeader:Class = headers.get( name );\n\t\t\t\texistingHeader.values.concat( header.values );\n\t\t\t} else headers.set( name, header );\n\t\t}\n\n\t\treturn headers;\n\t}\n}\n"],"sourceRoot":"/source/"}