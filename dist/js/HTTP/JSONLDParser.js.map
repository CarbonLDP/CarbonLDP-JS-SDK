{"version":3,"sources":["HTTP/JSONLDParser.ts"],"names":["Class","Class.constructor","Class.parse","Class.expandJSON"],"mappings":"AAAA,mDAAmD;;;;;;;;;;;;;YAOnD;gBAAAA;gBAsBAC,CAACA;gBArBAD,qBAAKA,GAALA,UAAOA,KAAYA;oBAAnBE,iBAKCA;oBAJAA,IAAIA,UAAUA,GAAcA,IAAIA,oBAAUA,EAAEA,CAACA;oBAC7CA,MAAMA,CAACA,UAAUA,CAACA,KAAKA,CAAEA,KAAKA,CAAEA,CAACA,IAAIA,CAAEA,UAAEA,YAAmBA;wBAC3DA,MAAMA,CAACA,KAAIA,CAACA,UAAUA,CAAEA,YAAYA,CAAEA,CAACA;oBACxCA,CAACA,CAACA,CAACA;gBACJA,CAACA;gBAEOF,0BAAUA,GAAlBA,UAAoBA,YAAmBA,EAAEA,OAA6BA;oBACrEG,MAAMA,CAACA,IAAIA,OAAOA,CAAEA,UAAEA,OAAiCA,EAAEA,MAA4BA;wBACpFA,MAAMA,CAACA,MAAMA,CAAEA,YAAYA,EAAEA,OAAOA,EAAEA,UAAEA,KAASA,EAAEA,QAAeA;4BACjEA,EAAEA,CAACA,CAAEA,KAAMA,CAACA,CAACA,CAACA;gCACbA,mCAAmCA;gCACnCA,MAAMA,CAAEA,KAAKA,CAAEA,CAACA;4BACjBA,CAACA;4BAEDA,YAAYA,GAAGA,QAAQA,CAACA;4BAExBA,OAAOA,CAAEA,QAAQA,CAAEA,CAACA;wBACrBA,CAACA,CAAEA,CAACA;oBACLA,CAACA,CAAEA,CAACA;gBACLA,CAACA;gBACFH,YAACA;YAADA,CAtBA,AAsBCA,IAAA;YAtBD,yBAsBC,CAAA;YAED,oBAAe,KAAK,EAAC","file":"HTTP/JSONLDParser.js","sourcesContent":["/// <reference path=\"../../typings/typings.d.ts\" />\n\nimport * as jsonld from \"jsonld\";\n\nimport Parser from \"./Parser\";\nimport JSONParser from \"./JSONParser\";\n\nexport class Class implements Parser<any> {\n\tparse( input:string ):Promise<any> {\n\t\tlet jsonParser:JSONParser = new JSONParser();\n\t\treturn jsonParser.parse( input ).then( ( parsedObject:Object ) => {\n\t\t\treturn this.expandJSON( parsedObject );\n\t\t});\n\t}\n\n\tprivate expandJSON( parsedObject:Object, options?:jsonld.ExpandOptions ):Promise<Object> {\n\t\treturn new Promise( ( resolve:( result:Object ) => void, reject:( error:any ) => void ):void => {\n\t\t\tjsonld.expand( parsedObject, options, ( error:any, expanded:Object ):void => {\n\t\t\t\tif ( error ) {\n\t\t\t\t\t// TODO: Handle jsonld.expand error\n\t\t\t\t\treject( error );\n\t\t\t\t}\n\n\t\t\t\tparsedObject = expanded;\n\n\t\t\t\tresolve( expanded );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}