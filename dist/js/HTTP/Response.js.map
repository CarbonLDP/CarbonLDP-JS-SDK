{"version":3,"sources":["HTTP/Response.ts"],"names":["Class","Class.constructor","Class.setHeaders","Util","Util.constructor","Util.getETag"],"mappings":"AAAA,IAAY,MAAM,WAAM,UAAU,CAAC,CAAA;AAEnC;IACCA,eAAaA,OAAsBA;QAClCC,IAAIA,CAACA,MAAMA,GAAGA,OAAOA,CAACA,MAAMA,CAACA;QAC7BA,IAAIA,CAACA,IAAIA,GAAGA,OAAOA,CAACA,YAAYA,CAACA;QACjCA,IAAIA,CAACA,UAAUA,CAAEA,OAAOA,CAAEA,CAACA;QAE3BA,IAAIA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;IACxBA,CAACA;IAQOD,0BAAUA,GAAlBA,UAAoBA,OAAsBA;QACzCE,IAAIA,aAAaA,GAAUA,OAAOA,CAACA,qBAAqBA,EAAEA,CAACA;QAC3DA,EAAEA,CAACA,CAAEA,aAAcA,CAACA,CAACA,CAACA;YACrBA,IAAIA,CAACA,OAAOA,GAAGA,MAAMA,CAACA,IAAIA,CAACA,YAAYA,CAAEA,aAAaA,CAAEA,CAACA;QAC1DA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACPA,IAAIA,CAACA,OAAOA,GAAGA,IAAIA,GAAGA,EAAwBA,CAACA;QAChDA,CAACA;IACFA,CAACA;IACFF,YAACA;AAADA,CAvBA,AAuBCA,IAAA;AAvBY,aAAK,QAuBjB,CAAA;AAED;IAAAG;IAYAC,CAACA;IAXOD,YAAOA,GAAdA,UAAgBA,QAAcA;QAC7BE,EAAEA,CAAAA,CAAEA,CAAEA,QAAQA,IAAIA,CAAEA,QAAQA,CAACA,OAAQA,CAACA;YAACA,MAAMA,CAACA,IAAIA,CAACA;QAEnDA,IAAIA,UAAUA,GAAgBA,QAAQA,CAACA,OAAOA,CAACA,GAAGA,CAAEA,MAAMA,CAAEA,CAACA;QAE7DA,EAAEA,CAAAA,CAAEA,CAAEA,UAAWA,CAACA;YAACA,MAAMA,CAACA,IAAIA,CAACA;QAC/BA,EAAEA,CAAAA,CAAEA,CAAEA,UAAUA,CAACA,MAAMA,CAACA,MAAOA,CAACA;YAACA,MAAMA,CAACA,IAAIA,CAACA;QAC7CA,EAAEA,CAAAA,CAAEA,UAAUA,CAACA,MAAMA,CAACA,MAAMA,GAAGA,CAAEA,CAACA;YAACA,OAAOA,CAACA,IAAIA,CAAEA,wDAAwDA,EAAEA,QAAQA,CAAEA,CAACA;QAEtHA,MAAMA,CAACA,UAAUA,CAACA,MAAMA,CAAEA,CAACA,CAAEA,CAACA,QAAQA,EAAEA,CAACA;IAC1CA,CAACA;IACFF,WAACA;AAADA,CAZA,AAYCA,IAAA;AAZY,YAAI,OAYhB,CAAA;AAED;kBAAe,KAAK,CAAC","file":"HTTP/Response.js","sourcesContent":["import * as Header from \"./Header\";\n\nexport class Class {\n\tconstructor( request:XMLHttpRequest ) {\n\t\tthis.status = request.status;\n\t\tthis.data = request.responseText;\n\t\tthis.setHeaders( request );\n\n\t\tthis.request = request;\n\t}\n\n\tstatus:number;\n\tdata:string;\n\theaders:Map<string, Header.Class>;\n\trequest:XMLHttpRequest;\n\n\n\tprivate setHeaders( request:XMLHttpRequest ):void {\n\t\tlet headersString:string = request.getAllResponseHeaders();\n\t\tif ( headersString ) {\n\t\t\tthis.headers = Header.Util.parseHeaders( headersString );\n\t\t} else {\n\t\t\tthis.headers = new Map<string, Header.Class>();\n\t\t}\n\t}\n}\n\nexport class Util {\n\tstatic getETag( response:Class ):string {\n\t\tif( ! response || ! response.headers ) return null;\n\n\t\tlet etagHeader:Header.Class = response.headers.get( \"ETag\" );\n\n\t\tif( ! etagHeader ) return null;\n\t\tif( ! etagHeader.values.length ) return null;\n\t\tif( etagHeader.values.length > 1 ) console.warn( \"The response contains more than one ETag. Response: %o\", response );\n\n\t\treturn etagHeader.values[ 0 ].toString();\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}