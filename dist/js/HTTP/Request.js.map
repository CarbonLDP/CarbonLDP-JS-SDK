{"version":3,"sources":["HTTP/Request.ts"],"names":["setHeaders","onLoad","onError","rejectRequest","Service","Service.constructor","Service.send","Service.options","Service.head","Service.get","Service.post","Service.put","Service.patch","Service.delete"],"mappings":"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","file":"HTTP/Request.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n/// <reference path=\"../../typings/es6-promise/es6-promise.d.ts\" />\n\nimport Method from './Method';\nimport Response from './Response';\nimport * as Header from './Header';\n\nimport * as Errors from './Errors';\n\nimport * as Utils from './../Utils';\n\ninterface Options {\n\theaders?: Map<string, Header.Class>;\n\tsendCredentialsOnCORS?:boolean;\n\ttimeout?:number;\n\trequest?: XMLHttpRequest;\n}\n\nfunction setHeaders( request:XMLHttpRequest, headers:Map<string, Header.Class> ):void {\n\tvar namesIterator:Iterator<string> = headers.keys();\n\tvar next = namesIterator.next();\n\twhile ( ! next.done ) {\n\t\tvar name:string = next.value;\n\t\tvar value:Header.Class = headers.get( name );\n\t\trequest.setRequestHeader( name, value.toString() );\n\n\t\tnext = namesIterator.next();\n\t}\n}\n\nfunction onLoad( resolve:( value:Response | Thenable<Response> ) => void, reject:( value:Response ) => void, request:XMLHttpRequest ):()=>void {\n\treturn () => {\n\t\tvar response:Response = new Response( request );\n\t\tif ( request.status >= 200 && request.status <= 299 ) resolve( response );\n\t\telse rejectRequest( reject, request );\n\t};\n}\n\nfunction onError( reject:( error:any ) => void, request:XMLHttpRequest ):()=>void {\n\treturn () => {\n\t\trejectRequest( reject, request );\n\t};\n}\n\nfunction rejectRequest( reject:( error:any ) => void, request:XMLHttpRequest ):void {\n\tvar response:Response = new Response( request );\n\n\tif ( response.status >= 400 && response.status < 600 ) {\n\t\tif ( Errors.statusCodeMap.has( response.status ) ) {\n\t\t\tvar e = Errors.statusCodeMap.get( response.status );\n\t\t\t// TODO: Set error message\n\t\t\treject( new e( \"\", response ) );\n\t\t}\n\t}\n\n\treject( new Errors.UnknownError( \"\", response ) );\n}\n\nclass Service {\n\n\tprivate static defaultOptions:Options = {\n\t\tsendCredentialsOnCORS: true\n\t};\n\n\tstatic send( method:(Method | string), url:string, options?:Options ):Promise<Response>;\n\tstatic send( method:(Method | string), url:string, body:string, options?:Options ):Promise<Response>;\n\tstatic send( method:any, url:string, bodyOrOptions:any = Service.defaultOptions, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\tvar body:string = Utils.isString( bodyOrOptions ) ? bodyOrOptions : null;\n\t\toptions = Utils.isString( bodyOrOptions ) ? options : bodyOrOptions;\n\t\tif ( Utils.isNumber( method ) ) method = Method[ method ];\n\n\n\t\treturn new Promise<Response>(\n\t\t\tfunction ( resolve, reject ) {\n\t\t\t\tvar request:XMLHttpRequest = options.request ? options.request : new XMLHttpRequest();\n\t\t\t\trequest.open( method, url, true );\n\n\t\t\t\tif ( options.headers ) setHeaders( request, options.headers );\n\t\t\t\trequest.withCredentials = options.sendCredentialsOnCORS;\n\t\t\t\tif ( options.timeout ) request.timeout = options.timeout;\n\n\t\t\t\trequest.onload = onLoad( resolve, reject, request );\n\t\t\t\trequest.onerror = onError( reject, request );\n\n\t\t\t\tif ( body ) request.send( body );\n\t\t\t\telse request.send();\n\t\t\t}\n\t\t);\n\t}\n\n\tstatic options( url:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.OPTIONS, url, options );\n\t}\n\n\tstatic head( url:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.HEAD, url, options );\n\t}\n\n\tstatic get( url:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.GET, url, options );\n\t}\n\n\tstatic post( url:string, body:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.POST, url, body, options );\n\t}\n\n\tstatic put( url:string, body:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.PUT, url, body, options );\n\t}\n\n\tstatic patch( url:string, body:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.PATCH, url, body, options );\n\t}\n\n\tstatic delete( url:string, body:string, options:Options = Service.defaultOptions ):Promise<Response> {\n\t\treturn Service.send( Method.DELETE, url, body, options );\n\t}\n}\n\n//@formatter:off\nexport {\n\tOptions,\n\tService\n};\n//@formatter:on"],"sourceRoot":"/source/"}