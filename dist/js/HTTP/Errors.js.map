{"version":3,"sources":["HTTP/Errors.ts"],"names":[],"mappings":"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","file":"HTTP/Errors.js","sourcesContent":["import BadRequestError from './Errors/client/BadRequestError';\nimport ConflictError from './Errors/client/ConflictError';\nimport ForbiddenError from './Errors/client/ForbiddenError';\nimport MethodNotAllowedError from './Errors/client/MethodNotAllowedError';\nimport NotAcceptableError from './Errors/client/NotAcceptableError';\nimport NotFoundError from './Errors/client/NotFoundError';\nimport PreconditionFailedError from './Errors/client/PreconditionFailedError';\nimport PreconditionRequiredError from './Errors/client/PreconditionRequiredError';\nimport RequestEntityTooLargeError from './Errors/client/RequestEntityTooLargeError';\nimport RequestHeaderFieldsTooLargeError from './Errors/client/RequestHeaderFieldsTooLargeError';\nimport RequestURITooLongError from './Errors/client/RequestURITooLongError';\nimport TooManyRequestsError from './Errors/client/TooManyRequestsError';\nimport UnauthorizedError from './Errors/client/UnauthorizedError';\nimport UnsupportedMediaTypeError from './Errors/client/UnsupportedMediaTypeError';\n\nimport BadGatewayError from './Errors/server/BadGatewayError';\nimport GatewayTimeoutError from './Errors/server/GatewayTimeoutError';\nimport HTTPVersionNotSupportedError from './Errors/server/HTTPVersionNotSupportedError';\nimport InternalServerErrorError from './Errors/server/InternalServerErrorError';\nimport NotImplementedError from './Errors/server/NotImplementedError';\nimport ServiceUnavailableError from './Errors/server/ServiceUnavailableError';\n\nimport UnknownError from './Errors/UnknownError';\n\n\nvar client:Array<any> = [];\nclient.push( BadRequestError );\nclient.push( ConflictError );\nclient.push( ForbiddenError );\nclient.push( MethodNotAllowedError );\nclient.push( NotAcceptableError );\nclient.push( NotFoundError );\nclient.push( PreconditionFailedError );\nclient.push( PreconditionRequiredError );\nclient.push( RequestEntityTooLargeError );\nclient.push( RequestHeaderFieldsTooLargeError );\nclient.push( RequestURITooLongError );\nclient.push( TooManyRequestsError );\nclient.push( UnauthorizedError );\nclient.push( UnsupportedMediaTypeError );\n\nvar server:Array<any> = [];\nserver.push( BadGatewayError );\nserver.push( GatewayTimeoutError );\nserver.push( HTTPVersionNotSupportedError );\nserver.push( InternalServerErrorError );\nserver.push( NotImplementedError );\nserver.push( ServiceUnavailableError );\n\nvar statusCodeMap:Map<number, any> = new Map<number, any>();\nfor ( let i:number = 0, length:number = client.length; i < length; i ++ ) {\n\tstatusCodeMap.set( client[ i ].statusCode, client[ i ] );\n}\nfor ( let i:number = 0, length:number = server.length; i < length; i ++ ) {\n\tstatusCodeMap.set( server[ i ].statusCode, server[ i ] );\n}\n\n//@formatter:off\nexport {\n\tBadRequestError,\n\tConflictError,\n\tForbiddenError,\n\tMethodNotAllowedError,\n\tNotAcceptableError,\n\tNotFoundError,\n\tPreconditionFailedError,\n\tPreconditionRequiredError,\n\tRequestEntityTooLargeError,\n\tRequestHeaderFieldsTooLargeError,\n\tRequestURITooLongError,\n\tTooManyRequestsError,\n\tUnauthorizedError,\n\tUnsupportedMediaTypeError,\n\n\tBadGatewayError,\n\tGatewayTimeoutError,\n\tHTTPVersionNotSupportedError,\n\tInternalServerErrorError,\n\tNotImplementedError,\n\tServiceUnavailableError,\n\n\tUnknownError,\n\n\tclient,\n\tserver,\n\tstatusCodeMap\n};\n//@formatter:on"],"sourceRoot":"/source/"}