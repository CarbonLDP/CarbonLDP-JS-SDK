{"version":3,"sources":["Carbon.ts"],"names":["Carbon","Carbon.constructor","Carbon.version","Carbon.resolve","Carbon.getAPIDescription","Carbon.registerDefaultDefinitions"],"mappings":"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","file":"Carbon.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport * as APIDescription from \"./APIDescription\";\nimport Apps from \"./Apps\";\nimport * as Auth from \"./Auth\";\nimport Context from \"./Context\";\nimport * as Document from \"./Document\";\nimport Documents from \"./Documents\";\nimport * as HTTP from \"./HTTP\";\nimport Platform from \"./Platform\";\nimport * as RDF from \"./RDF\";\nimport defaultSettings from \"./settings\";\nimport * as Utils from \"./Utils\";\n\nclass Carbon extends Context {\n\t/* tslint:disable: variable-name typedef */\n\tstatic Apps = Apps;\n\tstatic Auth = Auth;\n\tstatic Document = Document;\n\tstatic Documents = Documents;\n\tstatic HTTP = HTTP;\n\tstatic RDF = RDF;\n\tstatic Utils = Utils;\n\t/* tslint:enable: variable-name typedef */\n\n\tstatic get version():string { return \"0.12.0-ALPHA\"; }\n\n\t// TODO: Rename it to Apps. TypeScript is throwing an error regarding a static variable that will not be accessible if this instance variable has the same name\n\tapps:Apps;\n\tplatform:Platform;\n\n\tconstructor( settings:any ) {\n\t\tsuper();\n\n\t\tsettings = settings ? settings : defaultSettings;\n\n\t\tUtils.M.extend( this.settings, Utils.M.from( settings ) );\n\n\t\tthis.registerDefaultDefinitions();\n\n\t\tthis.apps = new Apps( this );\n\t\tthis.platform = new Platform( this );\n\n\t\tthis.Auth = this.platform.Auth;\n\t}\n\n\tresolve( uri:string ):string {\n\t\tif ( RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\t\tlet finalURI:string = this.settings.get( \"http.ssl\" ) ? \"https://\" : \"http://\";\n\t\tfinalURI += this.settings.get( \"domain\" );\n\t\treturn RDF.URI.Util.resolve( finalURI, uri );\n\t}\n\n\tgetAPIDescription():Promise<APIDescription.Class> {\n\t\treturn this.Documents.get( \"platform/api/\" ).then(\n\t\t\t( processedResponse:HTTP.ProcessedResponse<Document.Class> ) => {\n\t\t\t\treturn <any> processedResponse.result;\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate registerDefaultDefinitions():void {\n\t\tthis.addDefinition( APIDescription.RDF_CLASS, APIDescription.DEFINITION );\n\t}\n}\n\nexport default Carbon;\n"],"sourceRoot":"/source/"}