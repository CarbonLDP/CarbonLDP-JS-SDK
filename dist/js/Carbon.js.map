{"version":3,"sources":["Carbon.ts"],"names":["Carbon","Carbon.constructor","Carbon.version","Carbon.resolve","Carbon.getAPIDescription"],"mappings":"AAAA,gDAAgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAahD;gBAAqBA,0BAAeA;gBAiBnCA,gBAAaA,QAAYA;oBACxBC,iBAAOA,CAACA;oBAERA,QAAQA,GAAGA,QAAQA,GAAGA,QAAQA,GAAGA,kBAAeA,CAACA;oBAEjDA,KAAKA,CAACA,CAACA,CAACA,MAAMA,CAAEA,IAAIA,CAACA,QAAQA,EAAEA,KAAKA,CAACA,CAACA,CAACA,IAAIA,CAAEA,QAAQA,CAAEA,CAAEA,CAACA;oBAE1DA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,cAAIA,CAAEA,IAAIA,CAAEA,CAACA;gBAC9BA,CAACA;gBAbDD,sBAAWA,iBAAOA;oBAFlBA,kCAAkCA;yBAElCA,cAA8BE,MAAMA,CAACA,cAAcA,CAACA,CAACA,CAACA;;;mBAAAF;gBAetDA,wBAAOA,GAAPA,UAASA,GAAUA;oBAClBG,EAAEA,CAACA,CAAEA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,UAAUA,CAAEA,GAAGA,CAAGA,CAACA;wBAACA,MAAMA,CAACA,GAAGA,CAACA;oBAEjDA,IAAIA,QAAQA,GAAUA,IAAIA,CAACA,QAAQA,CAACA,GAAGA,CAAEA,UAAUA,CAAEA,GAAGA,UAAUA,GAAGA,SAASA,CAACA;oBAC/EA,QAAQA,IAAIA,IAAIA,CAACA,QAAQA,CAACA,GAAGA,CAAEA,QAAQA,CAAEA,GAAGA,GAAGA,GAAGA,IAAIA,CAACA,UAAUA,CAAEA,oBAAoBA,CAAEA,CAACA;oBAC1FA,MAAMA,CAACA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,CAAEA,QAAQA,EAAEA,GAAGA,CAAEA,CAACA;gBAC9CA,CAACA;gBAEDH,kCAAiBA,GAAjBA;oBACCI,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAAEA,MAAMA,CAAEA,CAACA,IAAIA,CACvCA,UAAEA,EAAiEA;4BAA/DA,WAAWA,UAAEA,QAAQA;wBACxBA,MAAMA,CAAOA,WAAWA,CAACA;oBAC1BA,CAACA,CACDA,CAACA;gBACHA,CAACA;gBAvCDJ,mCAAmCA;gBAC5BA,WAAIA,GAAeA,cAAIA,CAACA;gBACxBA,WAAIA,GAAeA,IAAIA,CAACA;gBACxBA,eAAQA,GAAmBA,QAAQA,CAACA;gBACpCA,gBAASA,GAAoBA,mBAASA,CAACA;gBACvCA,WAAIA,GAAeA,IAAIA,CAACA;gBACxBA,UAAGA,GAAcA,GAAGA,CAACA;gBACrBA,YAAKA,GAAgBA,KAAKA,CAACA;gBAiCnCA,aAACA;YAADA,CA1CA,AA0CCA,EA1CoB,yBAAe,EA0CnC;YAED,oBAAe,MAAM,EAAC","file":"Carbon.js","sourcesContent":["/// <reference path=\"../typings/typings.d.ts\" />\n\nimport * as APIDescription from \"./APIDescription\";\nimport Apps from \"./Apps\";\nimport * as Auth from \"./Auth\";\nimport AbstractContext from \"./AbstractContext\";\nimport * as Document from \"./Document\";\nimport Documents from \"./Documents\";\nimport * as HTTP from \"./HTTP\";\nimport * as RDF from \"./RDF\";\nimport defaultSettings from \"./settings\";\nimport * as Utils from \"./Utils\";\n\nclass Carbon extends AbstractContext {\n\n\t/* tslint:disable: variable-name */\n\tstatic Apps:typeof Apps = Apps;\n\tstatic Auth:typeof Auth = Auth;\n\tstatic Document:typeof Document = Document;\n\tstatic Documents:typeof Documents = Documents;\n\tstatic HTTP:typeof HTTP = HTTP;\n\tstatic RDF:typeof RDF = RDF;\n\tstatic Utils:typeof Utils = Utils;\n\t/* tslint:enable: variable-name */\n\n\tstatic get version():string { return \"0.12.0-ALPHA\"; }\n\n\t// TODO: Rename it to Apps. TypeScript is throwing an error regarding a static variable that will not be accessible if this instance variable has the same name\n\tapps:Apps;\n\n\tconstructor( settings:any ) {\n\t\tsuper();\n\n\t\tsettings = settings ? settings : defaultSettings;\n\n\t\tUtils.M.extend( this.settings, Utils.M.from( settings ) );\n\n\t\tthis.apps = new Apps( this );\n\t}\n\n\tresolve( uri:string ):string {\n\t\tif ( RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\t\tlet finalURI:string = this.settings.get( \"http.ssl\" ) ? \"https://\" : \"http://\";\n\t\tfinalURI += this.settings.get( \"domain\" ) + \"/\" + this.getSetting( \"platform.container\" );\n\t\treturn RDF.URI.Util.resolve( finalURI, uri );\n\t}\n\n\tgetAPIDescription():Promise<APIDescription.Class> {\n\t\treturn this.Documents.get( \"api/\" ).then(\n\t\t\t( [ description, response ]:[ Document.Class, HTTP.Response.Class ] ) => {\n\t\t\t\treturn <any> description;\n\t\t\t}\n\t\t);\n\t}\n}\n\nexport default Carbon;\n"],"sourceRoot":"/source/"}