{"version":3,"sources":["SPARQL/ResultsParser.ts"],"names":["Class","Class.constructor","Class.parse"],"mappings":"AAAA,iDAAiD;AAKjD,2BAAuB,sBAAsB,CAAC,CAAA;AAI9C;IAAAA;IAQAC,CAACA;IAPAD,qBAAKA,GAALA,UAAOA,KAAYA;QAClBE,IAAIA,UAAUA,GAAcA,IAAIA,oBAAUA,EAAEA,CAACA;QAC7CA,MAAMA,CAACA,UAAUA,CAACA,KAAKA,CAAEA,KAAKA,CAAEA,CAACA,IAAIA,CAAEA,UAAEA,YAAmBA;YAC3DA,kBAAkBA;YAClBA,MAAMA,CAAOA,YAAYA,CAACA;QAC3BA,CAACA,CAACA,CAACA;IACJA,CAACA;IACFF,YAACA;AAADA,CARA,AAQCA,IAAA;AARY,aAAK,QAQjB,CAAA;AAED;kBAAe,KAAK,CAAC","file":"SPARQL/ResultsParser.js","sourcesContent":["/// <reference path=\"./../../typings/tsd.d.ts\" />\n\nimport * as jsonld from \"jsonld\";\n\nimport Parser from \"./../HTTP/Parser\";\nimport JSONParser from \"./../HTTP/JSONParser\";\n\nimport Results from \"./Results\";\n\nexport class Class implements Parser<Results> {\n\tparse( input:string ):Promise<any> {\n\t\tlet jsonParser:JSONParser = new JSONParser();\n\t\treturn jsonParser.parse( input ).then( ( parsedObject:Object ) => {\n\t\t\t// TODO: Add sugar\n\t\t\treturn <any> parsedObject;\n\t\t});\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}