{"version":3,"sources":["SPARQL/ResultsParser.ts"],"names":["Class","Class.constructor","Class.parse"],"mappings":"AAAA,qDAAqD;;;;;;;;;;YASrD;gBAAAA;gBAQAC,CAACA;gBAPAD,qBAAKA,GAALA,UAAOA,KAAYA;oBAClBE,IAAIA,UAAUA,GAAcA,IAAIA,oBAAUA,EAAEA,CAACA;oBAC7CA,MAAMA,CAACA,UAAUA,CAACA,KAAKA,CAAEA,KAAKA,CAAEA,CAACA,IAAIA,CAAEA,UAAEA,YAAmBA;wBAC3DA,kBAAkBA;wBAClBA,MAAMA,CAAOA,YAAYA,CAACA;oBAC3BA,CAACA,CAACA,CAACA;gBACJA,CAACA;gBACFF,YAACA;YAADA,CARA,AAQCA,IAAA;YARD,yBAQC,CAAA;YAED,oBAAe,KAAK,EAAC","file":"SPARQL/ResultsParser.js","sourcesContent":["/// <reference path=\"./../../typings/typings.d.ts\" />\n\nimport * as jsonld from \"jsonld\";\n\nimport Parser from \"./../HTTP/Parser\";\nimport JSONParser from \"./../HTTP/JSONParser\";\n\nimport Results from \"./Results\";\n\nexport class Class implements Parser<Results> {\n\tparse( input:string ):Promise<any> {\n\t\tlet jsonParser:JSONParser = new JSONParser();\n\t\treturn jsonParser.parse( input ).then( ( parsedObject:Object ) => {\n\t\t\t// TODO: Add sugar\n\t\t\treturn <any> parsedObject;\n\t\t});\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}