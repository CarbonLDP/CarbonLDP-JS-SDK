{"version":3,"sources":["SPARQL/RawResultsParser.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;YASrD;gBAAA;gBAOA,CAAC;gBANA,qBAAK,GAAL,UAAO,KAAY;oBAClB,IAAI,UAAU,GAAc,IAAI,oBAAU,EAAE,CAAC;oBAC7C,MAAM,CAAC,UAAU,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC,IAAI,CAAE,UAAE,YAAmB;wBAC3D,MAAM,CAAO,YAAY,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACJ,CAAC;gBACF,YAAC;YAAD,CAPA,AAOC,IAAA;YAPD,yBAOC,CAAA;YAED,oBAAe,KAAK,EAAC","file":"SPARQL/RawResultsParser.js","sourcesContent":["/// <reference path=\"./../../typings/typings.d.ts\" />\n\nimport * as jsonld from \"jsonld\";\n\nimport Parser from \"./../HTTP/Parser\";\nimport JSONParser from \"./../HTTP/JSONParser\";\n\nimport RawResults from \"./RawResults\";\n\nexport class Class implements Parser<RawResults> {\n\tparse( input:string ):Promise<any> {\n\t\tlet jsonParser:JSONParser = new JSONParser();\n\t\treturn jsonParser.parse( input ).then( ( parsedObject:Object ) => {\n\t\t\treturn <any> parsedObject;\n\t\t});\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}