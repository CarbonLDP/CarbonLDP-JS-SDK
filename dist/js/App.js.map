{"version":3,"sources":["App.ts"],"names":["AppContext","AppContext.constructor","AppContext.resolve","AppContext.getBase","Factory","Factory.constructor","Factory.hasClassProperties"],"mappings":"AAAA,kDAAkD;;;;;;;;QAgBrC,SAAS,EAET,MAAM,uBAiDR,OAAO;;;;;;;;;;;;;;;;YAnDL,uBAAA,SAAS,GAAU,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAA,CAAC;YAE3C,oBAAA,MAAM,GAAsB;gBACxC,MAAM,EAAE;oBACP,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI;oBAC3B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;iBAC/B;gBACD,eAAe,EAAE;oBAChB,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa;oBACpC,OAAO,EAAE,KAAK;iBACd;gBACD,cAAc,EAAE;oBACf,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,YAAY;iBACnC;aACD,CAAA,CAAC;YAEF;gBAAyBA,8BAAeA;gBAIvCA,oBAAaA,aAAqBA,EAAEA,GAASA;oBAC5CC,kBAAOA,aAAaA,CAAEA,CAACA;oBACvBA,IAAIA,CAACA,GAAGA,GAAGA,GAAGA,CAACA;oBAEfA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA,OAAOA,CAAEA,IAAIA,CAACA,GAAGA,CAAEA,CAACA;gBACtCA,CAACA;gBAEDD,4BAAOA,GAAPA,UAASA,GAAUA;oBAClBE,EAAEA,CAACA,CAAEA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,UAAUA,CAAEA,GAAGA,CAAGA,CAACA;wBAACA,MAAMA,CAACA,GAAGA,CAACA;oBAEjDA,IAAIA,QAAQA,GAAUA,IAAIA,CAACA,aAAaA,CAACA,OAAOA,CAAEA,IAAIA,CAACA,IAAIA,CAAEA,CAACA;oBAC9DA,MAAMA,CAACA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,CAAEA,QAAQA,EAAEA,GAAGA,CAAEA,CAACA;gBAC9CA,CAACA;gBAEOF,4BAAOA,GAAfA,UAAiBA,QAAcA;oBAC9BG,MAAMA,CAACA,QAAQA,CAACA,aAAaA,CAACA,EAAEA,CAACA;gBAClCA,CAACA;gBACFH,iBAACA;YAADA,CArBA,AAqBCA,EArBwB,yBAAe,EAqBvC;YAGc,gCAAO;YAGtB;gBAAAI;gBAMAC,CAACA;gBALAD,oCAAkBA,GAAlBA,UAAoBA,QAAeA;oBAClCE,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,eAAeA,CAAEA,CACrDA,CAACA;gBACHA,CAACA;gBACFF,cAACA;YAADA,CANA,AAMCA,IAAA;YAND,6BAMC,CAAA;YAEU,qBAAA,OAAO,GAAW,IAAI,OAAO,EAAE,CAAA,CAAC","file":"App.js","sourcesContent":["/// <reference path=\"./../typings/typings.d.ts\" />\n\nimport AbstractContext from \"./AbstractContext\";\nimport Context from \"./Context\";\nimport * as Document from \"./Document\";\nimport Documents from \"./Documents\";\nimport * as LDP from \"./LDP\";\nimport * as NS from \"./NS\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nexport interface Class extends Document.Class {\n\trootContainer:LDP.PersistedContainer.Class;\n}\n\nexport const RDF_CLASS:string = NS.CS.Class.Application;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"name\": {\n\t\t\"@id\": NS.CS.Predicate.name,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"rootContainer\": {\n\t\t\"@id\": NS.CS.Predicate.rootContainer,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"allowsOrigin\": {\n\t\t\"@id\": NS.CS.Predicate.allowsOrigin\n\t},\n};\n\nclass AppContext extends AbstractContext {\n\tprivate app:Class;\n\tprivate base:string;\n\n\tconstructor( parentContext:Context, app:Class ) {\n\t\tsuper( parentContext );\n\t\tthis.app = app;\n\n\t\tthis.base = this.getBase( this.app );\n\t}\n\n\tresolve( uri:string ):string {\n\t\tif ( RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\t\tlet finalURI:string = this.parentContext.resolve( this.base );\n\t\treturn RDF.URI.Util.resolve( finalURI, uri );\n\t}\n\n\tprivate getBase( resource:Class ):string {\n\t\treturn resource.rootContainer.id;\n\t}\n}\n\nexport {\n\tAppContext as Context\n};\n\nexport class Factory {\n\thasClassProperties( resource:Object ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"rootContainer\" )\n\t\t);\n\t}\n}\n\nexport let factory:Factory = new Factory();\n\nexport default Class;\n"],"sourceRoot":"/source/"}