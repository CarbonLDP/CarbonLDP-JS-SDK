{"version":3,"sources":["App.ts"],"names":["AppContext","AppContext.constructor","AppContext.resolve","AppContext.getBase","Factory","Factory.constructor","Factory.hasClassProperties"],"mappings":"AAAA,8CAA8C;;;;;;AAE9C,gCAA4B,mBAAmB,CAAC,CAAA;AAKhD,IAAY,EAAE,WAAM,MAAM,CAAC,CAAA;AAE3B,IAAY,GAAG,WAAM,OAAO,CAAC,CAAA;AAC7B,IAAY,KAAK,WAAM,SAAS,CAAC,CAAA;AAMpB,iBAAS,GAAU,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC;AAE3C,cAAM,GAAsB;IACxC,eAAe,EAAE;QAChB,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa;QACpC,OAAO,EAAE,KAAK;KACd;CACD,CAAC;AAEF;IAAyBA,8BAAeA;IAIvCA,oBAAaA,aAAqBA,EAAEA,GAASA;QAC5CC,kBAAOA,aAAaA,CAAEA,CAACA;QACvBA,IAAIA,CAACA,GAAGA,GAAGA,GAAGA,CAACA;QAEfA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA,OAAOA,CAAEA,IAAIA,CAACA,GAAGA,CAAEA,CAACA;IACtCA,CAACA;IAEDD,4BAAOA,GAAPA,UAASA,GAAUA;QAClBE,EAAEA,CAACA,CAAEA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,UAAUA,CAAEA,GAAGA,CAAGA,CAACA;YAACA,MAAMA,CAACA,GAAGA,CAACA;QAEjDA,IAAIA,QAAQA,GAAUA,IAAIA,CAACA,aAAaA,CAACA,OAAOA,CAAEA,IAAIA,CAACA,IAAIA,CAAEA,CAACA;QAC9DA,MAAMA,CAACA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,CAAEA,QAAQA,EAAEA,GAAGA,CAAEA,CAACA;IAC9CA,CAACA;IAEOF,4BAAOA,GAAfA,UAAiBA,QAAcA;QAC9BG,MAAMA,CAACA,QAAQA,CAACA,aAAaA,CAACA,EAAEA,CAACA;IAClCA,CAACA;IACFH,iBAACA;AAADA,CArBA,AAqBCA,EArBwB,yBAAe,EAqBvC;AAGc,eAAO,cAHrB;AAMD;IAAAI;IAMAC,CAACA;IALAD,oCAAkBA,GAAlBA,UAAoBA,QAAeA;QAClCE,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,eAAeA,CAAEA,CACrDA,CAACA;IACHA,CAACA;IACFF,cAACA;AAADA,CANA,AAMCA,IAAA;AANY,eAAO,UAMnB,CAAA;AAEU,eAAO,GAAW,IAAI,OAAO,EAAE,CAAC","file":"App.js","sourcesContent":["/// <reference path=\"./../typings/tsd.d.ts\" />\n\nimport AbstractContext from \"./AbstractContext\";\nimport Context from \"./Context\";\nimport * as Document from \"./Document\";\nimport Documents from \"./Documents\";\nimport * as LDP from \"./LDP\";\nimport * as NS from \"./NS\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nexport interface Class extends Document.Class {\n\trootContainer:LDP.PersistedContainer.Class;\n}\n\nexport const RDF_CLASS:string = NS.CS.Class.Application;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"rootContainer\": {\n\t\t\"@id\": NS.CS.Predicate.rootContainer,\n\t\t\"@type\": \"@id\",\n\t},\n};\n\nclass AppContext extends AbstractContext {\n\tprivate app:Class;\n\tprivate base:string;\n\n\tconstructor( parentContext:Context, app:Class ) {\n\t\tsuper( parentContext );\n\t\tthis.app = app;\n\n\t\tthis.base = this.getBase( this.app );\n\t}\n\n\tresolve( uri:string ):string {\n\t\tif ( RDF.URI.Util.isAbsolute( uri ) ) return uri;\n\n\t\tlet finalURI:string = this.parentContext.resolve( this.base );\n\t\treturn RDF.URI.Util.resolve( finalURI, uri );\n\t}\n\n\tprivate getBase( resource:Class ):string {\n\t\treturn resource.rootContainer.id;\n\t}\n}\n\nexport {\n\tAppContext as Context\n};\n\nexport class Factory {\n\thasClassProperties( resource:Object ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"rootContainer\" )\n\t\t);\n\t}\n}\n\nexport let factory:Factory = new Factory();\n\nexport default Class;\n"],"sourceRoot":"/source/"}