{"version":3,"sources":["Persisted.ts"],"names":[],"mappings":";;;;;IA6BA;QACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;;;;;;;YA3BD;gBAKC;oBACC,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAA6B,CAAC;oBAChD,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAA6B,CAAC;oBAChD,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAA6B,CAAC;gBACpD,CAAC;gBACF,oBAAC;YAAD,CAVA,AAUC,IAAA;YAED,WAAK,gBAAgB;gBACpB,qDAAG,CAAA;gBACH,qDAAG,CAAA;gBACH,2DAAM,CAAA;YACP,CAAC,EAJI,gBAAgB,KAAhB,gBAAgB,QAIpB;YAaD;gBAAA;gBA6CA,CAAC;gBA5CO,UAAE,GAAT,UAAW,MAAa;oBACvB,MAAM,CAAC,CACN,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,QAAQ,CAAE;wBAC5C,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,gBAAgB,CAAE;wBACpD,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,SAAS,CAAE,CACtC,CAAC;gBACH,CAAC;gBAIM,YAAI,GAAX,UAAa,eAAmB;oBAC/B,IAAI,OAAO,GAAY,KAAK,CAAC,OAAO,CAAE,eAAe,CAAE,GAAa,eAAe,GAAG,CAAU,eAAe,CAAE,CAAC;oBAClH,IAAI,MAAM,GAAe,EAAE,CAAC;oBAE5B,GAAG,CAAC,CAAE,IAAI,CAAC,GAAU,CAAC,EAAE,QAAM,GAAU,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,QAAM,EAAE,CAAC,EAAG,EAAG,CAAC;wBAC3E,IAAI,KAAK,GAAkB,OAAO,CAAE,CAAC,CAAE,CAAC;wBAExC,EAAE,CAAC,CAAE,CAAE,OAAO,CAAC,EAAE,CAAE,KAAK,CAAG,CAAC;4BAAC,OAAO,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;wBAE7D,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;oBACtB,CAAC;oBAED,EAAE,CAAC,CAAE,KAAK,CAAC,OAAO,CAAE,eAAe,CAAG,CAAC;wBAAC,MAAM,CAAC,MAAM,CAAC;oBACtD,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;gBACpB,CAAC;gBAEc,sBAAc,GAA7B,UAA+B,KAAe;oBAC7C,MAAM,CAAC,gBAAgB,CAAE,KAAK,EAAE;wBAC/B,QAAQ,EAAE;4BACT,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE,KAAK;4BACjB,KAAK,EAAE,KAAK;yBACZ;wBACD,gBAAgB,EAAE;4BACjB,QAAQ,EAAE,KAAK;4BACf,UAAU,EAAE,KAAK;4BACjB,KAAK,EAAE,IAAI,aAAa,EAAE;yBAC1B;qBACD,CAAE,CAAC;oBAEJ,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;oBAExB,MAAM,CAAC,KAAK,CAAC;gBACd,CAAC;gBACF,cAAC;YAAD,CA7CA,AA6CC,IAAA;YAGA,yCAAa;YACb,+CAAgB;YAEhB,6BAAO","file":"Persisted.js","sourcesContent":["/// <reference path=\"./../typings/typings.d.ts\" />\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nclass Modifications {\n\tadd:Map<string, RDF.Value.Class[]>;\n\tset:Map<string, RDF.Value.Class[]>;\n\tdelete:Map<string, RDF.Value.Class[]>;\n\n\tconstructor() {\n\t\tthis.add = new Map<string, RDF.Value.Class[]>();\n\t\tthis.set = new Map<string, RDF.Value.Class[]>();\n\t\tthis.delete = new Map<string, RDF.Value.Class[]>();\n\t}\n}\n\nenum ModificationType {\n\tADD,\n\tSET,\n\tDELETE\n}\n\ninterface Persisted {\n\t_dirty:boolean;\n\t_modifications:Modifications;\n\n\tisDirty():boolean;\n}\n\nfunction isDirty():boolean {\n\treturn this._dirty;\n}\n\nclass Factory {\n\tstatic is( object:Object ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( object, \"_dirty\" ) &&\n\t\t\tUtils.hasPropertyDefined( object, \"_modifications\" ) &&\n\t\t\tUtils.hasFunction( object, \"isDirty\" )\n\t\t);\n\t}\n\n\tstatic from( object:Object ):Persisted;\n\tstatic from( objects:Object[] ):Persisted[];\n\tstatic from( objectOrObjects:any ):any {\n\t\tlet objects:Object[] = Utils.isArray( objectOrObjects ) ? <Object[]>objectOrObjects : [ <Object>objectOrObjects ];\n\t\tlet values:Persisted[] = [];\n\n\t\tfor ( let i:number = 0, length:number = objects.length; i < length; i ++ ) {\n\t\t\tlet value:Persisted = <any>objects[ i ];\n\n\t\t\tif ( ! Factory.is( value ) ) Factory.injectBehavior( value );\n\n\t\t\tvalues.push( value );\n\t\t}\n\n\t\tif ( Utils.isArray( objectOrObjects ) ) return values;\n\t\treturn values[ 0 ];\n\t}\n\n\tprivate static injectBehavior( value:Persisted ):Persisted {\n\t\tObject.defineProperties( value, {\n\t\t\t\"_dirty\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: false,\n\t\t\t},\n\t\t\t\"_modifications\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: new Modifications(),\n\t\t\t},\n\t\t} );\n\n\t\tvalue.isDirty = isDirty;\n\n\t\treturn value;\n\t}\n}\n\nexport {\n\tModifications,\n\tModificationType,\n\tPersisted as Class,\n\tFactory\n};\n"],"sourceRoot":"/source/"}