{"version":3,"sources":["Persisted.ts"],"names":["Modifications","Modifications.constructor","ModificationType","isDirty","Factory","Factory.constructor","Factory.is","Factory.from","Factory.injectBehavior"],"mappings":"AAEA,IAAY,KAAK,WAAM,SAAS,CAAC,CAAA;AAEjC;IAKCA;QACCC,IAAIA,CAACA,GAAGA,GAAGA,IAAIA,GAAGA,EAA6BA,CAACA;QAChDA,IAAIA,CAACA,GAAGA,GAAGA,IAAIA,GAAGA,EAA6BA,CAACA;QAChDA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,GAAGA,EAA6BA,CAACA;IACpDA,CAACA;IACFD,oBAACA;AAADA,CAVA,AAUCA,IAAA;AAmEA,qBAAa,iBAnEb;AAED,IAAK,gBAIJ;AAJD,WAAK,gBAAgB;IACpBE,qDAAGA,CAAAA;IACHA,qDAAGA,CAAAA;IACHA,2DAAMA,CAAAA;AACPA,CAACA,EAJI,gBAAgB,KAAhB,gBAAgB,QAIpB;AA8DA,wBAAgB,oBA9DhB;AASD;IACCC,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;AACpBA,CAACA;AAED;IAAAC;IA6CAC,CAACA;IA5COD,UAAEA,GAATA,UAAWA,MAAaA;QACvBE,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,MAAMA,EAAEA,QAAQA,CAAEA;YAC5CA,KAAKA,CAACA,kBAAkBA,CAAEA,MAAMA,EAAEA,gBAAgBA,CAAEA;YACpDA,KAAKA,CAACA,WAAWA,CAAEA,MAAMA,EAAEA,SAASA,CAAEA,CACtCA,CAACA;IACHA,CAACA;IAIMF,YAAIA,GAAXA,UAAaA,eAAmBA;QAC/BG,IAAIA,OAAOA,GAAYA,KAAKA,CAACA,OAAOA,CAAEA,eAAeA,CAAEA,GAAaA,eAAeA,GAAGA,CAAUA,eAAeA,CAAEA,CAACA;QAClHA,IAAIA,MAAMA,GAAeA,EAAEA,CAACA;QAE5BA,GAAGA,CAACA,CAAEA,GAAGA,CAACA,CAACA,GAAUA,CAACA,EAAEA,QAAMA,GAAUA,OAAOA,CAACA,MAAMA,EAAEA,CAACA,GAAGA,QAAMA,EAAEA,CAACA,EAAGA,EAAGA,CAACA;YAC3EA,IAAIA,KAAKA,GAAkBA,OAAOA,CAAEA,CAACA,CAAEA,CAACA;YAExCA,EAAEA,CAACA,CAAEA,CAAEA,OAAOA,CAACA,EAAEA,CAAEA,KAAKA,CAAGA,CAACA;gBAACA,OAAOA,CAACA,cAAcA,CAAEA,KAAKA,CAAEA,CAACA;YAE7DA,MAAMA,CAACA,IAAIA,CAAEA,KAAKA,CAAEA,CAACA;QACtBA,CAACA;QAEDA,EAAEA,CAACA,CAAEA,KAAKA,CAACA,OAAOA,CAAEA,eAAeA,CAAGA,CAACA;YAACA,MAAMA,CAACA,MAAMA,CAACA;QACtDA,MAAMA,CAACA,MAAMA,CAAEA,CAACA,CAAEA,CAACA;IACpBA,CAACA;IAEcH,sBAAcA,GAA7BA,UAA+BA,KAAeA;QAC7CI,MAAMA,CAACA,gBAAgBA,CAAEA,KAAKA,EAAEA;YAC/BA,QAAQA,EAAEA;gBACTA,QAAQA,EAAEA,IAAIA;gBACdA,UAAUA,EAAEA,KAAKA;gBACjBA,KAAKA,EAAEA,KAAKA;aACZA;YACDA,gBAAgBA,EAAEA;gBACjBA,QAAQA,EAAEA,KAAKA;gBACfA,UAAUA,EAAEA,KAAKA;gBACjBA,KAAKA,EAAEA,IAAIA,aAAaA,EAAEA;aAC1BA;SACDA,CAAEA,CAACA;QAEJA,KAAKA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;QAExBA,MAAMA,CAACA,KAAKA,CAACA;IACdA,CAACA;IACFJ,cAACA;AAADA,CA7CA,AA6CCA,IAAA;AAMA,eAAO,WANP;AAOC","file":"Persisted.js","sourcesContent":["/// <reference path=\"./../typings/es6/es6.d.ts\" />\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nclass Modifications {\n\tadd:Map<string, RDF.Value.Class[]>;\n\tset:Map<string, RDF.Value.Class[]>;\n\tdelete:Map<string, RDF.Value.Class[]>;\n\n\tconstructor() {\n\t\tthis.add = new Map<string, RDF.Value.Class[]>();\n\t\tthis.set = new Map<string, RDF.Value.Class[]>();\n\t\tthis.delete = new Map<string, RDF.Value.Class[]>();\n\t}\n}\n\nenum ModificationType {\n\tADD,\n\tSET,\n\tDELETE\n}\n\ninterface Persisted {\n\t_dirty:boolean;\n\t_modifications:Modifications;\n\n\tisDirty():boolean;\n}\n\nfunction isDirty():boolean {\n\treturn this._dirty;\n}\n\nclass Factory {\n\tstatic is( object:Object ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( object, \"_dirty\" ) &&\n\t\t\tUtils.hasPropertyDefined( object, \"_modifications\" ) &&\n\t\t\tUtils.hasFunction( object, \"isDirty\" )\n\t\t);\n\t}\n\n\tstatic from( object:Object ):Persisted;\n\tstatic from( objects:Object[] ):Persisted[];\n\tstatic from( objectOrObjects:any ):any {\n\t\tlet objects:Object[] = Utils.isArray( objectOrObjects ) ? <Object[]>objectOrObjects : [ <Object>objectOrObjects ];\n\t\tlet values:Persisted[] = [];\n\n\t\tfor ( let i:number = 0, length:number = objects.length; i < length; i ++ ) {\n\t\t\tlet value:Persisted = <any>objects[ i ];\n\n\t\t\tif ( ! Factory.is( value ) ) Factory.injectBehavior( value );\n\n\t\t\tvalues.push( value );\n\t\t}\n\n\t\tif ( Utils.isArray( objectOrObjects ) ) return values;\n\t\treturn values[ 0 ];\n\t}\n\n\tprivate static injectBehavior( value:Persisted ):Persisted {\n\t\tObject.defineProperties( value, {\n\t\t\t\"_dirty\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: false,\n\t\t\t},\n\t\t\t\"_modifications\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: new Modifications(),\n\t\t\t},\n\t\t} );\n\n\t\tvalue.isDirty = isDirty;\n\n\t\treturn value;\n\t}\n}\n\nexport {\n\tModifications,\n\tModificationType,\n\tPersisted as Class,\n\tFactory\n};\n"],"sourceRoot":"/source/"}