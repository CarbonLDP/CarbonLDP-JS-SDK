{"version":3,"sources":["Persisted.ts"],"names":["isDirty","Modifications","Modifications.constructor","ModificationType","Factory","Factory.constructor","Factory.is","Factory.from","Factory.injectBehavior"],"mappings":";;;IA6BA;QACCA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;IACpBA,CAACA;;;;;;;YA3BD;gBAKCC;oBACCC,IAAIA,CAACA,GAAGA,GAAGA,IAAIA,GAAGA,EAA6BA,CAACA;oBAChDA,IAAIA,CAACA,GAAGA,GAAGA,IAAIA,GAAGA,EAA6BA,CAACA;oBAChDA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,GAAGA,EAA6BA,CAACA;gBACpDA,CAACA;gBACFD,oBAACA;YAADA,CAVA,AAUCA,IAAA;YAED,WAAK,gBAAgB;gBACpBE,qDAAGA,CAAAA;gBACHA,qDAAGA,CAAAA;gBACHA,2DAAMA,CAAAA;YACPA,CAACA,EAJI,gBAAgB,KAAhB,gBAAgB,QAIpB;YAaD;gBAAAC;gBA6CAC,CAACA;gBA5COD,UAAEA,GAATA,UAAWA,MAAaA;oBACvBE,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,MAAMA,EAAEA,QAAQA,CAAEA;wBAC5CA,KAAKA,CAACA,kBAAkBA,CAAEA,MAAMA,EAAEA,gBAAgBA,CAAEA;wBACpDA,KAAKA,CAACA,WAAWA,CAAEA,MAAMA,EAAEA,SAASA,CAAEA,CACtCA,CAACA;gBACHA,CAACA;gBAIMF,YAAIA,GAAXA,UAAaA,eAAmBA;oBAC/BG,IAAIA,OAAOA,GAAYA,KAAKA,CAACA,OAAOA,CAAEA,eAAeA,CAAEA,GAAaA,eAAeA,GAAGA,CAAUA,eAAeA,CAAEA,CAACA;oBAClHA,IAAIA,MAAMA,GAAeA,EAAEA,CAACA;oBAE5BA,GAAGA,CAACA,CAAEA,GAAGA,CAACA,CAACA,GAAUA,CAACA,EAAEA,QAAMA,GAAUA,OAAOA,CAACA,MAAMA,EAAEA,CAACA,GAAGA,QAAMA,EAAEA,CAACA,EAAGA,EAAGA,CAACA;wBAC3EA,IAAIA,KAAKA,GAAkBA,OAAOA,CAAEA,CAACA,CAAEA,CAACA;wBAExCA,EAAEA,CAACA,CAAEA,CAAEA,OAAOA,CAACA,EAAEA,CAAEA,KAAKA,CAAGA,CAACA;4BAACA,OAAOA,CAACA,cAAcA,CAAEA,KAAKA,CAAEA,CAACA;wBAE7DA,MAAMA,CAACA,IAAIA,CAAEA,KAAKA,CAAEA,CAACA;oBACtBA,CAACA;oBAEDA,EAAEA,CAACA,CAAEA,KAAKA,CAACA,OAAOA,CAAEA,eAAeA,CAAGA,CAACA;wBAACA,MAAMA,CAACA,MAAMA,CAACA;oBACtDA,MAAMA,CAACA,MAAMA,CAAEA,CAACA,CAAEA,CAACA;gBACpBA,CAACA;gBAEcH,sBAAcA,GAA7BA,UAA+BA,KAAeA;oBAC7CI,MAAMA,CAACA,gBAAgBA,CAAEA,KAAKA,EAAEA;wBAC/BA,QAAQA,EAAEA;4BACTA,QAAQA,EAAEA,IAAIA;4BACdA,UAAUA,EAAEA,KAAKA;4BACjBA,KAAKA,EAAEA,KAAKA;yBACZA;wBACDA,gBAAgBA,EAAEA;4BACjBA,QAAQA,EAAEA,KAAKA;4BACfA,UAAUA,EAAEA,KAAKA;4BACjBA,KAAKA,EAAEA,IAAIA,aAAaA,EAAEA;yBAC1BA;qBACDA,CAAEA,CAACA;oBAEJA,KAAKA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;oBAExBA,MAAMA,CAACA,KAAKA,CAACA;gBACdA,CAACA;gBACFJ,cAACA;YAADA,CA7CA,AA6CCA,IAAA;YAGA,yCAAa;YACb,+CAAgB;YAEhB,6BAAO","file":"Persisted.js","sourcesContent":["/// <reference path=\"./../typings/typings.d.ts\" />\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nclass Modifications {\n\tadd:Map<string, RDF.Value.Class[]>;\n\tset:Map<string, RDF.Value.Class[]>;\n\tdelete:Map<string, RDF.Value.Class[]>;\n\n\tconstructor() {\n\t\tthis.add = new Map<string, RDF.Value.Class[]>();\n\t\tthis.set = new Map<string, RDF.Value.Class[]>();\n\t\tthis.delete = new Map<string, RDF.Value.Class[]>();\n\t}\n}\n\nenum ModificationType {\n\tADD,\n\tSET,\n\tDELETE\n}\n\ninterface Persisted {\n\t_dirty:boolean;\n\t_modifications:Modifications;\n\n\tisDirty():boolean;\n}\n\nfunction isDirty():boolean {\n\treturn this._dirty;\n}\n\nclass Factory {\n\tstatic is( object:Object ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( object, \"_dirty\" ) &&\n\t\t\tUtils.hasPropertyDefined( object, \"_modifications\" ) &&\n\t\t\tUtils.hasFunction( object, \"isDirty\" )\n\t\t);\n\t}\n\n\tstatic from( object:Object ):Persisted;\n\tstatic from( objects:Object[] ):Persisted[];\n\tstatic from( objectOrObjects:any ):any {\n\t\tlet objects:Object[] = Utils.isArray( objectOrObjects ) ? <Object[]>objectOrObjects : [ <Object>objectOrObjects ];\n\t\tlet values:Persisted[] = [];\n\n\t\tfor ( let i:number = 0, length:number = objects.length; i < length; i ++ ) {\n\t\t\tlet value:Persisted = <any>objects[ i ];\n\n\t\t\tif ( ! Factory.is( value ) ) Factory.injectBehavior( value );\n\n\t\t\tvalues.push( value );\n\t\t}\n\n\t\tif ( Utils.isArray( objectOrObjects ) ) return values;\n\t\treturn values[ 0 ];\n\t}\n\n\tprivate static injectBehavior( value:Persisted ):Persisted {\n\t\tObject.defineProperties( value, {\n\t\t\t\"_dirty\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: false,\n\t\t\t},\n\t\t\t\"_modifications\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: new Modifications(),\n\t\t\t},\n\t\t} );\n\n\t\tvalue.isDirty = isDirty;\n\n\t\treturn value;\n\t}\n}\n\nexport {\n\tModifications,\n\tModificationType,\n\tPersisted as Class,\n\tFactory\n};\n"],"sourceRoot":"/source/"}