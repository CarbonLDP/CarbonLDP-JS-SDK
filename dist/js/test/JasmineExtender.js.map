{"version":3,"sources":["test/JasmineExtender.ts"],"names":["serialize","toJSON","module","submodule","clazz","interfaze","constructor","hasInterface","isDefined","hasConstructor","hasMethod","method","hasSignature","hasProperty","extendsClass"],"mappings":"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","file":"test/JasmineExtender.js","sourcesContent":["export interface SuiteDescriptor {\n\taccess?:string;\n\tsuiteType:string;\n\tname:string;\n\tdescription?:string;\n}\n\nexport interface SpecDescriptor {\n\taccess?:string;\n\tspecType:string;\n\tname?:string;\n\tdescription?:string;\n}\n\nexport interface InterfaceDescriptor {\n\tparent?:string;\n}\n\nexport interface InterfaceSuiteDescriptor extends SuiteDescriptor, InterfaceDescriptor {\n\n}\n\nexport interface InterfaceSpecDescriptor extends SpecDescriptor, InterfaceDescriptor {\n\n}\n\nexport interface ClassDescriptor extends InterfaceDescriptor {\n\tinterfaces?:string[];\n}\n\nexport interface ClassSuiteDescriptor extends SuiteDescriptor, ClassDescriptor {\n}\n\nexport interface ClassSpecDescriptor extends SpecDescriptor, ClassDescriptor {\n}\n\nexport interface PropertyDescriptor extends SpecDescriptor {\n\ttype:string;\n}\n\nexport interface MethodDescriptor extends SpecDescriptor {\n\targuments?:MethodArgument[];\n\treturns?:MethodReturn;\n}\n\nexport interface MethodArgument {\n\tname:string;\n\ttype:string;\n\tdescription?:string;\n\toptional?:boolean;\n\tdefault?:string;\n}\n\nexport interface MethodReturn {\n\ttype:string;\n\tdescription?:string;\n}\n\nexport function serialize( descriptor:SuiteDescriptor ):string\nexport function serialize( descriptor:PropertyDescriptor ):string;\nexport function serialize( descriptor:MethodDescriptor ):string;\nexport function serialize( descriptor:any ):string {\n\treturn \"JSON\" + JSON.stringify( descriptor );\n}\n\n\nfunction toJSON( descriptor:any ):string {\n\treturn \"JSON\" + JSON.stringify( descriptor );\n}\n\nexport const MODULE:string = \"module\";\nexport const SUBMODULE:string = \"submodule\";\nexport const CLASS:string = \"class\";\nexport const INTERFACE:string = \"interface\";\n\n\nexport const STATIC:string = \"static\";\nexport const INSTANCE:string = \"instance\";\n\nexport const CONSTRUCTOR:string = \"constructor\";\nexport const METHOD:string = \"method\";\nexport const SIGNATURE:string = \"signature\";\nexport const PROPERTY:string = \"property\";\nexport const SUPER_CLASS:string = \"super-class\";\n\nexport function module( name:string, description:string = null ):string {\n\tlet descriptor:SuiteDescriptor = {\n\t\tsuiteType: MODULE,\n\t\tname: name,\n\t\tdescription: description,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function submodule( access:string, name:string, description:string = null ):string {\n\tlet descriptor:SuiteDescriptor = {\n\t\tsuiteType: SUBMODULE,\n\t\taccess: access,\n\t\tname: name,\n\t\tdescription: description,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function clazz( name:string, description:string, parent:string = null, interfaces:Array<string> = null ):string {\n\tlet descriptor:ClassSuiteDescriptor = {\n\t\tsuiteType: CLASS,\n\t\tname: name,\n\t\tdescription: description,\n\t\tparent: parent,\n\t\tinterfaces: interfaces,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function interfaze( name:string, description:string, parent:string = null ):string {\n\tlet descriptor:InterfaceSuiteDescriptor = {\n\t\tsuiteType: INTERFACE,\n\t\tname: name,\n\t\tdescription: description,\n\t\tparent: parent,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function constructor( name:string, description:string ):string {\n\tlet descriptor:SuiteDescriptor = {\n\t\tsuiteType: CONSTRUCTOR,\n\t\tname: name,\n\t\tdescription: description,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function hasInterface( access:string, name:string ):string;\nexport function hasInterface( access:string, name:string, description:string = null ):string {\n\tlet descriptor:InterfaceSpecDescriptor = {\n\t\taccess: access,\n\t\tspecType: INTERFACE,\n\t\tname: name,\n\t\tdescription: description,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function isDefined():string {\n\treturn \"is defined\";\n}\n\nexport function hasConstructor():string;\nexport function hasConstructor( constructorArguments:MethodArgument[] ):string;\nexport function hasConstructor( description:string, constructorArguments:MethodArgument[] ):string\nexport function hasConstructor( argumentsOrDescription:any = null, constructorArguments:MethodArgument[] = null ):string {\n\tlet description:string = null;\n\n\tif ( typeof argumentsOrDescription === \"string\" ) {\n\t\tdescription = argumentsOrDescription;\n\t} else if ( Object.prototype.toString.call( argumentsOrDescription ) === \"[object Array]\" ) {\n\t\tconstructorArguments = argumentsOrDescription;\n\t}\n\n\tlet descriptor:MethodDescriptor = {\n\t\taccess: STATIC,\n\t\tspecType: CONSTRUCTOR,\n\t\tdescription: description,\n\t\targuments: constructorArguments,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function hasMethod( access:string, name:string ):string;\n\nexport function hasMethod( access:string, name:string, description:string ):string;\nexport function hasMethod( access:string, name:string, methodArguments:MethodArgument[] ):string;\nexport function hasMethod( access:string, name:string, returns:MethodReturn ):string;\n\nexport function hasMethod( access:string, name:string, description:string, methodArguments:MethodArgument[] ):string;\nexport function hasMethod( access:string, name:string, description:string, returns:MethodReturn ):string;\nexport function hasMethod( access:string, name:string, methodArguments:MethodArgument[], returns:MethodReturn ):string;\n\nexport function hasMethod( access:string, name:string, description:string, methodArguments:MethodArgument[], returns:MethodReturn ):string;\n\nexport function hasMethod( access:string, name:string, descriptionOrArgumentsOrReturns:any = null, argumentsOrReturns:any = null, returns:MethodReturn = null ):string {\n\tlet description:string = null, methodArguments:MethodArgument[] = [];\n\n\tif ( typeof descriptionOrArgumentsOrReturns === \"string\" ) {\n\t\tdescription = descriptionOrArgumentsOrReturns;\n\t} else if ( Object.prototype.toString.call( descriptionOrArgumentsOrReturns ) === \"[object Array]\" ) {\n\t\tmethodArguments = descriptionOrArgumentsOrReturns;\n\t} else if ( descriptionOrArgumentsOrReturns ) {\n\t\treturns = descriptionOrArgumentsOrReturns;\n\t}\n\n\tif ( Object.prototype.toString.call( argumentsOrReturns ) === \"[object Array]\" ) {\n\t\tmethodArguments = argumentsOrReturns;\n\t} else if ( argumentsOrReturns ) {\n\t\treturns = argumentsOrReturns;\n\t}\n\n\tlet descriptor:MethodDescriptor = {\n\t\taccess: access,\n\t\tspecType: METHOD,\n\t\tname: name,\n\t\tdescription: description,\n\t\targuments: methodArguments,\n\t\treturns: returns,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function method( access:string, name:string ):string;\nexport function method( access:string, name:string, description:string ):string;\nexport function method( access:string, name:string, description:string = null ):string {\n\tlet descriptor:SuiteDescriptor = {\n\t\taccess: access,\n\t\tsuiteType: METHOD,\n\t\tname: name,\n\t\tdescription: description,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function hasSignature():string;\nexport function hasSignature( description:string ):string;\nexport function hasSignature( description:string, methodArguments:MethodArgument[] ):string;\nexport function hasSignature( description:string, methodArguments:MethodArgument[], returns:MethodReturn ):string;\nexport function hasSignature( methodArguments:MethodArgument[] ):string;\nexport function hasSignature( methodArguments:MethodArgument[], returns:MethodReturn ):string;\nexport function hasSignature( returns:MethodReturn ):string;\nexport function hasSignature( descriptionOrArgumentsOrReturns:any = null, argumentsOrReturns:any = null, returns:MethodReturn = null ):string {\n\tlet description:string = null;\n\tlet methodArguments:MethodArgument[] = null;\n\n\tif ( typeof descriptionOrArgumentsOrReturns === \"string\" ) {\n\t\tdescription = descriptionOrArgumentsOrReturns;\n\t} else if ( Object.prototype.toString.call( descriptionOrArgumentsOrReturns ) === \"[object Array]\" ) {\n\t\tmethodArguments = descriptionOrArgumentsOrReturns;\n\t} else if ( descriptionOrArgumentsOrReturns ) {\n\t\treturns = descriptionOrArgumentsOrReturns;\n\t}\n\n\tif ( Object.prototype.toString.call( argumentsOrReturns ) === \"[object Array]\" ) {\n\t\tmethodArguments = argumentsOrReturns;\n\t} else if ( argumentsOrReturns ) {\n\t\treturns = argumentsOrReturns;\n\t}\n\n\tlet descriptor:MethodDescriptor = {\n\t\tspecType: SIGNATURE,\n\t\tdescription: description,\n\t\targuments: methodArguments,\n\t\treturns: returns,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\nexport function hasProperty( access:string, name:string, type:string, description:string = null ):string {\n\tlet descriptor:PropertyDescriptor = {\n\t\taccess: access,\n\t\tspecType: PROPERTY,\n\t\tname: name,\n\t\ttype: type,\n\t\tdescription: description,\n\t};\n\n\treturn toJSON( descriptor );\n}\n\n/* tslint:disable: typedef */\nexport let property = hasProperty;\n/* tslint:enable: typedef */\n\nexport function extendsClass( name:string ):string {\n\tlet descriptor:SpecDescriptor = {\n\t\tspecType: SUPER_CLASS,\n\t\tname: name,\n\t};\n\n\treturn toJSON( descriptor );\n}\n"],"sourceRoot":"/source/"}