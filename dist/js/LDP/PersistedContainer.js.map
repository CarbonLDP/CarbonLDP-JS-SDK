{"version":3,"sources":["LDP/PersistedContainer.ts"],"names":[],"mappings":";;;;;;;;;;;;YAesB,qEAAsB;YAAM,+DAAgB","file":"LDP/PersistedContainer.js","sourcesContent":["import * as Document from \"./../Document\";\nimport * as HTTP from \"./../HTTP\";\nimport * as PersistedDocument from \"./../PersistedDocument\";\nimport * as Pointer from \"./../Pointer\";\nimport * as RDF from \"./../RDF\";\nimport * as Utils from \"./../Utils\";\n\nexport interface Class extends PersistedDocument.Class {\n\tcreateChild( object:Object ):Promise<void>;\n}\n\nfunction createChild( slug:string, object:Object ):Promise<[ Pointer.Class, HTTP.Response.Class ]>;\nfunction createChild( slug:string ):Promise<[ Pointer.Class, HTTP.Response.Class ]>;\nfunction createChild( object:Object ):Promise<[ Pointer.Class, HTTP.Response.Class ]>;\nfunction createChild():Promise<[ Pointer.Class, HTTP.Response.Class ]>;\nfunction createChild( slugOrObject:Object = null, object:Object = null ):Promise<[ Pointer.Class, HTTP.Response.Class ]> {\n\tlet slug:string = Utils.isString( slugOrObject ) ? <any> slugOrObject : null;\n\tobject = !! slugOrObject && ! Utils.isString( slugOrObject ) ? slugOrObject : ( !! object ? object : null );\n\n\t// TODO: Check if the object is a document\n\t// TODO: If it's not a document turn it and any of the objects related to it into document/fragments\n\tlet document:Document.Class = <Document.Class> object;\n\n\tif( slug !== null ) {\n\t\treturn this._documents.createChild( this.id, slug, document );\n\t} else return this._documents.createChild( this.id, document );\n}\n\nexport class Factory {\n\tstatic hasClassProperties( document:Document.Class ):boolean {\n\t\treturn (\n\t\t\t\tUtils.hasFunction( document, \"createChild\" )\n\t\t);\n\t}\n\n\tstatic decorate<T extends PersistedDocument.Class>( persistedDocument:T ):T & Class {\n\t\tif( Factory.hasClassProperties( persistedDocument ) ) return <any> persistedDocument;\n\n\t\tObject.defineProperties( persistedDocument, {\n\t\t\t\"createChild\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: createChild,\n\t\t\t},\n\t\t} );\n\n\t\treturn <any> persistedDocument;\n\t}\n}\n"],"sourceRoot":"/source/"}