{"version":3,"sources":["LDP/Container.ts"],"names":["Injector","Injector.constructor","Injector.is","Injector.hasRDFClass","Injector.hasClassProperties","Injector.injectBehavior"],"mappings":"AAAA,mDAAmD;;;;;;AAEnD,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAC9B,IAAY,GAAG,WAAM,UAAU,CAAC,CAAA;AAChC,IAAY,SAAS,WAAM,aAAa,CAAC,CAAA;AACzC,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEvB,iBAAS,GAAU,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;AAO1C,kBAAU,GAA8C,KAAK,CAAC,CAAC,CAAC,IAAI,CAAE;IAClF,kBAAkB,EAAE;QACnB,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB;QACxC,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;KAChB;IACD,mBAAmB,EAAE;QACpB,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,iBAAiB;QACzC,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;KAChB;CACD,CAAE,CAAC;AAEJ;IAA8BA,4BAA2BA;IACxDA;QACCC,kBAAOA,iBAASA,EAAEA,CAAEA,SAASA,CAACA,QAAQA,CAAEA,CAAEA,CAACA;IAC5CA,CAACA;IAEDD,qBAAEA,GAAFA,UAAIA,MAAaA;QAChBE,MAAMA,CAACA,CACNA,gBAAKA,CAACA,EAAEA,YAAEA,MAAMA,CAAEA;YAClBA,IAAIA,CAACA,WAAWA,CAAoBA,MAAMA,CAAEA;YAC5CA,IAAIA,CAACA,kBAAkBA,CAAoBA,MAAMA,CAAEA,CACnDA,CAACA;IACHA,CAACA;IAEDF,8BAAWA,GAAXA,UAAaA,QAA2BA;QACvCG,MAAMA,CAACA,CACNA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,iBAASA,CAAEA,KAAKA,CAAEA,CAACA;YAC3CA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,GAAGA,CAACA,KAAKA,CAACA,cAAcA,CAAEA,KAAKA,CAAEA,CAACA;YAC7DA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,GAAGA,CAACA,KAAKA,CAACA,eAAeA,CAAEA,KAAKA,CAAEA,CAACA;YAC9DA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,GAAGA,CAACA,KAAKA,CAACA,iBAAiBA,CAAEA,KAAKA,CAAEA,CAACA,CAChEA,CAACA;IACHA,CAACA;IAEDH,qCAAkBA,GAAlBA,UAAoBA,QAAuBA;QAC1CI,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,kBAAkBA,CAAEA;YACxDA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,mBAAmBA,CAAEA,CACzDA,CAACA;IACHA,CAACA;IAGSJ,iCAAcA,GAAxBA,UAA0BA,QAA2BA;QACpDK,GAAGA,CAACA,QAAQA,CAACA,OAAOA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,kBAAUA,CAAEA,CAACA;QAChEA,MAAMA,CAASA,QAAQA,CAACA;IACzBA,CAACA;IACFL,eAACA;AAADA,CAlCA,AAkCCA,EAlC6B,GAAG,CAAC,gBAAgB,EAkCjD;AAlCY,gBAAQ,WAkCpB,CAAA;AAEU,gBAAQ,GAAY,IAAI,QAAQ,EAAE,CAAC","file":"LDP/Container.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n\nimport * as NS from \"./../NS\";\nimport * as RDF from \"./../RDF\";\nimport * as RDFSource from \"./RDFSource\";\nimport * as Utils from \"./../Utils\";\n\nexport const RDF_CLASS:string = NS.LDP.Class.Container;\n\nexport interface Class extends RDFSource.Class {\n\tmemberOfRelation:string;\n\thasMemberRelation:string;\n}\n\nexport const DEFINITION:Map<string, RDF.PropertyDescription> = <any> Utils.M.from( {\n\t\"memberOfRelation\": {\n\t\t\"uri\": NS.LDP.Predicate.memberOfRelation,\n\t\t\"multi\": false,\n\t\t\"literal\": false,\n\t},\n\t\"hasMemberRelation\": {\n\t\t\"uri\": NS.LDP.Predicate.hasMemberRelation,\n\t\t\"multi\": false,\n\t\t\"literal\": false,\n\t},\n} );\n\nexport class Injector extends RDF.AbstractInjector<Class> {\n\tconstructor() {\n\t\tsuper( RDF_CLASS, [ RDFSource.injector ] );\n\t}\n\n\tis( object:Object ):boolean {\n\t\treturn (\n\t\t\tsuper.is( object ) &&\n\t\t\tthis.hasRDFClass( <RDFSource.Class> object ) &&\n\t\t\tthis.hasClassProperties( <RDFSource.Class> object )\n\t\t);\n\t}\n\n\thasRDFClass( resource:RDF.Resource.Class ):boolean {\n\t\treturn (\n\t\t\tresource.types.indexOf( RDF_CLASS ) !== - 1 ||\n\t\t\tresource.types.indexOf( NS.LDP.Class.BasicContainer ) !== - 1 ||\n\t\t\tresource.types.indexOf( NS.LDP.Class.DirectContainer ) !== - 1 ||\n\t\t\tresource.types.indexOf( NS.LDP.Class.IndirectContainer ) !== - 1\n\t\t);\n\t}\n\n\thasClassProperties( resource:RDF.Node.Class ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"memberOfRelation\" ) &&\n\t\t\tUtils.hasPropertyDefined( resource, \"hasMemberRelation\" )\n\t\t);\n\t}\n\n\n\tprotected injectBehavior( resource:RDF.Resource.Class ):Class {\n\t\tRDF.Resource.Factory.injectDescriptions( resource, DEFINITION );\n\t\treturn <Class> resource;\n\t}\n}\n\nexport let injector:Injector = new Injector();\n\nexport default Class;\n"],"sourceRoot":"/source/"}