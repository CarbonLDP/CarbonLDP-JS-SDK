{"version":3,"sources":["LDP/Container.ts"],"names":["Factory","Factory.constructor","Factory.hasClassProperties","Factory.hasRDFClass"],"mappings":"AAAA,mDAAmD;;;QAUtC,SAAS,EAET,MAAM;;;;;;;;;;YAFN,uBAAA,SAAS,GAAU,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAA,CAAC;YAE1C,oBAAA,MAAM,GAAsB;gBACxC,UAAU,EAAE;oBACX,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ;oBAChC,YAAY,EAAE,MAAM;oBACpB,OAAO,EAAE,KAAK;iBACd;gBACD,SAAS,EAAE;oBACV,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM;oBAC9B,YAAY,EAAE,MAAM;oBACpB,OAAO,EAAE,KAAK;iBACd;gBACD,oBAAoB,EAAE;oBACrB,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,kBAAkB;oBAC1C,OAAO,EAAE,KAAK;iBACd;gBACD,mBAAmB,EAAE;oBACpB,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,iBAAiB;oBACzC,OAAO,EAAE,KAAK;iBACd;gBACD,yBAAyB,EAAE;oBAC1B,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAuB;oBAC/C,OAAO,EAAE,KAAK;iBACd;aACD,CAAA,CAAC;YAOF;gBAAAA;gBAyBAC,CAACA;gBAxBOD,0BAAkBA,GAAzBA,UAA2BA,QAAuBA;oBACjDE,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,oBAAoBA,CAAEA;wBAC1DA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,mBAAmBA,CAAEA,CACzDA,CAACA;gBACHA,CAACA;gBAIMF,mBAAWA,GAAlBA,UAAoBA,uBAA8BA;oBACjDG,IAAIA,KAAKA,GAAYA,EAAEA,CAACA;oBACxBA,EAAEA,CAAAA,CAAEA,OAAOA,IAAIA,uBAAwBA,CAACA,CAACA,CAACA;wBACzCA,KAAKA,GAAGA,uBAAuBA,CAAEA,OAAOA,CAAEA,CAACA;oBAC5CA,CAACA;oBAACA,IAAIA,CAACA,EAAEA,CAAAA,CAAEA,OAAOA,IAAIA,uBAAwBA,CAACA,CAACA,CAACA;wBAChDA,KAAKA,GAAsBA,uBAAyBA,CAACA,KAAKA,CAACA;oBAC5DA,CAACA;oBAEDA,MAAMA,CAACA,CACNA,KAAKA,CAACA,OAAOA,CAAEA,SAASA,CAAEA,KAAKA,CAAEA,CAACA;wBAClCA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,GAAGA,CAACA,KAAKA,CAACA,cAAcA,CAAEA,KAAKA,CAAEA,CAACA;wBACpDA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,GAAGA,CAACA,KAAKA,CAACA,eAAeA,CAAEA,KAAKA,CAAEA,CAACA;wBACrDA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,GAAGA,CAACA,KAAKA,CAACA,iBAAiBA,CAAEA,KAAKA,CAAEA,CAACA,CACvDA,CAACA;gBACHA,CAACA;gBACFH,cAACA;YAADA,CAzBA,AAyBCA,IAAA;YAzBD,6BAyBC,CAAA","file":"LDP/Container.js","sourcesContent":["/// <reference path=\"../../typings/typings.d.ts\" />\n\nimport * as NS from \"./../NS\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\nimport * as Pointer from \"./../Pointer\";\nimport * as RDF from \"./../RDF\";\nimport * as RDFSource from \"./RDFSource\";\nimport * as Utils from \"./../Utils\";\nimport * as Resource from \"../Resource\";\n\nexport const RDF_CLASS:string = NS.LDP.Class.Container;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"contains\": {\n\t\t\"@id\": NS.LDP.Predicate.contains,\n\t\t\"@container\": \"@set\",\n\t\t\"@type\": \"@id\",\n\t},\n\t\"members\": {\n\t\t\"@id\": NS.LDP.Predicate.member,\n\t\t\"@container\": \"@set\",\n\t\t\"@type\": \"@id\",\n\t},\n\t\"isMemberOfRelation\": {\n\t\t\"@id\": NS.LDP.Predicate.isMemberOfRelation,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"hasMemberRelation\": {\n\t\t\"@id\": NS.LDP.Predicate.hasMemberRelation,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"insertedContentRelation\": {\n\t\t\"@id\": NS.LDP.Predicate.insertedContentRelation,\n\t\t\"@type\": \"@id\",\n\t},\n};\n\nexport interface Class extends RDFSource.Class {\n\tmemberOfRelation:Pointer.Class;\n\thasMemberRelation:Pointer.Class;\n}\n\nexport class Factory {\n\tstatic hasClassProperties( resource:RDF.Node.Class ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"isMemberOfRelation\" ) &&\n\t\t\tUtils.hasPropertyDefined( resource, \"hasMemberRelation\" )\n\t\t);\n\t}\n\n\tstatic hasRDFClass( pointer:Pointer.Class ):boolean;\n\tstatic hasRDFClass( expandedObject:Object ):boolean;\n\tstatic hasRDFClass( pointerOrExpandedObject:Object ):boolean {\n\t\tlet types:string[] = [];\n\t\tif( \"@type\" in pointerOrExpandedObject ) {\n\t\t\ttypes = pointerOrExpandedObject[ \"@type\" ];\n\t\t} else if( \"types\" in pointerOrExpandedObject ) {\n\t\t\ttypes = ( <Resource.Class> pointerOrExpandedObject ).types;\n\t\t}\n\n\t\treturn (\n\t\t\ttypes.indexOf( RDF_CLASS ) !== - 1 ||\n\t\t\ttypes.indexOf( NS.LDP.Class.BasicContainer ) !== - 1 ||\n\t\t\ttypes.indexOf( NS.LDP.Class.DirectContainer ) !== - 1 ||\n\t\t\ttypes.indexOf( NS.LDP.Class.IndirectContainer ) !== - 1\n\t\t);\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}