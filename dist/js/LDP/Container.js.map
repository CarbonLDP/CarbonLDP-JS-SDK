{"version":3,"sources":["LDP/Container.ts"],"names":["Factory","Factory.constructor","Factory.is","Factory.from","Factory.hasRDFClass","Factory.hasClassProperties","Factory.injectBehaviour"],"mappings":"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","file":"LDP/Container.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n\nimport * as NS from './../NS';\nimport * as RDF from './../RDF';\nimport * as RDFSource from './RDFSource';\nimport * as Utils from './../Utils';\n\nconst RDFClass:string = NS.LDP.Class.Container;\n\ninterface Container extends RDFSource.Class {\n\tmemberOfRelation:string;\n\thasMemberRelation:string;\n}\n\nconst Definition:Map<string, RDF.PropertyDescription> = <any> Utils.M.from( {\n\t\"memberOfRelation\": {\n\t\t\"uri\": NS.LDP.Predicate.memberOfRelation,\n\t\t\"multi\": false,\n\t\t\"literal\": false\n\t},\n\t\"hasMemberRelation\": {\n\t\t\"uri\": NS.LDP.Predicate.hasMemberRelation,\n\t\t\"multi\": false,\n\t\t\"literal\": false\n\t}\n} );\n\nclass Factory extends RDFSource.Factory {\n\tis( object:Object ):boolean {\n\t\t//@formatter:off\n\t\treturn (\n\t\t\tsuper.is( object ) &&\n\t\t\tthis.hasRDFClass( <RDFSource.Class> object ) &&\n\t\t\tthis.hasClassProperties( <RDFSource.Class> object )\n\t\t);\n\t\t//@formatter:on\n\t}\n\n\tfrom( resource:RDF.Node.Class ):Container;\n\tfrom( resources:RDF.Node.Class[] ):Container[];\n\tfrom( resourceOrResources:any ):any {\n\t\tvar superResult:(RDFSource.Class | RDFSource.Class[]) = super.from( resourceOrResources );\n\t\tvar resources:RDFSource.Class[] = Utils.isArray( superResult ) ? <RDFSource.Class[]> superResult : <RDFSource.Class[]> [ superResult ];\n\n\t\tfor ( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tvar resource:RDFSource.Class = resources[ i ];\n\t\t\tif ( ! this.hasClassProperties( resource ) ) this.injectBehaviour( resource );\n\t\t}\n\n\t\tif ( Utils.isArray( resourceOrResources ) ) return <Container[]> resources;\n\t\telse return <Container> resources[ 0 ];\n\t}\n\n\tprotected hasRDFClass( resource:RDF.Resource.Class ):boolean {\n\t\treturn (\n\t\t\tresource.types.indexOf( RDFClass ) !== - 1 ||\n\t\t\tresource.types.indexOf( NS.LDP.Class.BasicContainer ) !== - 1 ||\n\t\t\tresource.types.indexOf( NS.LDP.Class.DirectContainer ) !== - 1 ||\n\t\t\tresource.types.indexOf( NS.LDP.Class.IndirectContainer ) !== - 1\n\t\t);\n\t}\n\n\tprotected hasClassProperties( resource:RDF.Node.Class ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"memberOfRelation\" ) &&\n\t\t\tUtils.hasPropertyDefined( resource, \"hasMemberRelation\" )\n\t\t);\n\t}\n\n\tprotected injectBehaviour( resource:RDF.Resource.Class ):Container {\n\t\tRDF.Resource.Factory.injectDescriptions( resource, Definition );\n\t\treturn <Container> resource;\n\t}\n}\n\nvar factory = new Factory();\n\n//@formatter:off\nexport {\n\tContainer as Class,\n\tFactory,\n\tfactory\n};\n//@formatter:on"],"sourceRoot":"/source/"}