{"version":3,"sources":["LDP/BasicContainer.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;QASxC,SAAS;;;;;;;YAAT,uBAAA,SAAS,GAAU,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAA,CAAC;YAM5D;gBAAA;gBAaA,CAAC;gBAVO,mBAAW,GAAlB,UAAoB,uBAA8B;oBACjD,IAAI,KAAK,GAAY,EAAE,CAAC;oBACxB,EAAE,CAAA,CAAE,OAAO,IAAI,uBAAwB,CAAC,CAAC,CAAC;wBACzC,KAAK,GAAG,uBAAuB,CAAE,OAAO,CAAE,CAAC;oBAC5C,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAA,CAAE,OAAO,IAAI,uBAAwB,CAAC,CAAC,CAAC;wBAChD,KAAK,GAAsB,uBAAyB,CAAC,KAAK,CAAE;oBAC7D,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC,CAAC;gBAC7D,CAAC;gBACF,cAAC;YAAD,CAbA,AAaC,IAAA;YAbD,6BAaC,CAAA","file":"LDP/BasicContainer.js","sourcesContent":["/// <reference path=\"./../../typings/typings.d.ts\" />\n\nimport * as NS from \"./../NS\";\nimport * as Pointer from \"./../Pointer\";\nimport * as RDF from \"./../RDF\";\nimport * as Container from \"./Container\";\nimport * as Utils from \"./../Utils\";\nimport * as Resource from \"../Resource\";\n\nexport const RDF_CLASS:string = NS.LDP.Class.BasicContainer;\n\nexport interface Class extends Container.Class {\n\n}\n\nexport class Factory {\n\tstatic hasRDFClass( pointer:Pointer.Class ):boolean;\n\tstatic hasRDFClass( expandedObject:Object ):boolean;\n\tstatic hasRDFClass( pointerOrExpandedObject:Object ):boolean {\n\t\tlet types:string[] = [];\n\t\tif( \"@type\" in pointerOrExpandedObject ) {\n\t\t\ttypes = pointerOrExpandedObject[ \"@type\" ];\n\t\t} else if( \"types\" in pointerOrExpandedObject ) {\n\t\t\ttypes = ( <Resource.Class> pointerOrExpandedObject ).types ;\n\t\t}\n\n\t\treturn types.indexOf( NS.LDP.Class.BasicContainer ) !== - 1;\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}