{"version":3,"sources":["LDP/BasicContainer.ts"],"names":["Factory","Factory.constructor","Factory.is","Factory.from","Factory.hasRDFClass","Factory.hasClassProperties","Factory.injectBehaviour"],"mappings":"AAAA,mDAAmD;;;;;;AAEnD,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAE9B,IAAY,SAAS,WAAM,aAAa,CAAC,CAAA;AACzC,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEpC,IAAM,QAAQ,GAAU,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC;AAMpD;IAA6BA,2BAAiBA;IAA9CA;QAA6BC,8BAAiBA;IAuC9CA,CAACA;IAtCAD,oBAAEA,GAAFA,UAAIA,MAAaA;QAChBE,gBAAgBA;QAChBA,MAAMA,CAACA,CACNA,gBAAKA,CAACA,EAAEA,YAAEA,MAAMA,CAAEA;YAClBA,IAAIA,CAACA,WAAWA,CAAoBA,MAAMA,CAAEA;YAC5CA,IAAIA,CAACA,kBAAkBA,CAAoBA,MAAMA,CAAEA,CACnDA,CAACA;QACFA,eAAeA;IAChBA,CAACA;IAIDF,sBAAIA,GAAJA,UAAMA,mBAAuBA;QAC5BG,IAAIA,OAAOA,GAAyCA,gBAAKA,CAACA,IAAIA,YAAEA,mBAAmBA,CAAEA,CAACA;QACtFA,IAAIA,SAASA,GAAqBA,KAAKA,CAACA,OAAOA,CAAEA,OAAOA,CAAEA,GAAuBA,OAAOA,GAAuBA,CAAEA,OAAOA,CAAEA,CAACA;QAE3HA,GAAGA,CAACA,CAAEA,GAAGA,CAACA,CAACA,GAAUA,CAACA,EAAEA,QAAMA,GAAUA,SAASA,CAACA,MAAMA,EAAEA,CAACA,GAAGA,QAAMA,EAAEA,CAACA,EAAGA,EAAGA,CAACA;YAC7EA,IAAIA,QAAQA,GAAmBA,SAASA,CAAEA,CAACA,CAAEA,CAACA;YAC9CA,EAAEA,CAACA,CAAEA,CAAEA,IAAIA,CAACA,kBAAkBA,CAAEA,QAAQA,CAAGA,CAACA;gBAACA,IAAIA,CAACA,eAAeA,CAAEA,QAAQA,CAAEA,CAACA;QAC/EA,CAACA;QAEDA,EAAEA,CAACA,CAAEA,KAAKA,CAACA,OAAOA,CAAEA,mBAAmBA,CAAGA,CAACA;YAACA,MAAMA,CAAWA,SAASA,CAACA;QACvEA,IAAIA;YAACA,MAAMA,CAASA,SAASA,CAAEA,CAACA,CAAEA,CAACA;IACpCA,CAACA;IAESH,6BAAWA,GAArBA,UAAuBA,QAA2BA;QACjDI,MAAMA,CAACA,CACNA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,GAAGA,CAACA,KAAKA,CAACA,cAAcA,CAAEA,KAAKA,CAAEA,CAACA,CAC7DA,CAACA;IACHA,CAACA;IAESJ,oCAAkBA,GAA5BA,UAA8BA,QAAuBA;QACpDK,MAAMA,CAACA,IAAIA,CAACA;IACbA,CAACA;IAESL,iCAAeA,GAAzBA,UAA2BA,QAAwBA;QAClDM,MAAMA,CAASA,QAAQA,CAACA;IACzBA,CAACA;IACFN,cAACA;AAADA,CAvCA,AAuCCA,EAvC4B,SAAS,CAAC,OAAO,EAuC7C;AAvCY,eAAO,UAuCnB,CAAA;AAEU,eAAO,GAAW,IAAI,OAAO,EAAE,CAAC","file":"LDP/BasicContainer.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n\nimport * as NS from './../NS';\nimport * as RDF from './../RDF';\nimport * as Container from './Container';\nimport * as Utils from './../Utils';\n\nconst RDFClass:string = NS.LDP.Class.BasicContainer;\n\nexport interface Class extends Container.Class {\n\n}\n\nexport class Factory extends Container.Factory {\n\tis( object:Object ):boolean {\n\t\t//@formatter:off\n\t\treturn (\n\t\t\tsuper.is( object ) &&\n\t\t\tthis.hasRDFClass( <Container.Class> object ) &&\n\t\t\tthis.hasClassProperties( <Container.Class> object )\n\t\t);\n\t\t//@formatter:on\n\t}\n\n\tfrom( resource:RDF.Node.Class ):Class;\n\tfrom( resources:RDF.Node.Class[] ):Class[];\n\tfrom( resourceOrResources:any ):any {\n\t\tvar sources:(Container.Class | Container.Class[]) = super.from( resourceOrResources );\n\t\tvar resources:Container.Class[] = Utils.isArray( sources ) ? <Container.Class[]> sources : <Container.Class[]> [ sources ];\n\n\t\tfor ( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tvar resource:Container.Class = resources[ i ];\n\t\t\tif ( ! this.hasClassProperties( resource ) ) this.injectBehaviour( resource );\n\t\t}\n\n\t\tif ( Utils.isArray( resourceOrResources ) ) return <Class[]> resources;\n\t\telse return <Class> resources[ 0 ];\n\t}\n\n\tprotected hasRDFClass( resource:RDF.Resource.Class ):boolean {\n\t\treturn (\n\t\t\tresource.types.indexOf( NS.LDP.Class.BasicContainer ) !== - 1\n\t\t);\n\t}\n\n\tprotected hasClassProperties( resource:RDF.Node.Class ):boolean {\n\t\treturn true;\n\t}\n\n\tprotected injectBehaviour( resource:Container.Class ):Class {\n\t\treturn <Class> resource;\n\t}\n}\n\nexport var factory:Factory = new Factory();"],"sourceRoot":"/source/"}