{"version":3,"sources":["LDP/IndirectContainer.ts"],"names":["Factory","Factory.constructor","Factory.is","Factory.from","Factory.hasRDFClass","Factory.hasClassProperties","Factory.injectBehaviour"],"mappings":"AAAA,mDAAmD;;;;;;AAEnD,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAC9B,IAAY,GAAG,WAAM,UAAU,CAAC,CAAA;AAChC,IAAY,WAAW,WAAM,eAAe,CAAC,CAAA;AAC7C,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEvB,iBAAS,GAAU,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC;AAMlD,kBAAU,GAA8C,KAAK,CAAC,CAAC,CAAC,IAAI,CAAE;IAClF,yBAAyB,EAAE;QAC1B,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAuB;QAC/C,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;KAChB;CACD,CAAE,CAAC;AAEJ;IAA6BA,2BAAmBA;IAAhDA;QAA6BC,8BAAmBA;IAwChDA,CAACA;IAvCAD,oBAAEA,GAAFA,UAAIA,MAAaA;QAChBE,MAAMA,CAACA,CACNA,gBAAKA,CAACA,EAAEA,YAAEA,MAAMA,CAAEA;YAClBA,IAAIA,CAACA,WAAWA,CAAsBA,MAAMA,CAAEA;YAC9CA,IAAIA,CAACA,kBAAkBA,CAAsBA,MAAMA,CAAEA,CACrDA,CAACA;IACHA,CAACA;IAIDF,sBAAIA,GAAJA,UAAMA,mBAAuBA;QAC5BG,IAAIA,OAAOA,GAA6CA,gBAAKA,CAACA,IAAIA,YAAEA,mBAAmBA,CAAEA,CAACA;QAC1FA,IAAIA,SAASA,GAAuBA,KAAKA,CAACA,OAAOA,CAAEA,OAAOA,CAAEA,GAAyBA,OAAOA,GAAyBA,CAAEA,OAAOA,CAAEA,CAACA;QAEjIA,GAAGA,CAACA,CAAEA,GAAGA,CAACA,CAACA,GAAUA,CAACA,EAAEA,QAAMA,GAAUA,SAASA,CAACA,MAAMA,EAAEA,CAACA,GAAGA,QAAMA,EAAEA,CAACA,EAAGA,EAAGA,CAACA;YAC7EA,IAAIA,QAAQA,GAAqBA,SAASA,CAAEA,CAACA,CAAEA,CAACA;YAChDA,EAAEA,CAACA,CAAEA,CAAEA,IAAIA,CAACA,kBAAkBA,CAAEA,QAAQA,CAAGA,CAACA;gBAACA,IAAIA,CAACA,eAAeA,CAAEA,QAAQA,CAAEA,CAACA;QAC/EA,CAACA;QAEDA,EAAEA,CAACA,CAAEA,KAAKA,CAACA,OAAOA,CAAEA,mBAAmBA,CAAGA,CAACA;YAACA,MAAMA,CAAWA,SAASA,CAACA;QACvEA,MAAMA,CAASA,SAASA,CAAEA,CAACA,CAAEA,CAACA;IAC/BA,CAACA;IAESH,6BAAWA,GAArBA,UAAuBA,QAA2BA;QACjDI,MAAMA,CAACA,CACNA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,iBAASA,CAAEA,KAAKA,CAAEA,CAACA,CAC3CA,CAACA;IACHA,CAACA;IAESJ,oCAAkBA,GAA5BA,UAA8BA,QAAuBA;QACpDK,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,yBAAyBA,CAAEA,CAC/DA,CAACA;IACHA,CAACA;IAESL,iCAAeA,GAAzBA,UAA2BA,QAA0BA;QACpDM,GAAGA,CAACA,QAAQA,CAACA,OAAOA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,kBAAUA,CAAEA,CAACA;QAChEA,MAAMA,CAASA,QAAQA,CAACA;IACzBA,CAACA;IACFN,cAACA;AAADA,CAxCA,AAwCCA,EAxC4B,WAAW,CAAC,OAAO,EAwC/C;AAxCY,eAAO,UAwCnB,CAAA;AAEU,eAAO,GAAW,IAAI,OAAO,EAAE,CAAC","file":"LDP/IndirectContainer.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n\nimport * as NS from \"./../NS\";\nimport * as RDF from \"./../RDF\";\nimport * as AccessPoint from \"./AccessPoint\";\nimport * as Utils from \"./../Utils\";\n\nexport const RDF_CLASS:string = NS.LDP.Class.IndirectContainer;\n\nexport interface Class extends AccessPoint.Class {\n\tinsertedContentRelation:string;\n}\n\nexport const DEFINITION:Map<string, RDF.PropertyDescription> = <any> Utils.M.from( {\n\t\"insertedContentRelation\": {\n\t\t\"uri\": NS.LDP.Predicate.insertedContentRelation,\n\t\t\"multi\": false,\n\t\t\"literal\": false\n\t}\n} );\n\nexport class Factory extends AccessPoint.Factory {\n\tis( object:Object ):boolean {\n\t\treturn (\n\t\t\tsuper.is( object ) &&\n\t\t\tthis.hasRDFClass( <AccessPoint.Class> object ) &&\n\t\t\tthis.hasClassProperties( <AccessPoint.Class> object )\n\t\t);\n\t}\n\n\tfrom( resource:RDF.Node.Class ):Class;\n\tfrom( resources:RDF.Node.Class[] ):Class[];\n\tfrom( resourceOrResources:any ):any {\n\t\tlet sources:(AccessPoint.Class | AccessPoint.Class[]) = super.from( resourceOrResources );\n\t\tlet resources:AccessPoint.Class[] = Utils.isArray( sources ) ? <AccessPoint.Class[]> sources : <AccessPoint.Class[]> [ sources ];\n\n\t\tfor ( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tlet resource:AccessPoint.Class = resources[ i ];\n\t\t\tif ( ! this.hasClassProperties( resource ) ) this.injectBehaviour( resource );\n\t\t}\n\n\t\tif ( Utils.isArray( resourceOrResources ) ) return <Class[]> resources;\n\t\treturn <Class> resources[ 0 ];\n\t}\n\n\tprotected hasRDFClass( resource:RDF.Resource.Class ):boolean {\n\t\treturn (\n\t\t\tresource.types.indexOf( RDF_CLASS ) !== - 1\n\t\t);\n\t}\n\n\tprotected hasClassProperties( resource:RDF.Node.Class ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"insertedContentRelation\" )\n\t\t);\n\t}\n\n\tprotected injectBehaviour( resource:AccessPoint.Class ):Class {\n\t\tRDF.Resource.Factory.injectDescriptions( resource, DEFINITION );\n\t\treturn <Class> resource;\n\t}\n}\n\nexport let factory:Factory = new Factory();\n\nexport default Class;\n"],"sourceRoot":"/source/"}