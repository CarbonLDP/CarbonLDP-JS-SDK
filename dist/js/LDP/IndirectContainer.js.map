{"version":3,"sources":["LDP/IndirectContainer.ts"],"names":["Injector","Injector.constructor","Injector.hasClassProperties","Injector.is","Injector.injectBehavior"],"mappings":"AAAA,mDAAmD;;;;;;AAEnD,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAC9B,IAAY,GAAG,WAAM,UAAU,CAAC,CAAA;AAChC,IAAY,WAAW,WAAM,eAAe,CAAC,CAAA;AAC7C,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEvB,iBAAS,GAAU,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC;AAMlD,kBAAU,GAA8C,KAAK,CAAC,CAAC,CAAC,IAAI,CAAE;IAClF,yBAAyB,EAAE;QAC1B,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAuB;QAC/C,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;KAChB;CACD,CAAE,CAAC;AAEJ;IAA8BA,4BAA2BA;IACxDA;QACCC,kBAAOA,iBAASA,EAAEA,CAAEA,WAAWA,CAACA,QAAQA,CAAEA,CAAEA,CAACA;IAC9CA,CAACA;IAEDD,qCAAkBA,GAAlBA,UAAoBA,QAAuBA;QAC1CE,MAAMA,CAACA,CACNA,KAAKA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,yBAAyBA,CAAEA,CAC/DA,CAACA;IACHA,CAACA;IAEDF,qBAAEA,GAAFA,UAAIA,MAAaA;QAChBG,MAAMA,CAACA,CACNA,gBAAKA,CAACA,EAAEA,YAAEA,MAAMA,CAAEA;YAClBA,IAAIA,CAACA,WAAWA,CAAsBA,MAAMA,CAAEA;YAC9CA,IAAIA,CAACA,kBAAkBA,CAAsBA,MAAMA,CAAEA,CACrDA,CAACA;IACHA,CAACA;IAESH,iCAAcA,GAAxBA,UAAuDA,QAAUA;QAChEI,GAAGA,CAACA,QAAQA,CAACA,OAAOA,CAACA,kBAAkBA,CAAEA,QAAQA,EAAEA,kBAAUA,CAAEA,CAACA;QAChEA,MAAMA,CAAOA,QAAQA,CAACA;IACvBA,CAACA;IACFJ,eAACA;AAADA,CAvBA,AAuBCA,EAvB6B,GAAG,CAAC,gBAAgB,EAuBjD;AAvBY,gBAAQ,WAuBpB,CAAA;AAEU,gBAAQ,GAAY,IAAI,QAAQ,EAAE,CAAC","file":"LDP/IndirectContainer.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n\nimport * as NS from \"./../NS\";\nimport * as RDF from \"./../RDF\";\nimport * as AccessPoint from \"./AccessPoint\";\nimport * as Utils from \"./../Utils\";\n\nexport const RDF_CLASS:string = NS.LDP.Class.IndirectContainer;\n\nexport interface Class extends AccessPoint.Class {\n\tinsertedContentRelation:string;\n}\n\nexport const DEFINITION:Map<string, RDF.PropertyDescription> = <any> Utils.M.from( {\n\t\"insertedContentRelation\": {\n\t\t\"uri\": NS.LDP.Predicate.insertedContentRelation,\n\t\t\"multi\": false,\n\t\t\"literal\": false,\n\t},\n} );\n\nexport class Injector extends RDF.AbstractInjector<Class> {\n\tconstructor() {\n\t\tsuper( RDF_CLASS, [ AccessPoint.injector ] );\n\t}\n\n\thasClassProperties( resource:RDF.Node.Class ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"insertedContentRelation\" )\n\t\t);\n\t}\n\n\tis( object:Object ):boolean {\n\t\treturn (\n\t\t\tsuper.is( object ) &&\n\t\t\tthis.hasRDFClass( <AccessPoint.Class> object ) &&\n\t\t\tthis.hasClassProperties( <AccessPoint.Class> object )\n\t\t);\n\t}\n\n\tprotected injectBehavior<T extends AccessPoint.Class>( resource:T ):( T & Class ) {\n\t\tRDF.Resource.Factory.injectDescriptions( resource, DEFINITION );\n\t\treturn <any> resource;\n\t}\n}\n\nexport let injector:Injector = new Injector();\n\nexport default Class;\n"],"sourceRoot":"/source/"}