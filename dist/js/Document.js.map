{"version":3,"sources":["Document.ts"],"names":["hasPointer","getPointer","inScope","hasFragment","getFragment","getNamedFragment","getFragments","createFragment","createNamedFragment","removeFragment","toJSON","Factory","Factory.constructor","Factory.hasClassProperties","Factory.create","Factory.createFrom","Factory.decorate"],"mappings":"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","file":"Document.js","sourcesContent":["/// <reference path=\"./../typings/tsd.d.ts\" />\n\nimport * as Errors from \"./Errors\";\nimport * as Fragment from \"./Fragment\";\nimport JSONLDConverter from \"./JSONLDConverter\";\nimport * as NamedFragment from \"./NamedFragment\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as Pointer from \"./Pointer\";\nimport * as RDF from \"./RDF\";\nimport * as Resource from \"./Resource\";\nimport * as Utils from \"./Utils\";\n\nexport interface Class extends Resource.Class, Pointer.Library, Pointer.Validator {\n\t_fragmentsIndex:Map<string, Fragment.Class>;\n\n\thasFragment( slug:string ):boolean;\n\tgetFragment( slug:string ):Fragment.Class;\n\tgetNamedFragment( slug:string ):NamedFragment.Class;\n\tgetFragments():Fragment.Class[];\n\n\tcreateFragment():Fragment.Class;\n\tcreateFragment( slug:string ):NamedFragment.Class;\n\tcreateNamedFragment( slug:string ):NamedFragment.Class;\n\n\tremoveFragment( fragment:NamedFragment.Class ):void;\n\tremoveFragment( fragment:Fragment.Class ):void;\n\tremoveFragment( slug:string ):void;\n\tremoveFragment( fragmentOrSlug:any ):void;\n\n\ttoJSON( objectSchemaResolver:ObjectSchema.Resolver, jsonldConverter:JSONLDConverter ):string;\n\ttoJSON( objectSchemaResolver:ObjectSchema.Resolver ):string;\n\ttoJSON():string;\n}\n\nfunction hasPointer( id:string ):boolean {\n\tlet document:Class = <Class> this;\n\n\tif( ! document.inScope( id ) ) return false;\n\n\treturn !! document.getFragment( id );\n}\n\nfunction getPointer( id:string ):Pointer.Class {\n\tlet document:Class = <Class> this;\n\n\tif( ! document.inScope( id ) ) return null;\n\n\tif( id === document.id ) return document;\n\n\tlet fragment:Fragment.Class = document.getFragment( id );\n\tfragment = ! fragment ? document.createFragment( id ) : fragment;\n\n\treturn fragment;\n}\n\nfunction inScope( pointer:Pointer.Class ):boolean;\nfunction inScope( id:string ):boolean;\nfunction inScope( idOrPointer:any ):boolean {\n\tlet document:Class = <Class> this;\n\n\tlet id:string = Pointer.factory.is( idOrPointer ) ? idOrPointer.id : idOrPointer;\n\n\tif( id === document.id ) return true;\n\n\t// BNodes need to be already in the index to be in-scope\n\tif( RDF.URI.Util.isBNodeID( id ) && document._fragmentsIndex.has( id ) ) return true;\n\n\tif( RDF.URI.Util.isAbsolute( id ) && RDF.URI.Util.isFragmentOf( id, document.id ) ) return true;\n\n\tif( ! RDF.URI.Util.isAbsolute( document.id ) && ! RDF.URI.Util.isAbsolute( id ) && RDF.URI.Util.isFragmentOf( id, document.id ) ) return true;\n\n\treturn false;\n}\n\nfunction hasFragment( id:string ):boolean {\n\tlet document:Class = <Class> this;\n\n\tif( ! document.inScope( id ) ) return false;\n\n\treturn !! document._fragmentsIndex.has( id );\n}\nfunction getFragment( id:string ):Fragment.Class {\n\tlet document:Class = <Class> this;\n\n\tif( ! RDF.URI.Util.isBNodeID( id ) ) return document.getNamedFragment( id );\n\n\treturn document._fragmentsIndex.get( id );\n}\nfunction getNamedFragment( id:string ):NamedFragment.Class {\n\tlet document:Class = <Class> this;\n\n\tif( RDF.URI.Util.isBNodeID( id ) ) throw new Errors.IllegalArgumentError( \"Named fragments can't have a id that starts with '_:'.\" );\n\tif( RDF.URI.Util.isAbsolute( id ) ) {\n\t\tif( ! RDF.URI.Util.isFragmentOf( id, document.id ) ) throw new Errors.IllegalArgumentError( \"The id is out of scope.\" );\n\t\tid = RDF.URI.Util.hasFragment( id ) ? RDF.URI.Util.getFragment( id ) : id;\n\t} else if( Utils.S.startsWith( id, \"#\" ) ) id = id.substring( 1 );\n\n\treturn <NamedFragment.Class> document._fragmentsIndex.get( id );\n}\nfunction getFragments():Fragment.Class[] {\n\tlet document:Class = <Class> this;\n\treturn Utils.A.from( document._fragmentsIndex.values() );\n}\n\nfunction createFragment( slug:string ):NamedFragment.Class;\nfunction createFragment( slug?:string ):Fragment.Class;\nfunction createFragment( slug:any ):any {\n\tlet document:Class = <Class> this;\n\n\tlet id:string;\n\tif( slug ) {\n\t\tif( ! RDF.URI.Util.isBNodeID( slug ) ) return document.createNamedFragment( slug );\n\t\tid = slug;\n\t\tif( this._fragmentsIndex.has( id ) ) return this.getFragment( id );\n\t} else {\n\t\tid = Fragment.Util.generateID();\n\t}\n\n\tlet fragment:Fragment.Class = Fragment.factory.create( id, document );\n\n\tdocument._fragmentsIndex.set( id, fragment );\n\n\treturn fragment;\n}\nfunction createNamedFragment( slug:string ):NamedFragment.Class {\n\tlet document:Class = <Class> this;\n\n\tif( RDF.URI.Util.isBNodeID( slug ) ) throw new Errors.IllegalArgumentError( \"Named fragments can't have a slug that starts with '_:'.\" );\n\n\tif( RDF.URI.Util.isAbsolute( slug ) ) {\n\t\tif( ! RDF.URI.Util.isFragmentOf( slug, document.id ) ) throw new Errors.IllegalArgumentError( \"The slug is out of scope.\" );\n\t\tslug = RDF.URI.Util.hasFragment( slug ) ? RDF.URI.Util.getFragment( slug ) : slug;\n\t} else if( Utils.S.startsWith( slug, \"#\" ) ) slug = slug.substring( 1 );\n\n\tif( document._fragmentsIndex.has( slug ) ) throw new Errors.IDAlreadyInUseError( \"The slug provided is already being used by a fragment.\" );\n\n\tlet fragment:NamedFragment.Class = <NamedFragment.Class> NamedFragment.factory.create( slug, document );\n\n\tdocument._fragmentsIndex.set( slug, fragment );\n\n\treturn fragment;\n}\n\nfunction removeFragment( fragment:NamedFragment.Class ):void;\nfunction removeFragment( fragment:Fragment.Class ):void;\nfunction removeFragment( slug:string ):void;\nfunction removeFragment( fragmentOrSlug:any ):void {\n\t// TODO: FT\n}\n\nfunction toJSON( objectSchemaResolver:ObjectSchema.Resolver, jsonLDConverter:JSONLDConverter ):string;\nfunction toJSON( objectSchemaResolver:ObjectSchema.Resolver ):string;\nfunction toJSON():string;\nfunction toJSON( objectSchemaResolver:ObjectSchema.Resolver = null, jsonldConverter:JSONLDConverter = null ):string {\n\tjsonldConverter = !! jsonldConverter ? jsonldConverter : new JSONLDConverter();\n\n\tlet resources:{ toJSON:() => string }[] = [];\n\tresources.push( this );\n\tresources = resources.concat( this.getFragments() );\n\n\tlet expandedResources:RDF.Node.Class[] = [];\n\tfor( let resource of resources ) {\n\t\tlet digestedContext:ObjectSchema.DigestedObjectSchema = objectSchemaResolver ? objectSchemaResolver.getSchemaFor( resource ) : new ObjectSchema.DigestedObjectSchema();\n\n\t\texpandedResources.push( jsonldConverter.expand( resource, digestedContext, this ) );\n\t}\n\n\tlet graph:RDF.Document.Class = {\n\t\t\"@id\": this.id,\n\t\t\"@graph\": expandedResources,\n\t};\n\n\treturn JSON.stringify( graph );\n}\n\nexport class Factory {\n\thasClassProperties( documentResource:Object ):boolean {\n\t\treturn (\n\t\t\tUtils.isObject( documentResource ) &&\n\n\t\t\tUtils.hasPropertyDefined( documentResource, \"_fragmentsIndex\" ) &&\n\n\t\t\tUtils.hasFunction( documentResource, \"hasFragment\" ) &&\n\t\t\tUtils.hasFunction( documentResource, \"getFragment\" ) &&\n\t\t\tUtils.hasFunction( documentResource, \"getNamedFragment\" ) &&\n\t\t\tUtils.hasFunction( documentResource, \"getFragments\" ) &&\n\t\t\tUtils.hasFunction( documentResource, \"createFragment\" ) &&\n\t\t\tUtils.hasFunction( documentResource, \"createNamedFragment\" ) &&\n\t\t\tUtils.hasFunction( documentResource, \"removeFragment\" ) &&\n\t\t\tUtils.hasFunction( documentResource, \"toJSON\" )\n\t\t);\n\t}\n\n\tcreate( uri:string ):Class;\n\tcreate():Class;\n\tcreate( uri:string = null ):Class {\n\t\treturn this.createFrom( {}, uri );\n\t}\n\n\tcreateFrom<T extends Object>( object:T, uri:string ):T & Class;\n\tcreateFrom<T extends Object>( object:T ):T & Class;\n\tcreateFrom<T extends Object>( object:T, uri:string = null ):T & Class {\n\t\tif( !! uri && RDF.URI.Util.isBNodeID( uri ) ) throw new Errors.IllegalArgumentError( \"Documents cannot have a BNodeID as a uri.\" );\n\n\t\tlet resource:Resource.Class = Resource.factory.createFrom( object, uri );\n\n\t\tlet document:Class = this.decorate( resource );\n\n\t\treturn <any> document;\n\t}\n\n\tdecorate<T extends Object>( object:T ):T & Class {\n\t\tif( this.hasClassProperties( object ) ) return <any> object;\n\n\t\tObject.defineProperties( object, {\n\t\t\t\"_fragmentsIndex\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: new Map<string, Fragment.Class>(),\n\t\t\t},\n\t\t\t\"hasPointer\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: hasPointer,\n\t\t\t},\n\t\t\t\"getPointer\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getPointer,\n\t\t\t},\n\t\t\t\"inScope\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: inScope,\n\t\t\t},\n\t\t\t\"hasFragment\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: hasFragment,\n\t\t\t},\n\t\t\t\"getFragment\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getFragment,\n\t\t\t},\n\t\t\t\"getNamedFragment\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getNamedFragment,\n\t\t\t},\n\t\t\t\"getFragments\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getFragments,\n\t\t\t},\n\t\t\t\"createFragment\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: createFragment,\n\t\t\t},\n\t\t\t\"createNamedFragment\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: createNamedFragment,\n\t\t\t},\n\t\t\t\"removeFragment\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: removeFragment,\n\t\t\t},\n\t\t\t\"toJSON\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: toJSON,\n\t\t\t},\n\t\t} );\n\n\t\treturn <any> object;\n\t}\n}\n\nexport var factory:Factory = new Factory();\n\nexport default Document;\n"],"sourceRoot":"/source/"}