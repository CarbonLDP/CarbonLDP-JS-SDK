{"version":3,"sources":["RDF/AbstractInjector.ts"],"names":["AbstractInjector","AbstractInjector.constructor","AbstractInjector.RDF_CLASS","AbstractInjector.hasRDFClass","AbstractInjector.is","AbstractInjector.from","AbstractInjector.singleFrom","AbstractInjector.injectBehavior"],"mappings":"AACA,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEpC;IAICA,0BAAaA,SAAgBA,EAAEA,eAA4CA;QAA5CC,+BAA4CA,GAA5CA,oBAA4CA;QAC1EA,IAAIA,CAACA,UAAUA,GAAGA,SAASA,CAACA;QAC5BA,IAAIA,CAACA,eAAeA,GAAGA,eAAeA,CAACA;IACxCA,CAACA;IAEDD,sBAAIA,uCAASA;aAAbA;YACCE,MAAMA,CAACA,IAAIA,CAACA,UAAUA,CAACA;QACxBA,CAACA;;;OAAAF;IAIDA,sCAAWA,GAAXA,UAAaA,QAAuBA;QACnCG,MAAMA,CAACA,CACNA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,IAAIA,CAACA,SAASA,CAAEA,KAAKA,CAAEA,CAACA,CAChDA,CAACA;IACHA,CAACA;IAEDH,6BAAEA,GAAFA,UAAIA,MAAaA;QAChBI,GAAGA,CAAAA,CAAwBA,UAAoBA,EAApBA,KAAAA,IAAIA,CAACA,eAAeA,EAA1CA,cAAkBA,EAAlBA,IAA2CA,CAACA;YAA5CA,IAAIA,cAAcA,SAAAA;YACtBA,EAAEA,CAAAA,CAAEA,CAAEA,cAAcA,CAACA,EAAEA,CAAEA,MAAMA,CAAGA,CAACA;gBAACA,MAAMA,CAACA,KAAKA,CAACA;SACjDA;IACFA,CAACA;IAKDJ,+BAAIA,GAAJA,UAAMA,WAAeA;QACpBK,EAAEA,CAAAA,CAAEA,CAAEA,KAAKA,CAACA,OAAOA,CAAEA,WAAWA,CAAGA,CAACA;YAACA,MAAMA,CAACA,IAAIA,CAACA,UAAUA,CAAEA,WAAWA,CAAEA,CAACA;QAE3EA,GAAGA,CAAAA,CAAcA,UAAWA,EAAvBA,uBAAQA,EAARA,IAAwBA,CAACA;YAAzBA,IAAIA,IAAIA,GAAIA,WAAWA,IAAfA;YACZA,IAAIA,CAACA,UAAUA,CAAEA,IAAIA,CAAEA,CAACA;SACxBA;QAEDA,MAAMA,CAAOA,WAAWA,CAACA;IAC1BA,CAACA;IAESL,qCAAUA,GAApBA,UAAwCA,IAAMA;QAC7CM,GAAGA,CAAAA,CAAwBA,UAAoBA,EAApBA,KAAAA,IAAIA,CAACA,eAAeA,EAA1CA,cAAkBA,EAAlBA,IAA2CA,CAACA;YAA5CA,IAAIA,cAAcA,SAAAA;YACtBA,cAAcA,CAACA,IAAIA,CAAEA,IAAIA,CAAEA,CAACA;SAC5BA;QAEDA,EAAEA,CAACA,CAAEA,CAAEA,IAAIA,CAACA,kBAAkBA,CAAEA,IAAIA,CAAGA,CAACA;YAACA,IAAIA,CAACA,cAAcA,CAAEA,IAAIA,CAAEA,CAACA;QAErEA,MAAMA,CAAOA,IAAIA,CAACA;IACnBA,CAACA;IAESN,yCAAcA,GAAxBA,UAA4CA,IAAMA;QACjDO,MAAMA,CAAOA,IAAIA,CAACA;IACnBA,CAACA;IACFP,uBAACA;AAADA,CArDA,AAqDCA,IAAA;AArDqB,wBAAgB,mBAqDrC,CAAA;AAED;kBAAe,gBAAgB,CAAC","file":"RDF/AbstractInjector.js","sourcesContent":["import * as Resource from \"./Resource\";\nimport * as Utils from \"./../Utils\";\n\nexport abstract class AbstractInjector<I> {\n\tprotected _RDF_CLASS:string;\n\tprotected parentInjectors:AbstractInjector<any>[];\n\n\tconstructor( RDF_CLASS:string, parentInjectors:AbstractInjector<any>[] = [] ) {\n\t\tthis._RDF_CLASS = RDF_CLASS;\n\t\tthis.parentInjectors = parentInjectors;\n\t}\n\n\tget RDF_CLASS():string {\n\t\treturn this._RDF_CLASS;\n\t}\n\n\tabstract hasClassProperties( resource:Object ):boolean;\n\n\thasRDFClass( resource:Resource.Class ):boolean {\n\t\treturn (\n\t\t\tresource.types.indexOf( this.RDF_CLASS ) !== - 1\n\t\t);\n\t}\n\n\tis( object:Object ):boolean {\n\t\tfor( let parentInjector of this.parentInjectors ) {\n\t\t\tif( ! parentInjector.is( object ) ) return false;\n\t\t}\n\t}\n\n\n\tfrom<T extends Object>( nodes:T[] ):( T & I )[];\n\tfrom<T extends Object>( node:T ):( T & I );\n\tfrom( nodeOrNodes:any ):any {\n\t\tif( ! Utils.isArray( nodeOrNodes ) ) return this.singleFrom( nodeOrNodes );\n\n\t\tfor( let node of nodeOrNodes ) {\n\t\t\tthis.singleFrom( node );\n\t\t}\n\n\t\treturn <any> nodeOrNodes;\n\t}\n\n\tprotected singleFrom<T extends Object>( node:T ):( T & I ) {\n\t\tfor( let parentInjector of this.parentInjectors ) {\n\t\t\tparentInjector.from( node );\n\t\t}\n\n\t\tif ( ! this.hasClassProperties( node ) ) this.injectBehavior( node );\n\n\t\treturn <any> node;\n\t}\n\n\tprotected injectBehavior<T extends Object>( node:T ):( T & I ) {\n\t\treturn <any> node;\n\t}\n}\n\nexport default AbstractInjector;\n"],"sourceRoot":"/source/"}