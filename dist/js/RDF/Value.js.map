{"version":3,"sources":["RDF/Value.ts"],"names":["Util","Util.constructor","Util.areEqual","Util.getProperty","Util.getPropertyPointer","Util.getPropertyLiteral","Util.getPropertyList","Util.getPropertyPointerList","Util.getPropertyLiteralList","Util.getProperties","Util.getPropertyPointers","Util.getPropertyURIs","Util.getPropertyLiterals","Util.getPropertyLanguageMap","Util.getList","Util.parseValue"],"mappings":"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","file":"RDF/Value.js","sourcesContent":["import * as List from \"./List\";\nimport * as Literal from \"./Literal\";\nimport * as NS from \"./../NS\";\nimport * as Pointer from \"./../Pointer\";\nimport * as RDFNode from \"./RDFNode\";\n\nexport interface Class {\n\t\"@id\"?:string;\n\t\"@type\"?:string;\n\t\"@value\"?:string;\n}\n\n// TODO: Move all getters and setters to RDFNode.Util\nexport class Util {\n\tstatic areEqual( value1:Class, value2:Class ):boolean {\n\t\tif ( Literal.Factory.is( value1 ) && Literal.Factory.is( value2 ) ) {\n\t\t\treturn Literal.Util.areEqual( <Literal.Class> value1, <Literal.Class> value2 );\n\t\t} else if ( RDFNode.Factory.is( value1 ) && RDFNode.Factory.is( value2 ) ) {\n\t\t\treturn RDFNode.Util.areEqual( <RDFNode.Class> value1, <RDFNode.Class> value2 );\n\t\t} else return false;\n\t}\n\n\tstatic getProperty( expandedObject:any, propertyURI:string, pointerLibrary:Pointer.Library ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\t\tif( ! propertyValues.length ) return null;\n\n\t\tlet propertyValue:any = propertyValues[ 0 ];\n\n\t\treturn Util.parseValue( propertyValue, pointerLibrary );\n\t}\n\n\tstatic getPropertyPointer( expandedObject:any, propertyURI:string, pointerLibrary:Pointer.Library ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tif( ! RDFNode.Factory.is( propertyValue ) ) continue;\n\n\t\t\treturn pointerLibrary.getPointer( propertyValue[ \"@id\" ] );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tstatic getPropertyLiteral( expandedObject:any, propertyURI:string, literalType:string ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tif( ! Literal.Factory.is( propertyValue ) ) continue;\n\t\t\tif( ! Literal.Factory.hasType( propertyValue, literalType ) ) continue;\n\n\t\t\treturn Literal.Factory.parse( propertyValue );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tstatic getPropertyList( expandedObject:any, propertyURI:string, pointerLibrary:Pointer.Library ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\n\t\tlet propertyList:List.Class = Util.getList( propertyValues );\n\t\tif( ! propertyList ) return null;\n\n\t\tlet listValues:Array<any> = [];\n\t\tfor( let listValue of propertyList[ \"@list\" ] ) {\n\t\t\tlistValues.push( Util.parseValue( listValue, pointerLibrary ) );\n\t\t}\n\n\t\treturn listValues;\n\t}\n\n\tstatic getPropertyPointerList( expandedObject:any, propertyURI:string, pointerLibrary:Pointer.Library ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\n\t\tlet propertyList:List.Class = Util.getList( propertyValues );\n\t\tif( ! propertyList ) return null;\n\n\t\tlet listPointers:Array<any> = [];\n\t\tfor( let listValue of propertyList[ \"@list\" ] ) {\n\t\t\tif( ! RDFNode.Factory.is( listValue ) ) continue;\n\n\t\t\tlet pointer:Pointer.Class = pointerLibrary.getPointer( listValue[ \"@id\" ] );\n\t\t\tlistPointers.push( pointer );\n\t\t}\n\n\t\treturn listPointers;\n\t}\n\n\tstatic getPropertyLiteralList( expandedObject:any, propertyURI:string, literalType:string ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\n\t\tlet propertyList:List.Class = Util.getList( propertyValues );\n\t\tif( ! propertyList ) return null;\n\n\t\tlet listLiterals:Array<any> = [];\n\t\tfor( let listValue of propertyList[ \"@list\" ] ) {\n\t\t\tif( ! Literal.Factory.is( listValue ) ) continue;\n\t\t\tif( ! Literal.Factory.hasType( <any> listValue, literalType ) ) continue;\n\n\t\t\tlistLiterals.push( Literal.Factory.parse( <any> listValue ) );\n\t\t}\n\n\t\treturn listLiterals;\n\t}\n\n\tstatic getProperties( expandedObject:any, propertyURI:string, pointerLibrary:Pointer.Library ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\t\tif( ! propertyValues.length ) return null;\n\n\t\tlet properties:Array<any> = [];\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tproperties.push( Util.parseValue( propertyValue, pointerLibrary ) );\n\t\t}\n\n\t\treturn properties;\n\t}\n\n\tstatic getPropertyPointers( expandedObject:any, propertyURI:string, pointerLibrary:Pointer.Library ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\t\tif( ! propertyValues.length ) return null;\n\n\t\tlet propertyPointers:Array<any> = [];\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tif( ! RDFNode.Factory.is( propertyValue ) ) continue;\n\n\t\t\tlet pointer:Pointer.Class = pointerLibrary.getPointer( propertyValue[ \"@id\" ] );\n\t\t\tpropertyPointers.push( pointer );\n\t\t}\n\n\t\treturn propertyPointers;\n\t}\n\n\tstatic getPropertyURIs( expandedObject:any, propertyURI:string ):string[] {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\t\tif( ! propertyValues.length ) return null;\n\n\t\tlet propertyURIs:string[] = [];\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tif( ! RDFNode.Factory.is( propertyValue ) ) continue;\n\n\t\t\tpropertyURIs.push( propertyValue[ \"@id\" ] );\n\t\t}\n\n\t\treturn propertyURIs;\n\t}\n\n\tstatic getPropertyLiterals( expandedObject:any, propertyURI:string, literalType:string ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\n\t\tlet propertyLiterals:Array<any> = [];\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tif( ! Literal.Factory.is( propertyValue ) ) continue;\n\t\t\tif( ! Literal.Factory.hasType( propertyValue, literalType ) ) continue;\n\n\t\t\tpropertyLiterals.push( Literal.Factory.parse( propertyValue ) );\n\t\t}\n\n\t\treturn propertyLiterals;\n\t}\n\n\tstatic getPropertyLanguageMap( expandedObject:any, propertyURI:string ):any {\n\t\tlet propertyValues:Array<any> = expandedObject[ propertyURI ];\n\t\tif( ! propertyValues ) return null;\n\n\t\tlet propertyLanguageMap:any = {};\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tif( ! Literal.Factory.is( propertyValue ) ) continue;\n\t\t\tif( ! Literal.Factory.hasType( propertyValue, NS.XSD.DataType.string ) ) continue;\n\n\t\t\tlet languageTag:string = propertyValue[ \"@language\" ];\n\t\t\tif( ! languageTag ) continue;\n\n\t\t\tpropertyLanguageMap[ languageTag ] = Literal.Factory.parse( propertyValue );\n\t\t}\n\n\t\treturn propertyLanguageMap;\n\t}\n\n\tstatic getList( propertyValues:Array<any> ):List.Class {\n\t\tfor( let propertyValue of propertyValues ) {\n\t\t\tif( ! List.Factory.is( propertyValue ) ) continue;\n\n\t\t\treturn propertyValue;\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic parseValue( propertyValue:Class, pointerLibrary:Pointer.Library ):any {\n\t\tif( Literal.Factory.is( propertyValue ) ) {\n\t\t\treturn Literal.Factory.parse( <any> propertyValue );\n\t\t} else if( RDFNode.Factory.is( propertyValue ) ) {\n\t\t\treturn pointerLibrary.getPointer( propertyValue[ \"@id\" ] );\n\t\t} else if( List.Factory.is( propertyValue ) ) {\n\t\t\tlet parsedValue:Array<any> = [];\n\t\t\tlet listValues:Array<any> = propertyValue[ \"@list\" ];\n\t\t\tfor( let listValue of listValues ) {\n\t\t\t\tparsedValue.push( this.parseValue( listValue, pointerLibrary ) );\n\t\t\t}\n\t\t\treturn parsedValue;\n\t\t} else {\n\t\t\t// TODO: What else could it be?\n\t\t}\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}