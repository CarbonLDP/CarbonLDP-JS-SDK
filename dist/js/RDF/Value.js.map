{"version":3,"sources":["RDF/Value.ts"],"names":["Util","Util.constructor","Util.areEqual"],"mappings":"AAAA,IAAY,OAAO,WAAM,WAAW,CAAC,CAAA;AACrC,IAAY,OAAO,WAAM,WAAW,CAAC,CAAA;AAQrC;IAAAA;IAQAC,CAACA;IAPOD,aAAQA,GAAfA,UAAiBA,MAAYA,EAAEA,MAAYA;QAC1CE,EAAEA,CAACA,CAAEA,OAAOA,CAACA,OAAOA,CAACA,EAAEA,CAAEA,MAAMA,CAAEA,IAAIA,OAAOA,CAACA,OAAOA,CAACA,EAAEA,CAAEA,MAAMA,CAAGA,CAACA,CAACA,CAACA;YACpEA,MAAMA,CAACA,OAAOA,CAACA,IAAIA,CAACA,QAAQA,CAAkBA,MAAMA,EAAkBA,MAAMA,CAAEA,CAACA;QAChFA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAACA,CAAEA,OAAOA,CAACA,OAAOA,CAACA,EAAEA,CAAEA,MAAMA,CAAEA,IAAIA,OAAOA,CAACA,OAAOA,CAACA,EAAEA,CAAEA,MAAMA,CAAGA,CAACA,CAACA,CAACA;YAC3EA,MAAMA,CAACA,OAAOA,CAACA,IAAIA,CAACA,QAAQA,CAAkBA,MAAMA,EAAkBA,MAAMA,CAAEA,CAACA;QAChFA,CAACA;QAACA,IAAIA;YAACA,MAAMA,CAACA,KAAKA,CAACA;IACrBA,CAACA;IACFF,WAACA;AAADA,CARA,AAQCA,IAAA;AAEwB,YAAI,QAF5B;AAE+B","file":"RDF/Value.js","sourcesContent":["import * as Literal from './Literal';\nimport * as RDFNode from './RDFNode';\n\ninterface Value {\n\t'@id'?:string;\n\t'@type'?:string;\n\t'@value'?:string;\n}\n\nclass Util {\n\tstatic areEqual( value1:Value, value2:Value ):boolean {\n\t\tif ( Literal.Factory.is( value1 ) && Literal.Factory.is( value2 ) ) {\n\t\t\treturn Literal.Util.areEqual( <Literal.Class> value1, <Literal.Class> value2 );\n\t\t} else if ( RDFNode.Factory.is( value1 ) && RDFNode.Factory.is( value2 ) ) {\n\t\t\treturn RDFNode.Util.areEqual( <RDFNode.Class> value1, <RDFNode.Class> value2 );\n\t\t} else return false;\n\t}\n}\n\nexport { Value as Class, Util };"],"sourceRoot":"/source/"}