{"version":3,"sources":["RDF/Literal/Serializers/XSD.ts"],"names":["pad","DateSerializer","DateSerializer.constructor","DateSerializer.serialize","DateTimeSerializer","DateTimeSerializer.constructor","DateTimeSerializer.serialize","TimeSerializer","TimeSerializer.constructor","TimeSerializer.serialize","IntegerSerializer","IntegerSerializer.constructor","IntegerSerializer.serialize","UnsignedIntegerSerializer","UnsignedIntegerSerializer.constructor","UnsignedIntegerSerializer.serialize","FloatSerializer","FloatSerializer.constructor","FloatSerializer.serialize","BooleanSerializer","BooleanSerializer.constructor","BooleanSerializer.serialize","StringSerializer","StringSerializer.constructor","StringSerializer.serialize"],"mappings":"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","file":"RDF/Literal/Serializers/XSD.js","sourcesContent":["import * as Errors from \"./../../../Errors\";\nimport * as Utils from \"./../../../Utils\";\n\nimport Serializer from \"./../Serializer\";\n\nfunction pad( value:number ):string {\n\tlet paddedValue:string = String( value );\n\tif ( paddedValue.length === 1 ) paddedValue = \"0\" + paddedValue;\n\treturn paddedValue;\n}\n\nexport class DateSerializer implements Serializer {\n\tserialize( value:any ):string {\n\t\tif( ! Utils.isDate( value ) ) throw new Errors.IllegalArgumentError( \"The value is not a Date object.\" );\n\n\t\treturn value.getUTCFullYear() + \"-\" + pad( (value.getUTCMonth() + 1) ) + \"-\" + pad( value.getUTCDate() );\n\t}\n}\n\nexport let dateSerializer:DateSerializer = new DateSerializer();\n\nexport class DateTimeSerializer implements Serializer {\n\tserialize( value:any ):string {\n\t\tif( ! Utils.isDate( value ) ) throw new Errors.IllegalArgumentError( \"The value is not a Date object.\" );\n\n\t\treturn value.toISOString();\n\t}\n}\n\nexport let dateTimeSerializer:DateTimeSerializer = new DateTimeSerializer();\n\nexport class TimeSerializer implements Serializer {\n\tserialize( value:any ):string {\n\t\tif( ! Utils.isDate( value ) ) throw new Errors.IllegalArgumentError( \"The value is not a Date object.\" );\n\n\t\treturn pad( value.getUTCHours() )\n\t\t\t+ \":\" + pad( value.getUTCMinutes() )\n\t\t\t+ \":\" + pad( value.getUTCSeconds() )\n\t\t\t+ \".\" + String( ( value.getUTCMilliseconds() / 1000 ).toFixed( 3 ) ).slice( 2, 5 )\n\t\t\t+ \"Z\"\n\t\t;\n\t}\n}\n\nexport let timeSerializer:TimeSerializer = new TimeSerializer();\n\nexport class IntegerSerializer implements Serializer {\n\tserialize( value:any ):string {\n\t\tif( ! Utils.isNumber( value ) ) throw new Errors.IllegalArgumentError( \"The value is not a number.\" );\n\n\t\t// Negative truncate\n\t\treturn ( ~~value ).toString();\n\t}\n}\n\nexport let integerSerializer:IntegerSerializer = new IntegerSerializer();\n\nexport class UnsignedIntegerSerializer extends IntegerSerializer {\n\tserialize( value:any ):string {\n\t\tlet stringValue:string = super.serialize( value );\n\n\t\tstringValue = Utils.S.startsWith( stringValue, \"-\" ) ? stringValue.substring( 1 ) : stringValue;\n\n\t\treturn stringValue;\n\t}\n}\n\nexport let unsignedIntegerSerializer:UnsignedIntegerSerializer = new UnsignedIntegerSerializer();\n\nexport class FloatSerializer implements Serializer {\n\tserialize( value:any ):string {\n\t\tif( ! Utils.isNumber( value ) ) throw new Errors.IllegalArgumentError( \"The value is not a number.\" );\n\t\tif( value === Number.POSITIVE_INFINITY ) return \"INF\";\n\t\tif( value === Number.NEGATIVE_INFINITY ) return \"-INF\";\n\n\t\treturn value.toString();\n\t}\n}\n\nexport let floatSerializer:FloatSerializer = new FloatSerializer();\n\nexport class BooleanSerializer implements Serializer {\n\tserialize( value:any ):string {\n\t\treturn ( !! value ).toString();\n\t}\n}\n\nexport let booleanSerializer:BooleanSerializer = new BooleanSerializer();\n\nexport class StringSerializer implements Serializer {\n\tserialize( value:any ):string {\n\t\treturn String( value );\n\t}\n}\n\nexport let stringSerializer:StringSerializer = new StringSerializer();\n"],"sourceRoot":"/source/"}