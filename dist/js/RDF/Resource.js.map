{"version":3,"sources":["RDF/Resource.ts"],"names":["hasProperty","getProperty","getPropertyValue","getPropertyURI","getProperties","getPropertyValues","getPropertyURIs","addProperty","setProperty","deleteProperty","TiedArray","TiedArray.constructor","TiedArray.push","TiedArray.pop","TiedArray.join","TiedArray.reverse","TiedArray.shift","TiedArray.splice","TiedArray.unshift","Factory","Factory.constructor","Factory.injectDefinitions","Factory.injectDescriptions","Factory.genericGetter","Factory.genericMultipleGetter","Factory.uriGetter","Factory.urisGetter","Factory.literalGetter","Factory.literalsGetter","Factory.setter","Factory.hasClassProperties","Factory.is","Factory.hasRDFClass","Factory.injectBehavior"],"mappings":"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","file":"RDF/Resource.js","sourcesContent":["/// <reference path=\"../../typings/es6/es6.d.ts\" />\n\nimport AbstractInjector from \"./AbstractInjector\";\nimport * as Literal from \"./Literal\";\nimport * as URI from \"./URI\";\nimport * as Value from \"./Value\";\nimport PropertyDescription from \"./PropertyDescription\";\n\nimport * as Utils from \"./../Utils\";\nimport * as RDF from \"./../NS/RDF\";\nimport * as RDFNode from \"./RDFNode\";\n\nexport interface Class extends RDFNode.Class {\n\t_propertyAddedCallbacks:(( property:string, value:(RDFNode.Class | Literal.Class) ) => void)[];\n\t_propertyDeletedCallbacks:(( property:string, value?:any ) => void)[];\n\n\turi:string;\n\ttypes:Array<string>;\n\n\thasProperty:( property:string ) => boolean;\n\tgetProperty:( property:string ) => Value.Class;\n\tgetPropertyValue:( property:string ) => any;\n\tgetPropertyURI:( property:string ) => string;\n\tgetProperties:( property:string ) => any[];\n\tgetPropertyValues:( property:string ) => any[];\n\tgetPropertyURIs:( property:string ) => string[];\n\taddProperty:( property:string, value:any ) => void;\n\tsetProperty:( property:string, value:any ) => void;\n\tdeleteProperty:( property:string ) => void;\n}\n\nfunction hasProperty( propertyURI:string ):boolean {\n\treturn Utils.hasProperty( this, propertyURI );\n}\n\nfunction getProperty( propertyURI:string ):Value.Class {\n\tlet values:Value.Class[] = this.getProperties( propertyURI );\n\treturn values[ 0 ];\n}\n\nfunction getPropertyValue( propertyURI:string ):any {\n\tlet propertyObject:any = this.getProperty( propertyURI );\n\n\tif ( Utils.isNull( propertyObject ) ) return null;\n\n\tif ( ! Literal.Factory.is( propertyObject ) ) return null;\n\treturn Literal.Factory.parse( propertyObject );\n}\n\nfunction getPropertyURI( propertyURI:string ):string {\n\tlet value:Value.Class = this.getProperty( propertyURI );\n\tif ( Utils.isNull( value ) ) return null;\n\tif ( ! Utils.hasProperty( value, \"@id\" ) ) return null;\n\treturn value[ \"@id\" ];\n}\n\nfunction getProperties( propertyURI:string ):Value.Class[] {\n\tif ( ! this.hasProperty( propertyURI ) ) return [];\n\treturn Utils.isArray( this[ propertyURI ] ) ? this[ propertyURI ] : [ this[ propertyURI ] ];\n}\n\nfunction getPropertyValues( propertyURI:string ):any[] {\n\tlet values:any[] = [];\n\n\tif ( this.hasProperty( propertyURI ) ) {\n\t\tlet propertyArray:Value.Class[] = this.getProperties( propertyURI );\n\t\tfor ( let i:number = 0, length:number = propertyArray.length; i < length; i ++ ) {\n\t\t\tlet value:Value.Class = propertyArray[ i ];\n\t\t\tif ( Literal.Factory.is( value ) ) values.push( Literal.Factory.parse( <Literal.Class>value ) );\n\t\t}\n\t}\n\n\tvalues = new TiedArray( <Class> this, propertyURI, values );\n\n\treturn values;\n}\n\nfunction getPropertyURIs( propertyURI:string ):string[] {\n\tlet uris:string[] = [];\n\n\tif ( this.hasProperty( propertyURI ) ) {\n\t\tlet values:Value.Class[] = this.getProperties( propertyURI );\n\n\t\tfor ( let i:number = 0, length:number = values.length; i < length; i ++ ) {\n\t\t\tlet value:Value.Class = values[ i ];\n\t\t\tif ( Utils.hasProperty( value, \"@id\" ) ) uris.push( value[ \"@id\" ] );\n\t\t}\n\t}\n\n\turis = new TiedArray( <Class> this, propertyURI, uris );\n\n\treturn uris;\n}\n\nfunction addProperty( propertyURI:string, value:any ):void {\n\tlet propertyArray:Value.Class[] = this.getProperties( propertyURI );\n\n\tlet propertyValue:Value.Class;\n\tif( RDFNode.Factory.is( value ) ) {\n\t\tpropertyValue = {\n\t\t\t\"@id\": value[ \"@id\" ]\n\t\t};\n\t} else propertyValue = Literal.Factory.from( value );\n\n\tlet callbacks:(( property:string, value:any ) => void)[] = this._propertyAddedCallbacks;\n\tfor ( let i:number = 0, length:number = callbacks.length; i < length; i ++ ) {\n\t\tlet callback:( property:string, value:any ) => void = callbacks[ i ];\n\t\tcallback.call( this, propertyURI, propertyValue );\n\t}\n\n\tpropertyArray.push( propertyValue );\n\tthis[ propertyURI ] = propertyArray;\n}\n\nfunction setProperty( propertyURI:string, value:any ):void {\n\tthis.deleteProperty( propertyURI );\n\tif ( Utils.isNull( value ) ) return;\n\tthis.addProperty( propertyURI, value );\n}\n\nfunction deleteProperty( propertyURI:string ):void {\n\tlet callbacks:(( property:string, value?:any ) => void)[] = this._propertyDeletedCallbacks;\n\tfor ( let i:number = 0, length:number = callbacks.length; i < length; i ++ ) {\n\t\tlet callback:( property:string, value?:any ) => void = callbacks[ i ];\n\t\tcallback.call( this, propertyURI );\n\t}\n\n\tdelete this[ propertyURI ];\n}\n\nclass TiedArray<T> extends Array<T> {\n\tprivate resource:Class;\n\tprivate property:string;\n\n\tconstructor( resource:Class, property:string, array: T[] ) {\n\t\tsuper();\n\n\t\tsuper.push( ...array );\n\n\t\tthis.resource = resource;\n\t\tthis.property = property;\n\t}\n\n\t/**\n\t * Appends new elements to an array, and returns the new length of the array.\n\t * @param items New elements of the Array.\n\t */\n\tpush(...items: T[]): number {\n\t\tfor ( let i:number = 0, length:number = items.length; i < length; i ++ ) {\n\t\t\tthis.resource.addProperty( this.property, items[ i ] );\n\t\t}\n\t\treturn super.push( ...items );\n\t}\n\n\t/**\n\t * Removes the last element from an array and returns it.\n\t */\n\tpop(): T {\n\t\t// TODO\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds all the elements of an array separated by the specified separator string.\n\t * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n\t */\n\tjoin(separator?: string): string {\n\t\t// TODO\n\t\treturn null;\n\t}\n\n\t/**\n\t * Reverses the elements in an Array.\n\t */\n\treverse(): T[] {\n\t\t// TODO\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes the first element from an array and returns it.\n\t */\n\tshift(): T {\n\t\t// TODO\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n\t * @param start The zero-based location in the array from which to start removing elements.\n\t */\n\tsplice(start: number): T[];\n\n\t/**\n\t * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n\t * @param start The zero-based location in the array from which to start removing elements.\n\t * @param deleteCount The number of elements to remove.\n\t * @param items Elements to insert into the array in place of the deleted elements.\n\t */\n\tsplice(start: number, deleteCount: number, ...items: T[]): T[];\n\tsplice(start: number, deleteCount?: number, ...items: T[]): T[] {\n\t\t// TODO\n\t\treturn null;\n\t}\n\n\t/**\n\t * Inserts new elements at the start of an array.\n\t * @param items  Elements to insert at the start of the Array.\n\t */\n\tunshift(...items: T[]): number {\n\t\t// TODO\n\t\treturn null;\n\t}\n}\n\n\nexport class Factory extends AbstractInjector<Class> {\n\tstatic injectDefinitions( resource:Class, definitions:Map<string, Map<string, PropertyDescription>> ):Class;\n\tstatic injectDefinitions( resources:Class[], definitions:Map<string, Map<string, PropertyDescription>> ):Class[];\n\tstatic injectDefinitions( resourceOrResources:any, definitions:Map<string, Map<string, PropertyDescription>> ):any {\n\t\tlet resources:Class[] = Utils.isArray( resourceOrResources ) ? <Class[]>resourceOrResources : [ <Class>resourceOrResources ];\n\n\t\tfor ( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tlet resource:Class = resources[ i ];\n\t\t\tfor ( let j:number = 0, length:number = resource.types.length; i < length; j ++ ) {\n\t\t\t\tlet type:string = resource.types[ i ];\n\t\t\t\tlet descriptions:Map<string, PropertyDescription> = new Map<string, PropertyDescription>();\n\t\t\t\tif ( definitions.has( type ) ) {\n\t\t\t\t\tUtils.M.extend( descriptions, definitions.get( type ) );\n\t\t\t\t}\n\t\t\t\tif ( descriptions.size() !== 0 ) Factory.injectDescriptions( resource, descriptions );\n\t\t\t}\n\t\t}\n\n\t\tif ( Utils.isArray( resourceOrResources ) ) return resources;\n\t\treturn resources[ 0 ];\n\t}\n\n\n\tstatic injectDescriptions( resource:Class, descriptions:Map<string, PropertyDescription> ):Object;\n\tstatic injectDescriptions( resource:Class, descriptionsObject:Object ):Object;\n\tstatic injectDescriptions( resources:Class[], descriptions:Map<string, PropertyDescription> ):Object[];\n\tstatic injectDescriptions( resource:Class[], descriptionsObject:Object ):Object[];\n\tstatic injectDescriptions( resourceOrResources:any, descriptionsMapOrObject:any ):any {\n\t\tlet resources:Class[] = Utils.isArray( resourceOrResources ) ? <Class[]>resourceOrResources : [ <Class>resourceOrResources ];\n\n\t\tlet descriptions:Map<string, PropertyDescription>;\n\t\tif ( Utils.isMap( descriptionsMapOrObject ) ) {\n\t\t\tdescriptions = <any> descriptionsMapOrObject;\n\t\t} else if ( Utils.isObject( descriptionsMapOrObject ) ) {\n\t\t\tdescriptions = <any> Utils.M.from( descriptionsMapOrObject );\n\t\t} else throw new Error( \"IllegalArgument\" );\n\n\t\tfor ( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tlet resource:Class = resources[ i ];\n\n\t\t\tlet descriptionNames:Iterator<string> = descriptions.keys();\n\t\t\tlet next:IteratorValue<string> = descriptionNames.next();\n\t\t\twhile ( ! next.done ) {\n\t\t\t\tlet name:string = next.value;\n\t\t\t\tlet description:PropertyDescription = descriptions.get( name );\n\n\t\t\t\tlet getter:() => any, setter:( value:any ) => void;\n\n\t\t\t\tif ( Utils.isNull( description.literal ) ) {\n\t\t\t\t\t// The type isn't known, inject generic versions\n\t\t\t\t\tif ( description.multi ) {\n\t\t\t\t\t\tgetter = Factory.genericMultipleGetter( description );\n\t\t\t\t\t} else getter = Factory.genericGetter( description );\n\t\t\t\t} else if ( ! description.literal ) {\n\t\t\t\t\tif ( description.multi ) {\n\t\t\t\t\t\tgetter = Factory.urisGetter( description );\n\t\t\t\t\t} else getter = Factory.uriGetter( description );\n\t\t\t\t} else {\n\t\t\t\t\tif ( description.multi ) {\n\t\t\t\t\t\tgetter = Factory.literalsGetter( description );\n\t\t\t\t\t} else getter = Factory.literalGetter( description );\n\t\t\t\t}\n\n\t\t\t\tsetter = Factory.setter( description );\n\n\t\t\t\tObject.defineProperty(\n\t\t\t\t\tresource, name, {\n\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\tget: getter,\n\t\t\t\t\t\tset: setter,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tnext = descriptionNames.next();\n\t\t\t}\n\t\t}\n\n\t\tif ( Utils.isArray( resourceOrResources ) ) return resources;\n\t\treturn resources[ 0 ];\n\t}\n\n\tprivate static genericGetter( description:PropertyDescription ):() => any {\n\t\tlet uri:string = description.uri;\n\t\treturn function():Value.Class {\n\t\t\treturn this.getProperty( uri );\n\t\t};\n\t}\n\n\tprivate static genericMultipleGetter( description:PropertyDescription ):() => any {\n\t\tlet uri:string = description.uri;\n\t\treturn function():Value.Class[] {\n\t\t\treturn this.getProperties( uri );\n\t\t};\n\t}\n\n\tprivate static uriGetter( description:PropertyDescription ):() => any {\n\t\tlet uri:string = description.uri;\n\t\treturn function():string {\n\t\t\treturn this.getPropertyURI( uri );\n\t\t};\n\t}\n\n\tprivate static urisGetter( description:PropertyDescription ):() => any {\n\t\tlet uri:string = description.uri;\n\t\treturn function():string[] {\n\t\t\treturn this.getPropertyURIs( uri );\n\t\t};\n\t}\n\n\tprivate static literalGetter( description:PropertyDescription ):() => any {\n\t\tlet uri:string = description.uri;\n\t\treturn function():any {\n\t\t\treturn this.getPropertyValue( uri );\n\t\t};\n\t}\n\n\tprivate static literalsGetter( description:PropertyDescription ):() => any {\n\t\tlet uri:string = description.uri;\n\t\treturn function():any[] {\n\t\t\treturn this.getPropertyValues( uri );\n\t\t};\n\t}\n\n\tprivate static setter( description:PropertyDescription ):( value:any ) => void {\n\t\tlet uri:string = description.uri;\n\t\treturn function ( value:any ):void {\n\t\t\tthis.setProperty( uri, value );\n\t\t};\n\t}\n\n\tconstructor() {\n\t\tsuper( null );\n\t}\n\n\thasClassProperties( resource:RDFNode.Class ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( resource, \"_propertyAddedCallbacks\" ) &&\n\t\t\tUtils.hasPropertyDefined( resource, \"_propertyDeletedCallbacks\" ) &&\n\n\t\t\tUtils.hasPropertyDefined( resource, \"uri\" ) &&\n\t\t\tUtils.hasPropertyDefined( resource, \"types\" ) &&\n\n\t\t\tUtils.hasFunction( resource, \"hasProperty\" ) &&\n\t\t\tUtils.hasFunction( resource, \"getProperty\" ) &&\n\t\t\tUtils.hasFunction( resource, \"getPropertyValue\" ) &&\n\t\t\tUtils.hasFunction( resource, \"getPropertyURI\" ) &&\n\t\t\tUtils.hasFunction( resource, \"getProperties\" ) &&\n\t\t\tUtils.hasFunction( resource, \"getPropertyValues\" ) &&\n\t\t\tUtils.hasFunction( resource, \"getPropertyURIs\" ) &&\n\t\t\tUtils.hasFunction( resource, \"addProperty\" ) &&\n\t\t\tUtils.hasFunction( resource, \"setProperty\" ) &&\n\t\t\tUtils.hasFunction( resource, \"deleteProperty\" )\n\t\t);\n\t}\n\n\tis( value:any ):boolean {\n\t\treturn (\n\t\t\tsuper.is( value ) &&\n\n\t\t\t( ! Utils.isNull( value ) ) &&\n\t\t\tUtils.isObject( value ) &&\n\n\t\t\tthis.hasClassProperties( value )\n\t\t);\n\t}\n\n\thasRDFClass( resource:RDFNode.Class ):boolean {\n\t\treturn true;\n\t}\n\n\tprotected injectBehavior<T>( node:T ):( T & Class ) {\n\t\tlet resource:Class = <any> node;\n\t\tif( this.hasClassProperties( resource ) ) return <any> resource;\n\n\t\tObject.defineProperties( resource, {\n\t\t\t\"_propertyAddedCallbacks\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: [],\n\t\t\t},\n\t\t\t\"_propertyDeletedCallbacks\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: [],\n\t\t\t},\n\n\t\t\t\"types\": {\n\t\t\t\tget: function():Value.Class[] {\n\t\t\t\t\tif ( ! this[ \"@type\" ] ) this[ \"@type\" ] = [];\n\t\t\t\t\treturn this[ \"@type\" ];\n\t\t\t\t},\n\t\t\t\tset: function ( value:any ):void {\n\t\t\t\t\t// TODO: Implement\n\t\t\t\t},\n\t\t\t\tenumerable: false,\n\t\t\t},\n\t\t\t\"uri\": {\n\t\t\t\tget: function():string {\n\t\t\t\t\treturn this[ \"@id\" ];\n\t\t\t\t},\n\t\t\t\tset: function ( value:string ):void {\n\t\t\t\t\tthis[ \"@id\" ] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: false,\n\t\t\t},\n\n\t\t\t\"hasProperty\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: hasProperty,\n\t\t\t},\n\t\t\t\"getProperty\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: getProperty,\n\t\t\t},\n\t\t\t\"getPropertyValue\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: getPropertyValue,\n\t\t\t},\n\t\t\t\"getPropertyURI\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: getPropertyURI,\n\t\t\t},\n\t\t\t\"getProperties\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: getProperties,\n\t\t\t},\n\t\t\t\"getPropertyValues\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: getPropertyValues,\n\t\t\t},\n\t\t\t\"getPropertyURIs\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: getPropertyURIs,\n\t\t\t},\n\t\t\t\"addProperty\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: addProperty,\n\t\t\t},\n\t\t\t\"setProperty\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: setProperty,\n\t\t\t},\n\t\t\t\"deleteProperty\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: deleteProperty,\n\t\t\t},\n\t\t} );\n\n\t\treturn <any> resource;\n\t}\n}\n\nexport let factory:Factory = new Factory;\n"],"sourceRoot":"/source/"}