{"version":3,"sources":["RDF/RDFNode.ts"],"names":["Factory","Factory.constructor","Factory.is","Factory.create","Util","Util.constructor","Util.areEqual","Util.getPropertyURI"],"mappings":";;;;;;;;;YAOA;gBAAAA;gBAWAC,CAACA;gBAVOD,UAAEA,GAATA,UAAWA,KAAYA;oBACtBE,MAAMA,CAACA,KAAKA,CAACA,WAAWA,CAAEA,KAAKA,EAAEA,KAAKA,CAAEA;2BACpCA,KAAKA,CAACA,QAAQA,CAAEA,KAAKA,CAAEA,KAAKA,CAAEA,CAAEA,CAACA;gBACtCA,CAACA;gBAEMF,cAAMA,GAAbA,UAAeA,GAAUA;oBACxBG,MAAMA,CAACA;wBACNA,KAAKA,EAAEA,GAAGA;qBACVA,CAACA;gBACHA,CAACA;gBACFH,cAACA;YAADA,CAXA,AAWCA,IAAA;YAXD,6BAWC,CAAA;YAED;gBAAAI;gBAYAC,CAACA;gBAXOD,aAAQA,GAAfA,UAAiBA,KAAWA,EAAEA,KAAWA;oBACxCE,MAAMA,CAACA,KAAKA,CAAEA,KAAKA,CAAEA,KAAKA,KAAKA,CAAEA,KAAKA,CAAEA,CAACA;gBAC1CA,CAACA;gBAEMF,mBAAcA,GAArBA,UAAuBA,IAAUA,EAAEA,SAAgBA;oBAClDG,EAAEA,CAAAA,CAAEA,CAAEA,CAAEA,SAASA,IAAIA,IAAIA,CAAGA,CAACA;wBAACA,MAAMA,CAACA,IAAIA,CAACA;oBAC1CA,EAAEA,CAAAA,CAAEA,CAAEA,KAAKA,CAACA,OAAOA,CAAEA,IAAIA,CAAEA,SAASA,CAAEA,CAAGA,CAACA;wBAACA,MAAMA,CAACA,IAAIA,CAACA;oBACvDA,IAAIA,GAAGA,GAAUA,IAAIA,CAAEA,SAASA,CAAEA,CAACA,IAAIA,CAAEA,UAAEA,KAAiBA,IAAMA,OAAAA,OAAOA,CAACA,EAAEA,CAAEA,KAAKA,CAAEA,EAAnBA,CAAmBA,CAAEA,CAACA;oBAExFA,MAAMA,CAACA,OAAOA,GAAGA,KAAKA,WAAWA,GAAGA,GAAGA,CAAEA,KAAKA,CAAEA,GAAGA,IAAIA,CAACA;gBACzDA,CAACA;gBACFH,WAACA;YAADA,CAZA,AAYCA,IAAA;YAZD,uBAYC,CAAA","file":"RDF/RDFNode.js","sourcesContent":["import * as Utils from \"./../Utils\";\nimport * as Value from \"./Value\";\n\nexport interface Class {\n\t\"@id\":string;\n}\n\nexport class Factory {\n\tstatic is( value:Object ):boolean {\n\t\treturn Utils.hasProperty( value, \"@id\" )\n\t\t\t&& Utils.isString( value[ \"@id\" ] );\n\t}\n\n\tstatic create( uri:string ):Class {\n\t\treturn {\n\t\t\t\"@id\": uri,\n\t\t};\n\t}\n}\n\nexport class Util {\n\tstatic areEqual( node1:Class, node2:Class ):boolean {\n\t\treturn node1[ \"@id\" ] === node2[ \"@id\" ];\n\t}\n\n\tstatic getPropertyURI( node:Class, predicate:string ):string {\n\t\tif( ! ( predicate in node ) ) return null;\n\t\tif( ! Utils.isArray( node[ predicate ] ) ) return null;\n\t\tlet uri:string = node[ predicate ].find( ( value:Value.Class ) => Factory.is( value ) );\n\n\t\treturn typeof uri !== \"undefined\" ? uri[ \"@id\" ] : null;\n\t}\n}\n"],"sourceRoot":"/source/"}