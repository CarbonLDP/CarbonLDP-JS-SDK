{"version":3,"sources":["NS/XSD.ts"],"names":[],"mappings":";;;;QAEa,SAAS;;;;;;;YAAT,uBAAA,SAAS,GAAU,mCAAmC,CAAA,CAAC;YAEpE;gBAAA;gBA+BA,CAAC;gBA9BO,aAAI,GAAU,SAAS,GAAG,MAAM,CAAC;gBACjC,iBAAQ,GAAU,SAAS,GAAG,UAAU,CAAC;gBACzC,iBAAQ,GAAU,SAAS,GAAG,UAAU,CAAC;gBACzC,aAAI,GAAU,SAAS,GAAG,MAAM,CAAC;gBACjC,eAAM,GAAU,SAAS,GAAG,QAAQ,CAAC;gBACrC,kBAAS,GAAU,SAAS,GAAG,WAAW,CAAC;gBAC3C,cAAK,GAAU,SAAS,GAAG,OAAO,CAAC;gBACnC,mBAAU,GAAU,SAAS,GAAG,YAAY,CAAC;gBAC7C,aAAI,GAAU,SAAS,GAAG,MAAM,CAAC;gBAEjC,aAAI,GAAU,SAAS,GAAG,MAAM,CAAC;gBACjC,gBAAO,GAAU,SAAS,GAAG,SAAS,CAAC;gBACvC,YAAG,GAAU,SAAS,GAAG,KAAK,CAAC;gBAC/B,gBAAO,GAAU,SAAS,GAAG,SAAS,CAAC;gBACvC,aAAI,GAAU,SAAS,GAAG,MAAM,CAAC;gBACjC,wBAAe,GAAU,SAAS,GAAG,iBAAiB,CAAC;gBACvD,2BAAkB,GAAU,SAAS,GAAG,oBAAoB,CAAC;gBAC7D,2BAAkB,GAAU,SAAS,GAAG,oBAAoB,CAAC;gBAC7D,wBAAe,GAAU,SAAS,GAAG,iBAAiB,CAAC;gBACvD,cAAK,GAAU,SAAS,GAAG,OAAO,CAAC;gBACnC,qBAAY,GAAU,SAAS,GAAG,cAAc,CAAC;gBACjD,oBAAW,GAAU,SAAS,GAAG,aAAa,CAAC;gBAC/C,sBAAa,GAAU,SAAS,GAAG,eAAe,CAAC;gBACnD,qBAAY,GAAU,SAAS,GAAG,cAAc,CAAC;gBACjD,eAAM,GAAU,SAAS,GAAG,QAAQ,CAAC;gBACrC,cAAK,GAAU,SAAS,GAAG,OAAO,CAAC;gBAEnC,gBAAO,GAAU,SAAS,GAAG,SAAS,CAAC;gBACvC,eAAM,GAAU,SAAS,GAAG,QAAQ,CAAC;gBACrC,eAAM,GAAU,SAAS,GAAG,QAAQ,CAAC;gBAC7C,eAAC;YAAD,CA/BA,AA+BC,IAAA;YA/BD,+BA+BC,CAAA;YAED,KAAK,CAAC,kBAAkB,CAAE,QAAQ,EAAE,UAAE,GAAU,EAAE,KAAS;gBAC1D,QAAQ,CAAE,KAAK,CAAE,GAAG,GAAG,CAAC;YACzB,CAAC,CAAC,CAAC","file":"NS/XSD.js","sourcesContent":["import * as Utils from \"./../Utils\";\n\nexport const namespace:string = \"http://www.w3.org/2001/XMLSchema#\";\n\nexport class DataType {\n\tstatic date:string = namespace + \"date\";\n\tstatic dateTime:string = namespace + \"dateTime\";\n\tstatic duration:string = namespace + \"duration\";\n\tstatic gDay:string = namespace + \"gDay\";\n\tstatic gMonth:string = namespace + \"gMonth\";\n\tstatic gMonthDay:string = namespace + \"gMonthDay\";\n\tstatic gYear:string = namespace + \"gYear\";\n\tstatic gYearMonth:string = namespace + \"gYearMonth\";\n\tstatic time:string = namespace + \"time\";\n\n\tstatic byte:string = namespace + \"byte\";\n\tstatic decimal:string = namespace + \"decimal\";\n\tstatic int:string = namespace + \"int\";\n\tstatic integer:string = namespace + \"integer\";\n\tstatic long:string = namespace + \"long\";\n\tstatic negativeInteger:string = namespace + \"negativeInteger\";\n\tstatic nonNegativeInteger:string = namespace + \"nonNegativeInteger\";\n\tstatic nonPositiveInteger:string = namespace + \"nonPositiveInteger\";\n\tstatic positiveInteger:string = namespace + \"positiveInteger\";\n\tstatic short:string = namespace + \"short\";\n\tstatic unsignedLong:string = namespace + \"unsignedLong\";\n\tstatic unsignedInt:string = namespace + \"unsignedInt\";\n\tstatic unsignedShort:string = namespace + \"unsignedShort\";\n\tstatic unsignedByte:string = namespace + \"unsignedByte\";\n\tstatic double:string = namespace + \"double\";\n\tstatic float:string = namespace + \"float\";\n\n\tstatic boolean:string = namespace + \"boolean\";\n\tstatic string:string = namespace + \"string\";\n\tstatic object:string = namespace + \"object\";\n}\n\nUtils.forEachOwnProperty( DataType, ( key:string, value:any ):void => {\n\tDataType[ value ] = key;\n});\n"],"sourceRoot":"/source/"}