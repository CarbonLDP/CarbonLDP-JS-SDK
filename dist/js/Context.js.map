{"version":3,"sources":["Context.ts"],"names":["Context","Context.constructor","Context.getBaseURI","Context.hasSetting","Context.getSetting","Context.setSetting","Context.deleteSetting","Context.getMainContext","Context.expandMainContext","Context.setMainContext","Context.hasClassContext","Context.getClassContext","Context.expandClassContext","Context.setClassContext"],"mappings":"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","file":"Context.js","sourcesContent":["/// <reference path=\"./../typings/tsd.d.ts\" />\n\nimport Auth from \"./Auth\";\nimport * as ContextDigester from \"./ContextDigester\";\nimport Documents from \"./Documents\";\nimport * as Errors from \"./Errors\";\nimport * as JSONLDConverter from \"./JSONLDConverter\";\nimport * as Pointer from \"./Pointer\";\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nabstract class Context {\n\t/* tslint:disable: variable-name */\n\tAuth:Auth;\n\tDocuments:Documents;\n\t/* tslint:enable: variable-name */\n\n\tparentContext:Context;\n\n\tprotected settings:Map<string, any>;\n\n\tprotected mainContext:ContextDigester.DigestedContext;\n\tprotected classContexts:Map<string, ContextDigester.DigestedContext>;\n\n\tconstructor( parentContext:Context = null ) {\n\t\tthis.parentContext = parentContext;\n\n\t\tthis.settings = new Map<string, any>();\n\n\t\tthis.mainContext = new ContextDigester.DigestedContext();\n\t\tthis.classContexts = new Map<string, ContextDigester.DigestedContext>();\n\n\t\tthis.Auth = new Auth( this );\n\t\tthis.Documents = new Documents( this );\n\t}\n\n\tgetBaseURI():string {\n\t\treturn this.resolve( \"\" );\n\t}\n\n\tabstract resolve( relativeURI:string ):string;\n\n\thasSetting( name:string ):boolean {\n\t\treturn (\n\t\t\tthis.settings.has( name ) ||\n\t\t\t( this.parentContext && this.parentContext.hasSetting( name ) )\n\t\t);\n\t}\n\n\tgetSetting( name:string ):any {\n\t\tif( this.settings.has( name ) ) return this.settings.get( name );\n\t\tif( this.parentContext && this.parentContext.hasSetting( name ) ) return this.parentContext.getSetting( name );\n\t\treturn null;\n\t}\n\n\tsetSetting( name:string, value:any ):any {\n\t\tthis.settings.set( name, value );\n\t}\n\n\tdeleteSetting( name:string ):any {\n\t\tthis.settings.delete( name );\n\t}\n\n\tgetMainContext():ContextDigester.DigestedContext {\n\t\treturn this.mainContext;\n\t}\n\n\texpandMainContext( contexts:ContextDigester.Context[] ):void;\n\texpandMainContext( context:ContextDigester.Context ):void;\n\texpandMainContext( contextOrContexts:any ):void {\n\t\tlet digestedContext:ContextDigester.DigestedContext = ContextDigester.Class.digestContext( contextOrContexts );\n\t\tthis.mainContext = ContextDigester.Class.combineDigestedContexts( [ this.mainContext, digestedContext ] );\n\t}\n\n\tsetMainContext( contexts:ContextDigester.Context[] ):void;\n\tsetMainContext( context:ContextDigester.Context ):void;\n\tsetMainContext( contextOrContexts:any ):void {\n\t\tthis.mainContext = ContextDigester.Class.digestContext( contextOrContexts );\n\t}\n\n\thasClassContext( classURI:string ):boolean {\n\t\treturn this.classContexts.has( classURI );\n\t}\n\n\tgetClassContext( classURI:string ):ContextDigester.DigestedContext {\n\t\treturn this.classContexts.get( classURI );\n\t}\n\n\texpandClassContext( classURI:string, contexts:ContextDigester.Context[] ):void;\n\texpandClassContext( classURI:string, context:ContextDigester.Context ):void;\n\texpandClassContext( classURI:string, contextOrContexts:any ):void {\n\t\tif( ! this.classContexts.has( classURI ) ) {\n\t\t\tthis.setClassContext( classURI, contextOrContexts );\n\t\t\treturn;\n\t\t}\n\n\t\tlet digestedContext:ContextDigester.DigestedContext = ContextDigester.Class.digestContext( contextOrContexts );\n\t\tdigestedContext = ContextDigester.Class.combineDigestedContexts( [ this.classContexts.get( classURI ), digestedContext ] );\n\t\tthis.classContexts.set( classURI, digestedContext );\n\t}\n\n\tsetClassContext( classURI:string, contexts:ContextDigester.Context[] ):void;\n\tsetClassContext( classURI:string, context:ContextDigester.Context ):void;\n\tsetClassContext( classURI:string, contextOrContexts:any ):void {\n\t\tlet digestedContext:ContextDigester.DigestedContext = ContextDigester.Class.digestContext( contextOrContexts );\n\t\tdigestedContext = ContextDigester.Class.combineDigestedContexts( [ this.mainContext, digestedContext ] );\n\n\t\tthis.classContexts.set( classURI, digestedContext );\n\t}\n}\n\nexport default Context;\n"],"sourceRoot":"/source/"}