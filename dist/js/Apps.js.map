{"version":3,"sources":["Apps.ts"],"names":["Apps","Apps.constructor","Apps.get","Apps.getAppsContainerURI"],"mappings":"AAAA,kDAAkD;;;;;;;;;;;;;;;;;;;YAUlD;gBAGCA,cAAaA,OAAeA;oBAC3BC,IAAIA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;gBACxBA,CAACA;gBAEDD,kBAAGA,GAAHA,UAAKA,GAAUA;oBAAfE,iBAcCA;oBAbAA,IAAIA,gBAAgBA,GAAUA,IAAIA,CAACA,mBAAmBA,EAAEA,CAACA;oBACzDA,EAAEA,CAACA,CAAEA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,UAAUA,CAAEA,GAAGA,CAAGA,CAACA,CAACA,CAACA;wBACtCA,EAAEA,CAACA,CAAEA,CAAEA,KAAKA,CAACA,CAACA,CAACA,UAAUA,CAAEA,GAAGA,EAAEA,gBAAgBA,CAAGA,CAACA;4BAACA,GAAGA,GAAGA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,CAAEA,gBAAgBA,EAAEA,GAAGA,CAAEA,CAACA;wBACzGA,GAAGA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,OAAOA,CAAEA,GAAGA,CAAEA,CAACA;oBACnCA,CAACA;oBAEDA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,SAASA,CAACA,GAAGA,CAAEA,GAAGA,CAAEA,CAACA,IAAIA,CAC5CA,UAAEA,EAA8DA;4BAA5DA,QAAQA,UAAEA,QAAQA;wBACrBA,EAAEA,CAACA,CAAEA,CAAEA,QAAQA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,EAAEA,CAACA,KAAKA,CAACA,WAAWA,CAAGA,CAACA;4BAACA,MAAMA,IAAIA,KAAKA,CAAEA,+CAA+CA,CAAEA,CAACA;wBAE3HA,MAAMA,CAACA,IAAIA,GAAGA,CAACA,OAAOA,CAAEA,KAAIA,CAACA,OAAOA,EAAQA,QAAQA,CAAEA,CAACA;oBACxDA,CAACA,CACDA,CAACA;gBACHA,CAACA;gBAEOF,kCAAmBA,GAA3BA;oBACCG,EAAEA,CAACA,CAAEA,CAAEA,IAAIA,CAACA,OAAOA,CAACA,UAAUA,CAAEA,yBAAyBA,CAAGA,CAACA;wBAACA,MAAMA,IAAIA,KAAKA,CAAEA,yCAAyCA,CAAEA,CAACA;oBAC3HA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,UAAUA,CAAEA,yBAAyBA,CAAEA,CAACA;gBAC7DA,CAACA;gBACFH,WAACA;YAADA,CA3BA,AA2BCA,IAAA;YA3BD,uBA2BC,CAAA;YAED,oBAAe,IAAI,EAAC","file":"Apps.js","sourcesContent":["/// <reference path=\"./../typings/typings.d.ts\" />\n\nimport * as App from \"./App\";\nimport * as Document from \"./Document\";\nimport Context from \"./Context\";\nimport * as HTTP from \"./HTTP\";\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\nimport * as CS from \"./NS/CS\";\n\nexport class Apps {\n\tprivate context:Context;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\tget( uri:string ):Promise<App.Context> {\n\t\tlet appsContainerURI:string = this.getAppsContainerURI();\n\t\tif ( RDF.URI.Util.isRelative( uri ) ) {\n\t\t\tif ( ! Utils.S.startsWith( uri, appsContainerURI ) ) uri = RDF.URI.Util.resolve( appsContainerURI, uri );\n\t\t\turi = this.context.resolve( uri );\n\t\t}\n\n\t\treturn this.context.documents.get( uri ).then(\n\t\t\t( [ document, response ]:[ Document.Class, HTTP.Response.Class ] ) => {\n\t\t\t\tif ( ! document.types.indexOf( CS.Class.Application ) ) throw new Error( \"The resource fetched is not a cs:Application.\" );\n\n\t\t\t\treturn new App.Context( this.context, <any> document );\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate getAppsContainerURI():string {\n\t\tif ( ! this.context.hasSetting( \"platform.apps.container\" ) ) throw new Error( \"The apps container URI hasn't been set.\" );\n\t\treturn this.context.getSetting( \"platform.apps.container\" );\n\t}\n}\n\nexport default Apps;\n"],"sourceRoot":"/source/"}