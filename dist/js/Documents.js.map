{"version":3,"sources":["Documents.ts"],"names":["parse","expand","Documents","Documents.constructor","Documents.get","Documents.commit","Documents.getRDFDocument","Documents.injectDefinitions"],"mappings":"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","file":"Documents.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport * as jsonld from \"jsonld\";\n\nimport Committer from \"./Committer\";\nimport * as Errors from \"./Errors\";\nimport * as HTTP from \"./HTTP\";\nimport Parent from \"./Parent\";\nimport * as RDF from \"./RDF\";\nimport * as Utils from \"./Utils\";\n\nimport * as Document from \"./Document\";\nimport * as RDFSource from \"./LDP/RDFSource\";\nimport * as LDP from \"./NS/LDP\";\n\nfunction parse( input:string ):any {\n\ttry {\n\t\treturn JSON.parse( input );\n\t} catch ( error ) {\n\t\t// TODO: Handle SyntaxError\n\t\tthrow error;\n\t}\n}\n\nfunction expand( input:HTTP.ProcessedResponse<any>, options?:jsonld.ExpandOptions ):Promise<Object> {\n\treturn new Promise( ( resolve:( result:Object ) => void, reject:( error:any ) => void ) => {\n\t\tjsonld.expand( input.result, options, function ( error:any, expanded:Object ):void {\n\t\t\tif ( error ) {\n\t\t\t\t// TODO: Handle jsonld.expand error\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tinput.result = expanded;\n\t\t\tresolve( input );\n\t\t} );\n\t} );\n}\n\nclass Documents implements Committer<Document.Class> {\n\tprivate parent:Parent;\n\n\tconstructor( parent:Parent = null ) {\n\t\tthis.parent = parent;\n\t}\n\n\tget( uri:string, requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.ProcessedResponse<Document.Class>> {\n\t\tif ( RDF.URI.Util.isRelative( uri ) ) {\n\t\t\tif ( ! this.parent ) throw new Errors.IllegalArgumentError( \"IllegalArgument: This module doesn't support relative URIs.\" );\n\t\t\turi = this.parent.resolve( uri );\n\t\t}\n\n\t\tif ( this.parent && this.parent.Auth.isAuthenticated() ) this.parent.Auth.addAuthentication( requestOptions );\n\n\t\tHTTP.Request.Service.setAcceptHeader( \"application/ld+json\", requestOptions );\n\t\tHTTP.Request.Service.setPreferredInteractionModel( LDP.Class.RDFSource, requestOptions );\n\n\t\treturn HTTP.Request.Service.get( uri, requestOptions ).then(\n\t\t\t( response:HTTP.Response ) => {\n\t\t\t\tlet parsedObject:Object = parse( response.data );\n\n\t\t\t\treturn expand( {\n\t\t\t\t\tresult: parsedObject,\n\t\t\t\t\tresponse: response\n\t\t\t\t} );\n\t\t\t}\n\t\t).then(\n\t\t\t( processedResponse:HTTP.ProcessedResponse<Object> ) => {\n\t\t\t\tlet expandedResult:any = processedResponse.result;\n\t\t\t\tlet rdfDocuments:RDF.Document.Class[] = RDF.Document.Util.getDocuments( expandedResult );\n\t\t\t\tlet rdfDocument:RDF.Document.Class = this.getRDFDocument( rdfDocuments );\n\n\t\t\t\tlet document:Document.Class = Document.factory.from( rdfDocument );\n\n\t\t\t\tthis.injectDefinitions( (<RDF.Resource.Class[]>document.getFragments()).concat( document ) );\n\t\t\t\t// TODO: Inject persisted states\n\n\t\t\t\treturn {\n\t\t\t\t\tresult: document,\n\t\t\t\t\tresponse: processedResponse.response\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\t}\n\n\tcommit( document:Document.Class, requestOptions:HTTP.Request.Options = {} ):Promise<HTTP.Response> {\n\t\t// TODO: Check if the document was already persisted\n\t\t// TODO: Check if the document is dirty\n\n\t\tif ( this.parent && this.parent.Auth.isAuthenticated() ) this.parent.Auth.addAuthentication( requestOptions );\n\n\t\tHTTP.Request.Service.setAcceptHeader( \"application/ld+json\", requestOptions );\n\t\tHTTP.Request.Service.setPreferredInteractionModel( LDP.Class.RDFSource, requestOptions );\n\n\t\treturn HTTP.Request.Service.put( document.uri, document.toJSON(), requestOptions );\n\t}\n\n\tprivate getRDFDocument( rdfDocuments:RDF.Document.Class[] ):RDF.Document.Class {\n\t\tif ( rdfDocuments.length === 0 ) throw new Error( \"BadResponse: No document was returned.\" );\n\t\tif ( rdfDocuments.length > 1 ) throw new Error( \"Unsupported: Multiple graphs are currently not supported.\" );\n\t\treturn rdfDocuments[ 0 ];\n\t}\n\n\tprivate injectDefinitions( resources:RDF.Resource.Class[] ):RDF.Resource.Class[] {\n\t\tlet definitionURIs:string[] = this.parent.getDefinitionURIs();\n\n\t\tfor ( let i:number = 0, length:number = definitionURIs.length; i < length; i ++ ) {\n\t\t\tlet definitionURI:string = definitionURIs[ i ];\n\t\t\tlet toInject:RDF.Resource.Class[] = [];\n\t\t\tfor ( let j:number = 0, resourcesLength:number = resources.length; j < resourcesLength; j ++ ) {\n\t\t\t\tlet resource:RDF.Resource.Class = resources[ j ];\n\t\t\t\tif ( resource.types.indexOf( definitionURI ) !== - 1 ) toInject.push( resource );\n\t\t\t}\n\t\t\tif ( toInject.length > 0 ) RDF.Resource.Factory.injectDescriptions( toInject, this.parent.getDefinition( definitionURI ) );\n\t\t}\n\n\t\treturn resources;\n\t}\n}\n\nexport default Documents;\n"],"sourceRoot":"/source/"}