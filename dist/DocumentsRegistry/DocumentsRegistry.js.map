{"version":3,"sources":["DocumentsRegistry/DocumentsRegistry.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,iDAAgD;AAGhD,sEAAqE;AAErE,0DAAyD;AAIzD,kCAAiC;AAEjC,iDAAgD;AAkBnC,QAAA,iBAAiB,GAA4B;IACzD,SAAS,EAAE;QACV,QAAQ,EAAR,UAAkC,EAAS;YAC1C,OAAO,IAAI,CAAC,UAAU,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QACpC,CAAC;QAED,WAAW,EAAX,UAAqC,EAAS;YAC7C,IAAI,SAAG,CAAC,WAAW,CAAE,EAAE,CAAE;gBAAG,mBAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;YAC5E,OAAO,iCAAe,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;QAC/D,CAAC;KACD;IAGD,WAAW,EAAX,UAAa,MAAa;QACzB,OAAO,+BAAc;aACnB,iBAAiB,CAAE,yBAAiB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC5D,CAAC;IAED,QAAQ,EAAR,UAA2C,MAAQ;QAClD,IAAI,yBAAiB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAE5D,IAAM,IAAI,GAA2B,MAAM,CAAC,MAAM,CAAE,MAAM,EAAE;YAC3D,gBAAgB,EAAE,mBAAQ;SAC1B,CAAE,CAAC;QAEJ,IAAM,MAAM,GAAiC,+BAAc;aACzD,gBAAgB,CAAE,IAAI,EAAE,iCAAe,CAAE,CAAC;QAE5C,OAAO,+BAAc;aACnB,oBAAoB,CAAE,yBAAiB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC/D,CAAC;IAGD,MAAM,EAAN,UAA0B,IAA8B;QAEvD,OAAO,yBAAiB,CAAC,UAAU,cAAO,IAAW,EAAI,CAAC;IAC3D,CAAC;IAED,UAAU,EAAV,UAA8B,MAAgC;QAC7D,IAAM,QAAQ,GAAyB,yBAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAC5E,OAAO,iCAAe,CAAC,UAAU,CAAE,QAAQ,CAAE,CAAC;IAC/C,CAAC;CACD,CAAC","file":"DocumentsRegistry.js","sourcesContent":["import { DocumentsContext } from \"../Context/DocumentsContext\";\n\nimport { Document } from \"../Document/Document\";\n\nimport { BaseGeneralRegistry } from \"../GeneralRegistry/BaseGeneralRegistry\";\nimport { GeneralRegistry } from \"../GeneralRegistry/GeneralRegistry\";\n\nimport { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelFactory } from \"../Model/ModelFactory\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\n\nimport { URI } from \"../RDF/URI\";\n\nimport { Registry } from \"../Registry/Registry\";\n\nimport { BaseDocumentsRegistry } from \"./BaseDocumentsRegistry\";\n\n\nexport interface DocumentsRegistry extends GeneralRegistry<Document> {\n\treadonly $context:DocumentsContext;\n\n\tregister( id:string ):Document;\n}\n\n\nexport type DocumentsRegistryFactory =\n\t& ModelPrototype<DocumentsRegistry, GeneralRegistry<Document>, \"_getLocalID\">\n\t& ModelDecorator<DocumentsRegistry, BaseDocumentsRegistry>\n\t& ModelFactory<DocumentsRegistry, BaseDocumentsRegistry>\n\t;\n\nexport const DocumentsRegistry:DocumentsRegistryFactory = {\n\tPROTOTYPE: {\n\t\tregister( this:DocumentsRegistry, id:string ):Document {\n\t\t\treturn this.getPointer( id, true );\n\t\t},\n\n\t\t_getLocalID( this:DocumentsRegistry, id:string ):string {\n\t\t\tif( URI.hasFragment( id ) ) Registry.PROTOTYPE._getLocalID.call( this, id );\n\t\t\treturn GeneralRegistry.PROTOTYPE._getLocalID.call( this, id );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is DocumentsRegistry {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( DocumentsRegistry.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseDocumentsRegistry>( object:T ):T & DocumentsRegistry {\n\t\tif( DocumentsRegistry.isDecorated( object ) ) return object;\n\n\t\tconst base:T & BaseGeneralRegistry = Object.assign( object, {\n\t\t\t__modelDecorator: Document,\n\t\t} );\n\n\t\tconst target:T & GeneralRegistry<Document> = ModelDecorator\n\t\t\t.decorateMultiple( base, GeneralRegistry );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( DocumentsRegistry.PROTOTYPE, target );\n\t},\n\n\n\tcreate<T extends object>( data:T & BaseDocumentsRegistry ):T & DocumentsRegistry {\n\t\t// FIXME\n\t\treturn DocumentsRegistry.createFrom( { ...data as any } );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseDocumentsRegistry ):T & DocumentsRegistry {\n\t\tconst registry:T & DocumentsRegistry = DocumentsRegistry.decorate( object );\n\t\treturn GeneralRegistry.createFrom( registry );\n\t},\n};\n"]}