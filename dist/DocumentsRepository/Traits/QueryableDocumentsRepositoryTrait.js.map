{"version":3,"sources":["DocumentsRepository/Traits/QueryableDocumentsRepositoryTrait.ts"],"names":[],"mappings":"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","file":"QueryableDocumentsRepositoryTrait.js","sourcesContent":["import {\n\tBindToken,\n\tConstructToken,\n\tIRIToken,\n\tOptionalToken,\n\tPatternToken,\n\tPredicateToken,\n\tQueryToken,\n\tSelectToken,\n\tSubjectToken,\n\tValuesToken,\n\tVariableToken\n} from \"sparqler/tokens\";\n\nimport { Document } from \"../../Document/Document\";\n\nimport { IllegalArgumentError } from \"../../Errors/IllegalArgumentError\";\nimport { IllegalStateError } from \"../../Errors/IllegalStateError\";\n\nimport { FreeResources } from \"../../FreeResources/FreeResources\";\n\nimport { GETOptions, RequestOptions, RequestUtils } from \"../../HTTP/Request\";\n\nimport { JSONLDCompacter } from \"../../JSONLD/JSONLDCompacter\";\nimport { JSONLDParser } from \"../../JSONLD/JSONLDParser\";\n\nimport { DocumentMetadata } from \"../../LDP/DocumentMetadata\";\nimport { ResponseMetadata } from \"../../LDP/ResponseMetadata\";\n\nimport { ModelDecorator } from \"../../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../../Model/ModelPrototype\";\n\nimport { Pointer } from \"../../Pointer/Pointer\";\n\nimport { QueryableMetadata } from \"../../QueryDocuments/QueryableMetadata\";\nimport { QueryablePointer } from \"../../QueryDocuments/QueryablePointer\";\nimport { QueryContext } from \"../../QueryDocuments/QueryContext\";\nimport { QueryContextBuilder } from \"../../QueryDocuments/QueryContextBuilder\";\nimport { QueryContextPartial } from \"../../QueryDocuments/QueryContextPartial\";\nimport { QueryDocumentBuilder } from \"../../QueryDocuments/QueryDocumentBuilder\";\nimport { QueryDocumentsBuilder } from \"../../QueryDocuments/QueryDocumentsBuilder\";\nimport { QueryMetadata } from \"../../QueryDocuments/QueryMetadata\";\nimport { QueryProperty, QueryPropertyType } from \"../../QueryDocuments/QueryProperty\";\nimport {\n\t_areDifferentType,\n\t_createAllPattern,\n\t_createPropertyPatterns,\n\t_createTypesPattern,\n\t_getAllTriples,\n\t_getPathProperty\n} from \"../../QueryDocuments/Utils\";\n\nimport { RDFDocument } from \"../../RDF/Document\";\nimport { RDFNode } from \"../../RDF/Node\";\nimport { URI } from \"../../RDF/URI\";\n\nimport { SPARQLService } from \"../../SPARQL/SPARQLService\";\n\nimport { isBoolean, isDate, isFunction, isNumber, isObject, isString } from \"../../Utils\";\n\nimport { C } from \"../../Vocabularies/C\";\nimport { LDP } from \"../../Vocabularies/LDP\";\n\nimport { BaseDocumentsRepository } from \"../BaseDocumentsRepository\";\nimport { _getErrorResponseParserFn } from \"../Utils\";\n\nimport { LDPDocumentsRepositoryTrait } from \"./LDPDocumentsRepositoryTrait\";\n\n\nexport interface QueryableDocumentsRepositoryTrait extends LDPDocumentsRepositoryTrait {\n\tget<T extends object>( uri:string, requestOptions?:GETOptions ):Promise<T & Document>;\n\tget<T extends object>( uri:string, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tget<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\tresolve<T extends object>( document:Document, requestOptions?:GETOptions ):Promise<T & Document>;\n\tresolve<T extends object>( document:Document, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\tresolve<T extends object>( document:Document, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\n\trefresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\tsaveAndRefresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\n\tgetChildren<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetChildren<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\tgetMembers<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\tgetMembers<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\tlistChildren<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\n\tlistMembers<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n}\n\n\nconst emptyQueryBuildFn:QueryBuilderFn = _ => _;\n\nfunction __executePatterns<T extends object>( this:void, repository:QueryableDocumentsRepositoryTrait, url:string, requestOptions:RequestOptions, queryContext:QueryContext, targetName:string, constructPatterns:PatternToken[], target?:Document ):Promise<(T & Document)[]> {\n\tconst metadataVar:VariableToken = queryContext.getVariable( \"metadata\" );\n\tconst construct:ConstructToken = new ConstructToken()\n\t\t.addTriple( new SubjectToken( metadataVar )\n\t\t\t.addPredicate( new PredicateToken( \"a\" )\n\t\t\t\t.addObject( queryContext.compactIRI( C.VolatileResource ) )\n\t\t\t\t.addObject( queryContext.compactIRI( C.QueryMetadata ) )\n\t\t\t)\n\t\t\t.addPredicate( new PredicateToken( queryContext.compactIRI( C.target ) )\n\t\t\t\t.addObject( queryContext.getVariable( targetName ) )\n\t\t\t)\n\t\t)\n\t\t.addPattern( new BindToken( \"BNODE()\", metadataVar ) )\n\t\t.addPattern( ...constructPatterns );\n\n\tconst query:QueryToken = new QueryToken( construct )\n\t\t.addPrologues( ...queryContext.getPrologues() );\n\n\tconst triples:SubjectToken[] = _getAllTriples( constructPatterns );\n\tconstruct.addTriple( ...triples );\n\n\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferResultsContext ] }, requestOptions );\n\n\treturn SPARQLService\n\t\t.executeRawCONSTRUCTQuery( url, query.toString(), requestOptions )\n\t\t.then( ( [ strConstruct ] ) => strConstruct )\n\t\t.then( ( jsonldString ) => {\n\t\t\treturn new JSONLDParser().parse( jsonldString );\n\t\t} )\n\t\t.then<(T & Document)[]>( ( rdfNodes:RDFNode[] ) => {\n\t\t\tconst freeNodes:RDFNode[] = RDFDocument.getFreeNodes( rdfNodes );\n\n\t\t\tlet freeResources:FreeResources;\n\t\t\ttry {\n\t\t\t\tfreeResources = FreeResources.parseFreeNodes( repository.$context.registry, freeNodes );\n\t\t\t} catch( e ) {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tconst targetSet:Set<string> = new Set( freeResources\n\t\t\t\t.getPointers( true )\n\t\t\t\t.filter<QueryMetadata>( QueryMetadata.is )\n\t\t\t\t.map<Pointer | Pointer[]>( x => x.target )\n\t\t\t\t// Alternative to flatMap\n\t\t\t\t.reduce<Pointer[]>( ( targets, currentTargets ) => targets.concat( currentTargets ), [] )\n\t\t\t\t.map( x => x.$id )\n\t\t\t);\n\n\t\t\tconst targetETag:string | undefined = target && target.$eTag;\n\t\t\tif( target ) target.$eTag = void 0;\n\n\t\t\tfreeResources\n\t\t\t\t.getPointers( true )\n\t\t\t\t.filter( ResponseMetadata.is )\n\t\t\t\t.map<DocumentMetadata[] | DocumentMetadata>( responseMetadata => responseMetadata.documentsMetadata || responseMetadata[ C.documentMetadata ] )\n\t\t\t\t.map<DocumentMetadata[]>( documentsMetadata => Array.isArray( documentsMetadata ) ? documentsMetadata : [ documentsMetadata ] )\n\t\t\t\t.forEach( documentsMetadata => documentsMetadata.forEach( documentMetadata => {\n\t\t\t\t\tif( ! documentMetadata ) return;\n\n\t\t\t\t\tconst relatedDocument:Document = documentMetadata.relatedDocument || documentMetadata[ C.relatedDocument ];\n\t\t\t\t\tconst eTag:string = documentMetadata.eTag || documentMetadata[ C.eTag ];\n\n\t\t\t\t\tif( ! eTag ) return;\n\t\t\t\t\trelatedDocument._resolved = true;\n\n\t\t\t\t\tif( relatedDocument.$eTag === void 0 ) relatedDocument.$eTag = eTag;\n\t\t\t\t\tif( relatedDocument.$eTag !== eTag ) relatedDocument.$eTag = null;\n\t\t\t\t} ) );\n\n\t\t\tif( targetETag && targetETag === target.$eTag )\n\t\t\t\treturn [ target as T & Document ];\n\n\t\t\tconst rdfDocuments:RDFDocument[] = rdfNodes\n\t\t\t\t.filter<any>( RDFDocument.is );\n\n\t\t\tconst targetDocuments:RDFDocument[] = rdfDocuments\n\t\t\t\t.filter( x => targetSet.has( x[ \"@id\" ] ) );\n\n\t\t\treturn new JSONLDCompacter( repository.$context.registry, targetName, queryContext )\n\t\t\t\t.compactDocuments<T & Document>( rdfDocuments, targetDocuments );\n\t\t} )\n\t\t.catch( _getErrorResponseParserFn( repository.$context.registry ) )\n\t\t;\n}\n\nfunction __executeBuilder<T extends object>( repository:QueryableDocumentsRepositoryTrait, url:string, requestOptions:RequestOptions, queryContext:QueryContextBuilder, targetProperty:QueryProperty, queryBuilderFn?:QueryBuilderFn, target?:Document ):Promise<(T & Document)[]> {\n\tconst Builder:typeof QueryDocumentBuilder = targetProperty.name === \"document\" ?\n\t\tQueryDocumentBuilder : QueryDocumentsBuilder;\n\tconst queryBuilder:QueryDocumentBuilder | QueryDocumentBuilder = new Builder( queryContext, targetProperty );\n\n\ttargetProperty.setType( queryBuilderFn ?\n\t\tqueryBuilderFn === emptyQueryBuildFn ?\n\t\t\tQueryPropertyType.EMPTY :\n\t\t\tQueryPropertyType.PARTIAL :\n\t\tQueryPropertyType.FULL\n\t);\n\n\tif( queryBuilderFn && queryBuilderFn.call( void 0, queryBuilder ) !== queryBuilder )\n\t\tthrow new IllegalArgumentError( \"The provided query builder was not returned\" );\n\n\tconst constructPatterns:PatternToken[] = targetProperty.getPatterns();\n\treturn __executePatterns<T>( repository, url, requestOptions, queryContext, targetProperty.name, constructPatterns, target )\n\t\t.then( ( documents ) => {\n\t\t\tif( ! (queryBuilder instanceof QueryDocumentsBuilder && queryBuilder._orderData) )\n\t\t\t\treturn documents;\n\n\t\t\tconst { path, flow } = queryBuilder._orderData;\n\t\t\tconst inverter:number = flow === \"DESC\" ? - 1 : 1;\n\n\t\t\treturn documents.sort( ( a:any, b:any ) => {\n\t\t\t\ta = _getPathProperty( a, path );\n\t\t\t\tb = _getPathProperty( b, path );\n\n\t\t\t\tconst aValue:any = Pointer.is( a ) ? a.$id : a;\n\t\t\t\tconst bValue:any = Pointer.is( b ) ? b.$id : b;\n\n\t\t\t\tif( aValue === bValue ) return 0;\n\n\t\t\t\tif( aValue === void 0 ) return - 1 * inverter;\n\t\t\t\tif( bValue === void 0 ) return inverter;\n\n\t\t\t\tif( ! _areDifferentType( a, b ) ) {\n\t\t\t\t\tif( Pointer.is( a ) ) {\n\t\t\t\t\t\tconst aIsBNode:boolean = URI.isBNodeID( aValue );\n\t\t\t\t\t\tconst bIsBNode:boolean = URI.isBNodeID( bValue );\n\n\t\t\t\t\t\tif( aIsBNode && ! bIsBNode ) return - 1 * inverter;\n\t\t\t\t\t\tif( bIsBNode && ! aIsBNode ) return inverter;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( Pointer.is( a ) ) return - 1 * inverter;\n\t\t\t\t\tif( Pointer.is( b ) ) return inverter;\n\n\t\t\t\t\tif( isNumber( a ) ) return - 1 * inverter;\n\t\t\t\t\tif( isNumber( b ) ) return inverter;\n\n\t\t\t\t\tif( isDate( a ) ) return - 1 * inverter;\n\t\t\t\t\tif( isDate( b ) ) return inverter;\n\n\t\t\t\t\tif( isBoolean( a ) ) return - 1 * inverter;\n\t\t\t\t\tif( isBoolean( b ) ) return inverter;\n\n\t\t\t\t\tif( isString( a ) ) return - 1 * inverter;\n\t\t\t\t\tif( isString( b ) ) return inverter;\n\t\t\t\t}\n\n\t\t\t\tif( aValue < bValue ) return - 1 * inverter;\n\t\t\t\tif( aValue > bValue ) return inverter;\n\t\t\t} );\n\t\t} )\n\t\t;\n}\n\nfunction __getQueryable<T extends object>( repository:QueryableDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions, queryBuilderFn?:QueryBuilderFn, target?:Document ):Promise<T & Document> {\n\tif( ! repository.$context.registry.inScope( uri, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\tconst url:string = repository.$context.getObjectSchema().resolveURI( uri, { base: true } );\n\n\tconst queryContext:QueryContextBuilder = new QueryContextBuilder( repository.$context );\n\n\tconst documentProperty:QueryProperty = queryContext\n\t\t.addProperty( \"document\" )\n\t\t.setOptional( false );\n\n\tconst propertyValue:ValuesToken = new ValuesToken().addValues( documentProperty.variable, queryContext.compactIRI( uri ) );\n\tdocumentProperty.addPattern( propertyValue );\n\n\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentETags ] }, requestOptions );\n\n\treturn __executeBuilder<T>( repository, url, requestOptions, queryContext, documentProperty, queryBuilderFn, target )\n\t\t.then( ( documents ) => documents[ 0 ] );\n}\n\n\nfunction __addRefreshPatterns( queryContext:QueryContextPartial, parentAdder:OptionalToken, resource:QueryablePointer, parentName:string ):void {\n\tif( resource._queryableMetadata.schema === QueryableMetadata.ALL ) {\n\t\tparentAdder.addPattern( _createAllPattern( queryContext, parentName ) );\n\t\treturn;\n\t}\n\n\tparentAdder.addPattern( _createTypesPattern( queryContext, parentName ) );\n\n\tresource._queryableMetadata.schema.properties.forEach( ( digestedProperty, propertyName ) => {\n\t\tconst path:string = `${ parentName }.${ propertyName }`;\n\n\t\tconst propertyPattern:OptionalToken = new OptionalToken()\n\t\t\t.addPattern( ..._createPropertyPatterns(\n\t\t\t\tqueryContext,\n\t\t\t\tparentName,\n\t\t\t\tpath,\n\t\t\t\tdigestedProperty\n\t\t\t) );\n\t\tparentAdder.addPattern( propertyPattern );\n\n\t\tconst propertyValues:any[] = Array.isArray( resource[ propertyName ] ) ? resource[ propertyName ] : [ resource[ propertyName ] ];\n\t\tconst propertyFragment:QueryablePointer = propertyValues\n\t\t\t.filter( QueryablePointer.is )\n\t\t\t.find( fragment => fragment.isQueried() );\n\t\tif( ! propertyFragment ) return;\n\n\t\t__addRefreshPatterns( queryContext, propertyPattern, propertyFragment, path );\n\t} );\n}\n\nfunction __refreshQueryable<T extends object>( this:void, repository:QueryableDocumentsRepositoryTrait, document:Document, requestOptions:RequestOptions = {} ):Promise<T & Document> {\n\tif( ! repository.$context.registry.inScope( document.$id, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ document.$id }\" is out of scope.` ) );\n\tconst url:string = repository.$context.getObjectSchema().resolveURI( document.$id, { base: true } );\n\n\tconst queryContext:QueryContextPartial = new QueryContextPartial( document, repository.$context );\n\n\tconst targetName:string = \"document\";\n\tconst constructPatterns:OptionalToken = new OptionalToken()\n\t\t.addPattern( new ValuesToken()\n\t\t\t.addValues( queryContext.getVariable( targetName ), new IRIToken( url ) )\n\t\t)\n\t;\n\n\t__addRefreshPatterns( queryContext, constructPatterns, document, targetName );\n\n\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentETags ] }, requestOptions );\n\n\treturn __executePatterns<T>( repository, url, requestOptions, queryContext, targetName, constructPatterns.patterns, document )\n\t\t.then( ( documents ) => documents[ 0 ] );\n}\n\n\nfunction __executeChildrenBuilder<T extends object>( this:void, repository:QueryableDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions, queryBuilderFn?:QueryBuilderFn ):Promise<(T & Document)[]> {\n\tif( ! repository.$context.registry.inScope( uri, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\tconst url:string = repository.$context.getObjectSchema().resolveURI( uri, { base: true } );\n\n\tconst queryContext:QueryContextBuilder = new QueryContextBuilder( repository.$context );\n\tconst childrenProperty:QueryProperty = queryContext\n\t\t.addProperty( \"child\" )\n\t\t.setOptional( false );\n\n\tconst selectChildren:SelectToken = new SelectToken( \"DISTINCT\" )\n\t\t.addVariable( childrenProperty.variable )\n\t\t.addPattern( new SubjectToken( queryContext.compactIRI( url ) )\n\t\t\t.addPredicate( new PredicateToken( queryContext.compactIRI( LDP.contains ) )\n\t\t\t\t.addObject( childrenProperty.variable )\n\t\t\t)\n\t\t)\n\t;\n\tchildrenProperty.addPattern( selectChildren );\n\n\treturn __executeBuilder<T>( repository, url, requestOptions, queryContext, childrenProperty, queryBuilderFn );\n}\n\nfunction __executeMembersBuilder<T extends object>( this:void, repository:QueryableDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<(T & Document)[]> {\n\tif( ! repository.$context.registry.inScope( uri, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\tconst url:string = repository.$context.getObjectSchema().resolveURI( uri, { base: true } );\n\n\tconst queryContext:QueryContextBuilder = new QueryContextBuilder( repository.$context );\n\tconst membersProperty:QueryProperty = queryContext\n\t\t.addProperty( \"member\" )\n\t\t.setOptional( false );\n\n\tconst membershipResource:VariableToken = queryContext.getVariable( \"membershipResource\" );\n\tconst hasMemberRelation:VariableToken = queryContext.getVariable( \"hasMemberRelation\" );\n\tconst selectMembers:SelectToken = new SelectToken( \"DISTINCT\" )\n\t\t.addVariable( membersProperty.variable )\n\t\t.addPattern( new SubjectToken( queryContext.compactIRI( url ) )\n\t\t\t.addPredicate( new PredicateToken( queryContext.compactIRI( LDP.membershipResource ) )\n\t\t\t\t.addObject( membershipResource )\n\t\t\t)\n\t\t\t.addPredicate( new PredicateToken( queryContext.compactIRI( LDP.hasMemberRelation ) )\n\t\t\t\t.addObject( hasMemberRelation )\n\t\t\t)\n\t\t)\n\t\t.addPattern( new SubjectToken( membershipResource )\n\t\t\t.addPredicate( new PredicateToken( hasMemberRelation )\n\t\t\t\t.addObject( membersProperty.variable )\n\t\t\t)\n\t\t)\n\t;\n\tmembersProperty.addPattern( selectMembers );\n\n\treturn __executeBuilder<T>( repository, url, requestOptions, queryContext, membersProperty, queryBuilderFn );\n}\n\n\nexport type OverriddenMembers =\n\t| \"get\"\n\t| \"resolve\"\n\t| \"refresh\"\n\t| \"saveAndRefresh\"\n\t;\n\nexport type QueryableDocumentsRepositoryTraitFactory =\n\t& ModelPrototype<QueryableDocumentsRepositoryTrait, LDPDocumentsRepositoryTrait, OverriddenMembers>\n\t& ModelDecorator<QueryableDocumentsRepositoryTrait, BaseDocumentsRepository>\n\t;\n\ntype QueryBuilderFn = Function & (( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder);\n\nexport const QueryableDocumentsRepositoryTrait:QueryableDocumentsRepositoryTraitFactory = {\n\tPROTOTYPE: {\n\t\tget<T extends object>( this:QueryableDocumentsRepositoryTrait, uri:string, requestOptionsOrQueryBuilderFn?:GETOptions | QueryBuilderFn, queryBuilderFn?:QueryBuilderFn ):Promise<T & Document> {\n\t\t\tconst requestOptions:GETOptions = isObject( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : {};\n\n\t\t\tqueryBuilderFn = isFunction( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : queryBuilderFn;\n\n\t\t\tconst target:Document | undefined = this.$context.registry.hasPointer( uri ) ?\n\t\t\t\tthis.$context.registry.getPointer( uri, true ) :\n\t\t\t\tvoid 0;\n\n\t\t\tif( queryBuilderFn ) {\n\t\t\t\tconst types:string[] = target ? target.types : [];\n\t\t\t\treturn __getQueryable( this, uri, requestOptions, _ => {\n\t\t\t\t\ttypes.forEach( type => _.withType( type ) );\n\t\t\t\t\treturn queryBuilderFn.call( void 0, _ );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif( target && target.isQueried() ) requestOptions.ensureLatest = true;\n\t\t\treturn LDPDocumentsRepositoryTrait.PROTOTYPE\n\t\t\t\t.get.call( this, uri, requestOptions );\n\t\t},\n\n\t\tresolve<T extends object>( this:QueryableDocumentsRepositoryTrait, document:Document, requestOptionsOrQueryBuilderFn?:RequestOptions | QueryBuilderFn, queryBuilderFn?:QueryBuilderFn ):Promise<T & Document> {\n\t\t\treturn this.get( document.$id, requestOptionsOrQueryBuilderFn, queryBuilderFn );\n\t\t},\n\n\n\t\trefresh<T extends object>( this:QueryableDocumentsRepositoryTrait, document:Document, requestOptions?:RequestOptions ):Promise<T & Document> {\n\t\t\tif( ! document.isQueried() ) return LDPDocumentsRepositoryTrait.PROTOTYPE\n\t\t\t\t.refresh.call( this, document, requestOptions );\n\n\t\t\treturn __refreshQueryable<T>( this, document, requestOptions );\n\t\t},\n\n\t\tsaveAndRefresh<T extends object>( this:QueryableDocumentsRepositoryTrait, document:Document, requestOptions?:RequestOptions ):Promise<T & Document> {\n\t\t\tif( ! document._queryableMetadata ) return LDPDocumentsRepositoryTrait.PROTOTYPE\n\t\t\t\t.saveAndRefresh.call( this, document, requestOptions );\n\n\t\t\tif( document.$eTag === null ) return Promise.reject( new IllegalStateError( `The document \"${ document.$id }\" is locally outdated and cannot be saved.` ) );\n\n\t\t\tconst cloneOptions:RequestOptions = RequestUtils.cloneOptions( requestOptions || {} );\n\t\t\treturn this.save<T & Document>( document, cloneOptions )\n\t\t\t\t.then<T & Document>( doc => {\n\t\t\t\t\treturn __refreshQueryable( this, doc, requestOptions );\n\t\t\t\t} );\n\t\t},\n\n\n\t\tgetChildren<T extends object>( this:QueryableDocumentsRepositoryTrait, uri:string, requestOptionsOrQueryBuilderFn?:RequestOptions | QueryBuilderFn, queryBuilderFn?:QueryBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst requestOptions:RequestOptions = isObject( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : {};\n\n\t\t\tqueryBuilderFn = isFunction( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : queryBuilderFn;\n\n\t\t\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentETags ] }, requestOptions );\n\n\t\t\treturn __executeChildrenBuilder( this, uri, requestOptions, queryBuilderFn );\n\t\t},\n\n\t\tgetMembers<T extends object>( uri:string, requestOptionsOrQueryBuilderFn?:RequestOptions | QueryBuilderFn, queryBuilderFn?:QueryBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst requestOptions:RequestOptions = isObject( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : {};\n\n\t\t\tqueryBuilderFn = isFunction( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : queryBuilderFn;\n\n\t\t\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentETags ] }, requestOptions );\n\n\t\t\treturn __executeMembersBuilder( this, uri, requestOptions, queryBuilderFn );\n\t\t},\n\n\t\tlistChildren<T extends object>( uri:string, requestOptions:RequestOptions = {} ):Promise<(T & Document)[]> {\n\t\t\treturn __executeChildrenBuilder( this, uri, requestOptions, emptyQueryBuildFn );\n\t\t},\n\n\t\tlistMembers<T extends object>( uri:string, requestOptions:RequestOptions = {} ):Promise<(T & Document)[]> {\n\t\t\treturn __executeMembersBuilder( this, uri, requestOptions, emptyQueryBuildFn );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is QueryableDocumentsRepositoryTrait {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( QueryableDocumentsRepositoryTrait.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseDocumentsRepository>( object:T ):T & QueryableDocumentsRepositoryTrait {\n\t\tif( QueryableDocumentsRepositoryTrait.isDecorated( object ) ) return object;\n\n\t\tconst target:T & LDPDocumentsRepositoryTrait = ModelDecorator\n\t\t\t.decorateMultiple( object, LDPDocumentsRepositoryTrait );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( QueryableDocumentsRepositoryTrait.PROTOTYPE, target );\n\t},\n};\n"]}