{"version":3,"sources":["NonRDFSource.ts"],"names":[],"mappings":";AAAA,IAAY,EAAE,WAAM,MAAM,CAAC,CAAA;AAE3B,IAAY,iBAAiB,WAAM,qBAAqB,CAAC,CAAA;AACzD,IAAY,KAAK,WAAM,SAAS,CAAC,CAAA;AAIpB,iBAAS,GAAU,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC;AAEhD,cAAM,GAAsB;IACxC,gBAAgB,EAAE;QACjB,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,cAAc;QACpC,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;IACD,WAAW,EAAE;QACZ,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS;QAC/B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;IACD,MAAM,EAAE;QACP,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI;QAC1B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI;KAC7B;CACD,CAAC;AAUF;IAAA;IA0CA,CAAC;IAzCO,0BAAkB,GAAzB,UAA2B,MAAa;QACvC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,gBAAgB,CAAE;eACvD,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,WAAW,CAAE;eAC/C,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,MAAM,CAAE;eAC1C,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;IACnD,CAAC;IAEM,UAAE,GAAT,UAAW,MAAa;QACvB,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAE,MAAM,CAAE;eACb,MAAQ,CAAC,KAAK,CAAC,OAAO,CAAE,iBAAS,CAAE,KAAK,CAAC,CAAC;eACtE,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE,CAAC;IAC1C,CAAC;IAEM,gBAAQ,GAAf,UAAoD,iBAAmB;QACtE,EAAE,CAAA,CAAE,OAAO,CAAC,kBAAkB,CAAE,iBAAiB,CAAG,CAAC;YAAC,MAAM,CAAO,iBAAiB,CAAC;QAErF,MAAM,CAAC,gBAAgB,CAAE,iBAAiB,EAAE;YAC3C,SAAS,EAAE;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,OAAO;aACd;SACD,CAAE,CAAC;QAEJ,MAAM,CAAO,iBAAiB,CAAC;IAChC,CAAC;IAIM,mBAAW,GAAlB,UAAoB,wBAA+B;QAClD,IAAI,KAAK,GAAY,EAAE,CAAC;QACxB,EAAE,CAAA,CAAE,OAAO,IAAI,wBAAyB,CAAC,CAAC,CAAC;YAC1C,KAAK,GAAG,wBAAwB,CAAE,OAAO,CAAE,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAA,CAAE,OAAO,IAAI,wBAAyB,CAAC,CAAC,CAAC;YACjD,IAAI,QAAQ,GAAkB,wBAAwB,CAAC;YACvD,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QACxB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,iBAAS,CAAE,KAAK,CAAE,CAAC,CAAE;IAC5C,CAAC;IACF,cAAC;AAAD,CA1CA,AA0CC,IAAA;AA1CY,eAAO,UA0CnB,CAAA;AAED;IACC,IAAI,IAAI,GAAmB,IAAM,CAAC;IAClC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;AACxC,CAAC","file":"NonRDFSource.js","sourcesContent":["import * as NS from \"./NS\";\nimport * as ObjectSchema from \"./ObjectSchema\";\nimport * as PersistedDocument from \"./PersistedDocument\";\nimport * as Utils from \"./Utils\";\nimport Resource from \"./Resource\";\nimport * as HTTP from \"./HTTP\";\n\nexport const RDF_CLASS:string = NS.C.Class.RDFRepresentation;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"fileIdentifier\": {\n\t\t\"@id\": NS.C.Predicate.fileIdentifier,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"mediaType\": {\n\t\t\"@id\": NS.C.Predicate.mediaType,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"size\": {\n\t\t\"@id\": NS.C.Predicate.size,\n\t\t\"@type\": NS.XSD.DataType.long,\n\t},\n};\n\nexport interface Class extends PersistedDocument.Class {\n\tfileIdentifier:string;\n\tmediaType:string;\n\tsize:number;\n\n\tgetFile:() => Promise<[ Blob, HTTP.Response.Class ]>;\n}\n\nexport class Factory {\n\tstatic hasClassProperties( object:Object ):boolean {\n\t\treturn Utils.hasPropertyDefined( object, \"fileIdentifier\" )\n\t\t\t&& Utils.hasPropertyDefined( object, \"mediaType\" )\n\t\t\t&& Utils.hasPropertyDefined( object, \"size\" )\n\t\t\t&& Utils.hasPropertyDefined( object, \"getFile\" );\n\t}\n\n\tstatic is( object:Object ):boolean {\n\t\treturn PersistedDocument.Factory.is( object )\n\t\t\t&& ( <PersistedDocument.Class> object ).types.indexOf( RDF_CLASS ) !== -1\n\t\t\t&& Factory.hasClassProperties( object );\n\t}\n\n\tstatic decorate<T extends PersistedDocument.Class>( persistedDocument:T ): T & Class {\n\t\tif( Factory.hasClassProperties( persistedDocument ) ) return <any> persistedDocument;\n\n\t\tObject.defineProperties( persistedDocument, {\n\t\t\t\"getFile\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getFile,\n\t\t\t},\n\t\t} );\n\n\t\treturn <any> persistedDocument;\n\t}\n\n\tstatic hasRDFClass( resource:Resource ):boolean;\n\tstatic hasRDFClass( expandedObject:Object ):boolean;\n\tstatic hasRDFClass( resourceOrExpandedObject:Object ):boolean {\n\t\tlet types:string[] = [];\n\t\tif( \"@type\" in resourceOrExpandedObject ) {\n\t\t\ttypes = resourceOrExpandedObject[ \"@type\" ];\n\t\t} else if( \"types\" in resourceOrExpandedObject ) {\n\t\t\tlet resource:Resource = <any> resourceOrExpandedObject;\n\t\t\ttypes = resource.types;\n\t\t}\n\n\t\treturn types.indexOf( RDF_CLASS ) !== - 1 ;\n\t}\n}\n\nfunction getFile():Promise<[ Blob, HTTP.Response.Class ]> {\n\tlet that:Class = ( <Class> this );\n\treturn that._documents.getFile( that );\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}