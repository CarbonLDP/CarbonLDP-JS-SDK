{"version":3,"sources":["Agents/Agent.ts"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AACpC,IAAY,QAAQ,WAAM,eAAe,CAAC,CAAA;AAC1C,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAE9B,qCAAiC,gCAAgC,CAAC,CAAA;AAErD,iBAAS,GAAU,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AAErC,cAAM,GAAsB;IACxC,MAAM,EAAE;QACP,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI;QAC3B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;IACD,OAAO,EAAE;QACR,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK;QAC/B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;CACD,CAAC;AAOF;IAAA;IA+BA,CAAC;IA9BO,0BAAkB,GAAzB,UAA2B,QAAe;QACzC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAE,QAAQ,EAAE,MAAM,CAAE;eAC/C,KAAK,CAAC,kBAAkB,CAAE,QAAQ,EAAE,OAAO,CAAE,CAAC;IACnD,CAAC;IAEM,UAAE,GAAT,UAAW,MAAa;QACvB,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE;eAChD,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE;eACjB,MAAQ,CAAC,KAAK,CAAC,OAAO,CAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,cAAM,GAAb,UAAe,IAAW,EAAE,KAAY;QACvC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAU,EAAE,EAAE,IAAI,EAAE,KAAK,CAAE,CAAC;IACtD,CAAC;IAEM,kBAAU,GAAjB,UAAqC,MAAQ,EAAE,IAAW,EAAE,KAAY;QACvE,EAAE,CAAC,CAAE,CAAE,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAG,CAAC;YACrD,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;QAEhD,EAAE,CAAC,CAAE,CAAE,IAAK,CAAC;YAAC,MAAM,IAAI,8BAAoB,CAAE,2BAA2B,CAAE,CAAC;QAC5E,EAAE,CAAC,CAAE,CAAE,KAAM,CAAC;YAAC,MAAM,IAAI,8BAAoB,CAAE,4BAA4B,CAAE,CAAC;QAE9E,IAAI,GAAG,GAAyB,MAAM,CAAC;QACvC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;QAChB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;QAClB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;QAEpC,MAAM,CAAC,GAAG,CAAC;IACZ,CAAC;IAEF,cAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,eAAO,UA+BnB,CAAA","file":"Agents/Agent.js","sourcesContent":["import * as Utils from \"./../Utils\";\nimport * as Document from \"./../Document\";\nimport * as NS from \"./../NS\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\nimport IllegalArgumentError from \"../Errors/IllegalArgumentError\";\n\nexport const RDF_CLASS:string = NS.CS.Class.Agent;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"name\": {\n\t\t\"@id\": NS.CS.Predicate.name,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"email\": {\n\t\t\"@id\": NS.VCARD.Predicate.email,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n};\n\nexport interface Class extends Document.Class {\n\tname:string;\n\temail:string;\n}\n\nexport class Factory {\n\tstatic hasClassProperties( resource:Object ):boolean {\n\t\treturn Utils.hasPropertyDefined( resource, \"name\" )\n\t\t\t&& Utils.hasPropertyDefined( resource, \"email\" );\n\t}\n\n\tstatic is( object:Object ):boolean {\n\t\treturn Document.Factory.hasClassProperties( object )\n\t\t\t&& Factory.hasClassProperties( object )\n\t\t\t&& ( <Document.Class> object ).types.indexOf( NS.CS.Class.Agent ) !== -1;\n\t}\n\n\tstatic create( name:string, email:string ):Class {\n\t\treturn Factory.createFrom<Object>( {}, name, email );\n\t}\n\n\tstatic createFrom<T extends Object>( object:T, name:string, email:string ):T & Class {\n\t\tif ( ! Document.Factory.hasClassProperties( object ) )\n\t\t\tobject = Document.Factory.createFrom( object );\n\n\t\tif ( ! name ) throw new IllegalArgumentError( \"The name cannot be empty.\" );\n\t\tif ( ! email ) throw new IllegalArgumentError( \"The email cannot be empty.\" );\n\n\t\tlet app:T & Class = <T & Class> object;\n\t\tapp.name = name;\n\t\tapp.email = email;\n\t\tapp.types.push( NS.CS.Class.Agent );\n\n\t\treturn app;\n\t}\n\n}\n\nexport default Class;"],"sourceRoot":"/source/"}