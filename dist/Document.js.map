{"version":3,"sources":["Document.ts"],"names":[],"mappings":"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","file":"Document.js","sourcesContent":["import { BlankNode } from \"./BlankNode\";\nimport { IDAlreadyInUseError } from \"./Errors/IDAlreadyInUseError\";\nimport { IllegalArgumentError } from \"./Errors/IllegalArgumentError\";\nimport { Fragment } from \"./Fragment\";\nimport { JSONLDConverter } from \"./JSONLD/Converter\";\nimport { ModelDecorator } from \"./ModelDecorator\";\nimport { ModelFactory } from \"./ModelFactory\";\nimport { NamedFragment } from \"./NamedFragment\";\nimport {\n\tDigestedObjectSchema,\n\tObjectSchema,\n\tObjectSchemaResolver,\n} from \"./ObjectSchema\";\nimport {\n\tPointer,\n\tPointerLibrary,\n\tPointerValidator,\n} from \"./Pointer\";\nimport { RDFDocument } from \"./RDF/Document\";\nimport { RDFNode } from \"./RDF/Node\";\nimport { URI } from \"./RDF/URI\";\nimport { Resource } from \"./Resource\";\nimport {\n\thasFunction,\n\thasPropertyDefined,\n\tisObject,\n\tisPlainObject,\n\tisString,\n} from \"./Utils\";\nimport { C } from \"./Vocabularies/C\";\nimport { LDP } from \"./Vocabularies/LDP\";\nimport { XSD } from \"./Vocabularies/XSD\";\n\n\nexport interface Document extends Resource, PointerLibrary, PointerValidator {\n\tdefaultInteractionModel?:Pointer;\n\tisMemberOfRelation?:Pointer;\n\thasMemberRelation?:Pointer;\n\n\t_fragmentsIndex:Map<string, Fragment>;\n\n\t_normalize():void;\n\n\n\t_removeFragment( slugOrFragment:string | Fragment ):void;\n\n\n\thasFragment( slug:string ):boolean;\n\n\n\tgetFragment<T>( slug:string ):T & Fragment;\n\n\tgetNamedFragment<T>( slug:string ):T & NamedFragment;\n\n\n\tgetFragments():Fragment[];\n\n\n\tcreateFragment<T>( object:T, slug?:string ):T & Fragment;\n\n\tcreateFragment( slug?:string ):Fragment;\n\n\n\tcreateNamedFragment<T>( object:T, slug:string ):T & NamedFragment;\n\n\tcreateNamedFragment( slug:string ):NamedFragment;\n\n\n\tremoveNamedFragment( slugOrFragment:string | NamedFragment ):void;\n\n\n\ttoJSON( objectSchemaResolver?:ObjectSchemaResolver, jsonldConverter?:JSONLDConverter ):RDFDocument;\n}\n\n\nexport interface DocumentFactory extends ModelFactory<Document>, ModelDecorator<Document> {\n\tTYPE:string;\n\tSCHEMA:ObjectSchema;\n\n\n\tis( object:object ):object is Document;\n\n\tisDecorated( object:object ):object is Document;\n\n\n\tcreate():Document;\n\n\tcreateFrom<T extends object>( object:T ):T & Document;\n\n\tdecorate<T extends object>( object:T ):T & Document;\n\n\n\t_convertNestedObjects( parent:Document, actual:any, fragmentsTracker?:Set<string> ):void;\n}\n\n\nconst SCHEMA:ObjectSchema = {\n\t\"contains\": {\n\t\t\"@id\": LDP.contains,\n\t\t\"@container\": \"@set\",\n\t\t\"@type\": \"@id\",\n\t},\n\t\"members\": {\n\t\t\"@id\": LDP.member,\n\t\t\"@container\": \"@set\",\n\t\t\"@type\": \"@id\",\n\t},\n\t\"membershipResource\": {\n\t\t\"@id\": LDP.membershipResource,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"isMemberOfRelation\": {\n\t\t\"@id\": LDP.isMemberOfRelation,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"hasMemberRelation\": {\n\t\t\"@id\": LDP.hasMemberRelation,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"insertedContentRelation\": {\n\t\t\"@id\": LDP.insertedContentRelation,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"created\": {\n\t\t\"@id\": C.created,\n\t\t\"@type\": XSD.dateTime,\n\t},\n\t\"modified\": {\n\t\t\"@id\": C.modified,\n\t\t\"@type\": XSD.dateTime,\n\t},\n\t\"defaultInteractionModel\": {\n\t\t\"@id\": C.defaultInteractionModel,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"accessPoints\": {\n\t\t\"@id\": C.accessPoint,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n};\n\nexport const Document:DocumentFactory = {\n\tTYPE: C.Document,\n\tSCHEMA,\n\n\tisDecorated: ( object ):object is Document =>\n\t\tisObject( object ) &&\n\t\thasPropertyDefined( object, \"_fragmentsIndex\" ) &&\n\n\t\thasFunction( object, \"_normalize\" ) &&\n\t\thasFunction( object, \"_removeFragment\" ) &&\n\n\t\thasFunction( object, \"hasPointer\" ) &&\n\t\thasFunction( object, \"getPointer\" ) &&\n\n\t\thasFunction( object, \"inScope\" ) &&\n\n\t\thasFunction( object, \"hasFragment\" ) &&\n\t\thasFunction( object, \"getFragment\" ) &&\n\t\thasFunction( object, \"getNamedFragment\" ) &&\n\t\thasFunction( object, \"getFragments\" ) &&\n\t\thasFunction( object, \"createFragment\" ) &&\n\t\thasFunction( object, \"createNamedFragment\" ) &&\n\t\thasFunction( object, \"removeNamedFragment\" ) &&\n\n\t\thasFunction( object, \"toJSON\" )\n\t,\n\n\tis: ( object ):object is Document =>\n\t\tResource.is( object ) &&\n\t\tDocument.isDecorated( object )\n\t,\n\n\n\tdecorate: <T extends object>( object:T ) => {\n\t\tif( Document.isDecorated( object ) ) return object;\n\n\t\tResource.decorate( object );\n\n\t\tObject.defineProperties( object, {\n\t\t\t\"_fragmentsIndex\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: new Map<string, Fragment>(),\n\t\t\t},\n\n\t\t\t\"_normalize\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: normalize,\n\t\t\t},\n\t\t\t\"_removeFragment\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: removeFragment,\n\t\t\t},\n\n\t\t\t\"hasPointer\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: hasPointer,\n\t\t\t},\n\t\t\t\"getPointer\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getPointer,\n\t\t\t},\n\t\t\t\"inScope\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: inScope,\n\t\t\t},\n\n\t\t\t\"hasFragment\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: hasFragment,\n\t\t\t},\n\t\t\t\"getFragment\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getFragment,\n\t\t\t},\n\t\t\t\"getNamedFragment\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getNamedFragment,\n\t\t\t},\n\t\t\t\"getFragments\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: getFragments,\n\t\t\t},\n\t\t\t\"createFragment\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: createFragment,\n\t\t\t},\n\t\t\t\"createNamedFragment\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: createNamedFragment,\n\t\t\t},\n\t\t\t\"removeNamedFragment\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: removeNamedFragment,\n\t\t\t},\n\t\t\t\"toJSON\": {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: toJSON,\n\t\t\t},\n\t\t} );\n\n\t\treturn object as any;\n\t},\n\n\tcreateFrom: <T extends object>( object:T ) => {\n\t\tif( Document.is( object ) ) throw new IllegalArgumentError( \"The object provided is already a Document.\" );\n\n\t\tconst document:T & Document = Document.decorate<T>( object );\n\t\tDocument._convertNestedObjects( document, document );\n\n\t\treturn document;\n\t},\n\n\tcreate: () => Document.createFrom( {} ),\n\n\n\t_convertNestedObjects( parent:Document, actual:any, fragmentsTracker:Set<string> = new Set() ):void {\n\t\tlet next:any;\n\t\tlet idOrSlug:string;\n\t\tlet fragment:Fragment;\n\n\t\tlet keys:string[] = Object.keys( actual );\n\t\tfor( let key of keys ) {\n\t\t\tnext = actual[ key ];\n\n\t\t\tif( Array.isArray( next ) ) {\n\t\t\t\tDocument._convertNestedObjects( parent, next, fragmentsTracker );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( ! isPlainObject( next ) ) continue;\n\t\t\tif( Pointer.is( next ) ) {\n\t\t\t\tif( parent.hasFragment( next.id ) && ! fragmentsTracker.has( next.id ) ) {\n\t\t\t\t\tfragmentsTracker.add( next.id );\n\t\t\t\t\tDocument._convertNestedObjects( parent, next, fragmentsTracker );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tidOrSlug = ( \"id\" in next ) ? next.id : ( ( \"slug\" in next ) ? URI.hasFragment( next.slug ) ? next.slug : \"#\" + next.slug : \"\" );\n\t\t\tif( ! ! idOrSlug && ! parent.inScope( idOrSlug ) ) continue;\n\n\t\t\tlet parentFragment:Fragment = parent.getFragment( idOrSlug );\n\n\t\t\tif( ! parentFragment ) {\n\t\t\t\tfragment = parent.createFragment( <Object> next, idOrSlug );\n\t\t\t\tDocument._convertNestedObjects( parent, fragment, fragmentsTracker );\n\n\t\t\t} else if( parentFragment !== next ) {\n\t\t\t\tObject.assign( parentFragment, next );\n\t\t\t\tfragment = actual[ key ] = parentFragment;\n\t\t\t\tDocument._convertNestedObjects( parent, fragment, fragmentsTracker );\n\t\t\t}\n\n\t\t}\n\n\t},\n\n};\n\nfunction hasPointer( this:Document, id:string ):boolean {\n\tif( id === this.id ) return true;\n\tif( ! this.inScope( id ) ) return false;\n\n\treturn this.hasFragment( id );\n}\n\nfunction getPointer( this:Document, id:string ):Pointer {\n\tif( ! this.inScope( id ) ) return null;\n\tif( id === this.id ) return this;\n\n\treturn this.hasFragment( id ) ?\n\t\tthis.getFragment( id ) :\n\t\tthis.createFragment( id );\n}\n\nfunction inScope( this:Document, idOrPointer:string | Pointer ):boolean {\n\tconst id:string = isString( idOrPointer ) ? idOrPointer : idOrPointer.id;\n\n\tif( id === this.id ) return true;\n\tif( URI.isBNodeID( id ) ) return true;\n\tif( URI.isFragmentOf( id, this.id ) ) return true;\n\treturn id.startsWith( \"#\" );\n}\n\nfunction hasFragment( this:Document, id:string ):boolean {\n\tif( URI.isAbsolute( id ) ) {\n\t\tif( ! URI.isFragmentOf( id, this.id ) ) return false;\n\t\tid = URI.hasFragment( id ) ? URI.getFragment( id ) : id;\n\t} else if( id.startsWith( \"#\" ) ) {\n\t\tid = id.substring( 1 );\n\t}\n\n\treturn this._fragmentsIndex.has( id );\n}\n\nfunction getFragment( this:Document, id:string ):Fragment {\n\tif( ! URI.isBNodeID( id ) ) return this.getNamedFragment( id );\n\treturn this._fragmentsIndex.get( id ) || null;\n}\n\nfunction getNamedFragment( this:Document, id:string ):NamedFragment {\n\tif( URI.isBNodeID( id ) ) throw new IllegalArgumentError( \"Named fragments can't have a id that starts with '_:'.\" );\n\tif( URI.isAbsolute( id ) ) {\n\t\tif( ! URI.isFragmentOf( id, this.id ) ) throw new IllegalArgumentError( \"The id is out of scope.\" );\n\t\tid = URI.hasFragment( id ) ? URI.getFragment( id ) : id;\n\t} else if( id.startsWith( \"#\" ) ) {\n\t\tid = id.substring( 1 );\n\t}\n\n\treturn <NamedFragment> this._fragmentsIndex.get( id ) || null;\n}\n\nfunction getFragments( this:Document ):Fragment[] {\n\treturn Array.from( this._fragmentsIndex.values() );\n}\n\nfunction createFragment<T extends object>( object:T, slug?:string ):T & Fragment;\nfunction createFragment( slug?:string ):Fragment;\nfunction createFragment<T extends object>( this:Document, slugOrObject?:any, slug?:string ):T & Fragment {\n\tslug = isString( slugOrObject ) ? slugOrObject : slug;\n\tconst object:T = ! isString( slugOrObject ) && ! ! slugOrObject ? slugOrObject : <T> {};\n\n\tif( slug ) {\n\t\tif( ! URI.isBNodeID( slug ) ) return this.createNamedFragment<T>( object, slug );\n\t\tif( this._fragmentsIndex.has( slug ) ) throw new IDAlreadyInUseError( \"The slug provided is already being used by a fragment.\" );\n\t}\n\n\tconst fragment:T & BlankNode = BlankNode.createFrom<T>( object, this, slug );\n\tthis._fragmentsIndex.set( fragment.id, fragment );\n\n\tDocument._convertNestedObjects( this, fragment );\n\treturn fragment;\n}\n\nfunction createNamedFragment<T extends Object>( object:T, slug:string ):NamedFragment & T;\nfunction createNamedFragment( slug:string ):NamedFragment;\nfunction createNamedFragment<T extends Object>( this:Document, slugOrObject:any, slug?:string ):T & NamedFragment {\n\tslug = isString( slugOrObject ) ? slugOrObject : slug;\n\tconst object:T = ! isString( slugOrObject ) && ! ! slugOrObject ? slugOrObject : <T> {};\n\n\tif( URI.isBNodeID( slug ) ) throw new IllegalArgumentError( \"Named fragments can't have a slug that starts with '_:'.\" );\n\n\tif( URI.isAbsolute( slug ) ) {\n\t\tif( ! URI.isFragmentOf( slug, this.id ) ) throw new IllegalArgumentError( \"The slug is out of scope.\" );\n\t\tslug = URI.hasFragment( slug ) ? URI.getFragment( slug ) : slug;\n\t} else if( slug.startsWith( \"#\" ) ) slug = slug.substring( 1 );\n\n\tif( this._fragmentsIndex.has( slug ) ) throw new IDAlreadyInUseError( \"The slug provided is already being used by a fragment.\" );\n\n\tconst fragment:T & NamedFragment = NamedFragment.createFrom<T>( object, this, slug );\n\tthis._fragmentsIndex.set( slug, fragment );\n\n\tDocument._convertNestedObjects( this, fragment );\n\treturn fragment;\n}\n\nfunction removeFragment( this:Document, fragmentOrSlug:string | Fragment ):void {\n\tlet id:string = isString( fragmentOrSlug ) ? fragmentOrSlug : fragmentOrSlug.id;\n\n\tif( URI.isAbsolute( id ) ) {\n\t\tif( ! URI.isFragmentOf( id, this.id ) ) return;\n\t\tid = URI.hasFragment( id ) ? URI.getFragment( id ) : id;\n\t} else if( id.startsWith( \"#\" ) ) {\n\t\tid = id.substring( 1 );\n\t}\n\n\tthis._fragmentsIndex.delete( id );\n}\n\nfunction removeNamedFragment( this:Document, fragmentOrSlug:NamedFragment | string ):void {\n\tconst id:string = isString( fragmentOrSlug ) ? fragmentOrSlug : fragmentOrSlug.id;\n\n\tif( URI.isBNodeID( id ) ) throw new IllegalArgumentError( \"You can only remove NamedFragments.\" );\n\tthis._removeFragment( id );\n}\n\nfunction toJSON( this:Document, keyOrObjectSchemaResolver?:string | ObjectSchemaResolver, jsonldConverter:JSONLDConverter = new JSONLDConverter() ):RDFDocument {\n\tconst objectSchemaResolver:ObjectSchemaResolver = isObject( keyOrObjectSchemaResolver ) ?\n\t\tkeyOrObjectSchemaResolver : null;\n\tconst generalSchema:DigestedObjectSchema = objectSchemaResolver ?\n\t\tobjectSchemaResolver.getGeneralSchema() : new DigestedObjectSchema();\n\n\tconst resources:object[] = [ this, ...this.getFragments() ];\n\tconst expandedResources:RDFNode[] = resources.map( resource => {\n\t\tconst resourceSchema:DigestedObjectSchema = objectSchemaResolver ? objectSchemaResolver.getSchemaFor( resource ) : new DigestedObjectSchema();\n\t\treturn jsonldConverter.expand( resource, generalSchema, resourceSchema );\n\t} );\n\n\treturn {\n\t\t\"@id\": this.id,\n\t\t\"@graph\": expandedResources,\n\t};\n}\n\nfunction normalize( this:Document ):void {\n\tconst currentFragments:Fragment[] = this.getFragments()\n\t\t.filter( fragment => URI.isBNodeID( fragment.id ) );\n\tconst usedFragmentsIDs:Set<string> = new Set();\n\n\tDocument._convertNestedObjects( this, this, usedFragmentsIDs );\n\tcurrentFragments.forEach( fragment => {\n\t\tif( usedFragmentsIDs.has( fragment.id ) ) return;\n\t\tthis._fragmentsIndex.delete( fragment.id );\n\t} );\n}\n\n\n"]}