{"version":3,"sources":["TransientBlankNode.ts"],"names":[],"mappings":";;AACA,mCAAgD;AAChD,yDAAwD;AAExD,iCAAgC;AAcnB,QAAA,kBAAkB,GAA6B;IAC3D,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,qCAAiB,CAAC,EAAE,CAAE,MAAM,CAAE;YACpC,SAAG,CAAC,SAAS,CAAE,MAAM,CAAC,EAAE,CAAE,CACzB;IACH,CAAC;IAGD,MAAM,EAAN,UAAQ,QAA0B,EAAE,EAAU;QAC7C,MAAM,CAAC,0BAAkB,CAAC,UAAU,CAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAE,CAAC;IAC1D,CAAC;IAED,UAAU,EAAV,UAA8B,MAAQ,EAAE,QAA0B,EAAE,EAAU;QAC7E,EAAE,CAAA,CAAE,EAAE,IAAI,CAAE,SAAG,CAAC,SAAS,CAAE,EAAE,CAAG,CAAC;YAAC,MAAM,IAAI,6BAAoB,CAAE,cAAY,EAAE,kCAA+B,CAAE,CAAC;QAClH,EAAE,CAAA,CAAE,CAAE,EAAG,CAAC;YAAC,EAAE,GAAG,SAAG,CAAC,eAAe,EAAE,CAAC;QAEtC,MAAM,CAAC,qCAAiB,CAAC,UAAU,CAAK,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAE,CAAC;IAChE,CAAC;CACD,CAAC","file":"TransientBlankNode.js","sourcesContent":["import { TransientDocument } from \"./TransientDocument\";\nimport { IllegalArgumentError } from \"./Errors\";\nimport { TransientFragment } from \"./TransientFragment\";\nimport { ModelFactory } from \"./ModelFactory\";\nimport { URI } from \"./RDF/URI\";\n\nexport interface TransientBlankNode extends TransientFragment {\n}\n\nexport interface TransientBlankNodeFactory extends ModelFactory<TransientBlankNode> {\n\tis( object:object ):object is TransientBlankNode;\n\n\n\tcreate( document:TransientDocument, id?:string ):TransientBlankNode;\n\n\tcreateFrom<T extends object>( object:T, document:TransientDocument, id?:string ):T & TransientBlankNode;\n}\n\nexport const TransientBlankNode:TransientBlankNodeFactory = {\n\tis( object:object ):object is TransientBlankNode {\n\t\treturn TransientFragment.is( object ) &&\n\t\t\tURI.isBNodeID( object.id )\n\t\t\t;\n\t},\n\n\n\tcreate( document:TransientDocument, id?:string ):TransientBlankNode {\n\t\treturn TransientBlankNode.createFrom( {}, document, id );\n\t},\n\n\tcreateFrom<T extends object>( object:T, document:TransientDocument, id?:string ):T & TransientBlankNode {\n\t\tif( id && ! URI.isBNodeID( id ) ) throw new IllegalArgumentError( `The id \"${ id }\" is not an blank node label` );\n\t\tif( ! id ) id = URI.generateBNodeID();\n\n\t\treturn TransientFragment.createFrom<T>( object, document, id );\n\t},\n};\n"]}