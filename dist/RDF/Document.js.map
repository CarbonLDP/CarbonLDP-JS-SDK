{"version":3,"sources":["RDF/Document.ts"],"names":[],"mappings":"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","file":"Document.js","sourcesContent":["import * as HTTP from \"./../HTTP\";\nimport * as JSONLD from \"./../JSONLD\";\nimport * as RDFNode from \"./RDFNode\";\nimport * as Utils from \"./../Utils\";\nimport * as URI from \"./URI\";\nimport * as Value from \"./Value\";\nimport * as Errors from \"./../Errors\";\n\nexport interface Class {\n\t\"@id\"?:string;\n\t\"@graph\":RDFNode.Class[];\n}\n\nexport class Factory {\n\tstatic is( object:Object ):boolean {\n\t\treturn Utils.hasProperty( object, \"@graph\" )\n\t\t\t&& Utils.isArray( object[ \"@graph\" ] );\n\t}\n\n\tstatic create( resources:RDFNode.Class[], uri?:string ):Class {\n\t\tlet document:any = uri ? RDFNode.Factory.create( uri ) : {};\n\t\tdocument[ \"@graph\" ] = resources;\n\n\t\treturn document;\n\t}\n}\n\nexport class Util {\n\tstatic getDocuments( objects:Object[] ):Class[];\n\tstatic getDocuments( object:Object ):Class[];\n\tstatic getDocuments( value:any ):Class[] {\n\t\tif( Utils.isArray( value ) ) {\n\t\t\tlet array:any[] = <any> value;\n\t\t\treturn array.filter( ( element:any ) => Factory.is( element ) );\n\t\t} else if( Utils.isObject( value ) ) {\n\t\t\tif( Factory.is( value ) ) return [ value ];\n\t\t}\n\t\treturn [];\n\t}\n\n\tstatic getResources( objects:Object[] ):RDFNode.Class[];\n\tstatic getResources( object:Object ):RDFNode.Class[];\n\tstatic getResources( value:any ):RDFNode.Class[] {\n\t\tlet freeNodes:RDFNode.Class[] = RDFNode.Util.getFreeNodes( value );\n\t\tlet documents:Class[] = Util.getDocuments( value );\n\n\t\tlet resources:RDFNode.Class[] = [].concat( freeNodes );\n\n\t\tfor( let document of documents ) {\n\t\t\tresources = resources.concat( document[ \"@graph\" ] );\n\t\t}\n\n\t\treturn resources;\n\t}\n\n\tstatic getDocumentResources( document:RDFNode.Class[] ):RDFNode.Class[];\n\tstatic getDocumentResources( document:Class ):RDFNode.Class[];\n\tstatic getDocumentResources( document:any ):RDFNode.Class[] {\n\t\tlet resources:RDFNode.Class[] = Util.getResources( document );\n\t\tlet documentResources:RDFNode.Class[] = [];\n\n\t\tfor( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tlet resource:RDFNode.Class = resources[ i ];\n\t\t\tlet uri:string = resource[ \"@id\" ];\n\t\t\tif( ! uri ) continue;\n\n\t\t\tif( ! URI.Util.hasFragment( uri ) && ! URI.Util.isBNodeID( uri ) ) documentResources.push( resource );\n\t\t}\n\n\t\treturn documentResources;\n\t}\n\n\tstatic getFragmentResources( document:RDFNode.Class[], documentResource?:RDFNode.Class ):RDFNode.Class[];\n\tstatic getFragmentResources( document:Class, documentResource?:RDFNode.Class ):RDFNode.Class[];\n\tstatic getFragmentResources( document:RDFNode.Class[], documentResourceURI?:string ):RDFNode.Class[];\n\tstatic getFragmentResources( document:Class, documentResourceURI?:string ):RDFNode.Class[];\n\tstatic getFragmentResources( document:any, documentResource?:any ):RDFNode.Class[] {\n\t\tlet resources:RDFNode.Class[] = Util.getResources( document );\n\n\t\tlet documentURIToMatch:string = null;\n\t\tif( documentResource ) {\n\t\t\tif( Utils.isString( documentResource ) ) {\n\t\t\t\tdocumentURIToMatch = documentResource;\n\t\t\t} else documentURIToMatch = documentResource[ \"@id\" ];\n\t\t}\n\n\t\tlet fragmentResources:RDFNode.Class[] = [];\n\n\t\tfor( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tlet resource:RDFNode.Class = resources[ i ];\n\t\t\tlet uri:string = resource[ \"@id\" ];\n\n\t\t\tif( ! uri ) continue;\n\t\t\tif( ! URI.Util.hasFragment( uri ) ) continue;\n\n\t\t\tif( ! documentURIToMatch ) {\n\t\t\t\tfragmentResources.push( resource );\n\t\t\t} else {\n\t\t\t\tlet documentURI:string = URI.Util.getDocumentURI( uri );\n\t\t\t\tif( documentURI === documentURIToMatch ) fragmentResources.push( resource );\n\t\t\t}\n\t\t}\n\n\t\treturn fragmentResources;\n\t}\n\n\tstatic getBNodeResources( document:Class ):RDFNode.Class[] {\n\t\tlet resources:RDFNode.Class[] = Util.getResources( document );\n\n\t\tlet bnodes:RDFNode.Class[] = [];\n\t\tfor( let i:number = 0, length:number = resources.length; i < length; i ++ ) {\n\t\t\tlet resource:RDFNode.Class = resources[ i ];\n\t\t\tif( ! ( \"@id\" in resource ) || URI.Util.isBNodeID( resource[ \"@id\" ] ) ) bnodes.push( resource );\n\t\t}\n\n\t\treturn bnodes;\n\t}\n}\n\nexport class Parser implements HTTP.Parser.Class<Class[]> {\n\tparse( input:string ):Promise<any> {\n\t\tlet jsonLDParser:JSONLD.Parser.Class = new JSONLD.Parser.Class();\n\t\treturn jsonLDParser.parse( input ).then( ( expandedResult:any ) => {\n\t\t\treturn Util.getDocuments( expandedResult );\n\t\t} );\n\t}\n}\n\nexport default Class;\n"]}