{"version":3,"sources":["RDF/Document.ts"],"names":[],"mappings":"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","file":"Document.js","sourcesContent":["import { Parser } from \"../HTTP/Parser\";\nimport { JSONLDParser } from \"../JSONLD/Parser\";\nimport * as Utils from \"./../Utils\";\nimport { RDFNode } from \"./Node\";\nimport { URI } from \"./URI\";\n\nexport interface RDFDocument {\n\t\"@id\"?:string;\n\t\"@graph\":RDFNode[];\n}\n\n\nexport interface RDFDocumentFactory {\n\tis( value:any ):value is RDFDocument;\n\n\tcreate( resources:RDFNode[], uri?:string ):RDFDocument;\n\n\n\tgetDocuments( objects:object | object[] ):RDFDocument[];\n\n\tgetResources( objects:object | object[] ):RDFNode[];\n\n\tgetDocumentResources( document:RDFNode[] | RDFDocument ):RDFNode[];\n\n\tgetNamedFragmentResources( document:RDFNode[] | RDFDocument, documentResource?:string | RDFNode ):RDFNode[];\n\n\tgetBNodeResources( document:RDFDocument ):RDFNode[];\n\n\tgetNodes( rdfDocument:RDFDocument ):[ RDFNode[], RDFNode[] ];\n}\n\nexport const RDFDocument:RDFDocumentFactory = {\n\tis( value:any ):value is RDFDocument {\n\t\treturn Utils.hasProperty( value, \"@graph\" )\n\t\t\t&& Utils.isArray( value[ \"@graph\" ] );\n\t},\n\n\tcreate( resources:RDFNode[], uri?:string ):RDFDocument {\n\t\tconst document:RDFDocument = {\n\t\t\t\"@graph\": resources,\n\t\t};\n\n\t\tif( uri ) document[ \"@id\" ] = uri;\n\n\t\treturn document;\n\t},\n\n\n\tgetDocuments( objects:object | object[] ):RDFDocument[] {\n\t\tif( Utils.isArray( objects ) ) return objects\n\t\t\t.filter( RDFDocument.is );\n\n\t\tif( RDFDocument.is( objects ) ) return [ objects ];\n\n\t\treturn [];\n\t},\n\n\tgetResources( objects:object | object[] ):RDFNode[] {\n\t\tconst resources:RDFNode[] = RDFNode.getFreeNodes( objects );\n\n\t\tRDFDocument\n\t\t\t.getDocuments( objects )\n\t\t\t.map( document => document[ \"@graph\" ] )\n\t\t\t.forEach( nodes => resources.push( ...nodes ) )\n\t\t;\n\n\t\treturn resources;\n\t},\n\n\tgetDocumentResources( document:RDFDocument | RDFNode[] ):RDFNode[] {\n\t\treturn RDFDocument\n\t\t\t.getResources( document )\n\t\t\t.filter( node => ! RDFNode.isFragment( node ) )\n\t\t\t;\n\t},\n\n\tgetNamedFragmentResources( document:RDFDocument | RDFNode[], documentResource?:string | RDFNode ):RDFNode[] {\n\t\tconst uriToMatch:string = Utils.isObject( documentResource ) ?\n\t\t\tRDFNode.getID( documentResource ) :\n\t\t\tdocumentResource;\n\n\t\treturn RDFDocument\n\t\t\t.getResources( document )\n\t\t\t.filter( node => {\n\t\t\t\tconst id:string = RDFNode.getID( node );\n\n\t\t\t\tif( ! URI.hasFragment( id ) ) return;\n\n\t\t\t\tif( ! uriToMatch ) return true;\n\t\t\t\treturn URI.getDocumentURI( id ) === uriToMatch;\n\t\t\t} )\n\t\t\t;\n\t},\n\n\tgetBNodeResources( document:RDFDocument | RDFNode[] ):RDFNode[] {\n\t\treturn RDFDocument\n\t\t\t.getResources( document )\n\t\t\t.filter( node => {\n\t\t\t\tconst id:string = RDFNode.getID( node );\n\t\t\t\treturn URI.isBNodeID( id );\n\t\t\t} )\n\t\t\t;\n\t},\n\n\tgetNodes( rdfDocument:RDFDocument ):[ RDFNode[], RDFNode[] ] {\n\t\tconst documentNodes:RDFNode[] = [];\n\t\tconst fragmentNodes:RDFNode[] = [];\n\n\t\tfor( const node of rdfDocument[ \"@graph\" ] ) {\n\t\t\t( RDFNode.isFragment( node ) ? fragmentNodes : documentNodes ).push( node );\n\t\t}\n\n\t\treturn [ documentNodes, fragmentNodes ];\n\t},\n\n};\n\n\nexport class RDFDocumentParser extends JSONLDParser implements Parser<RDFDocument[]> {\n\tparse( input:string ):Promise<RDFDocument[]> {\n\t\treturn super.parse( input ).then( RDFDocument.getDocuments );\n\t}\n}\n"]}