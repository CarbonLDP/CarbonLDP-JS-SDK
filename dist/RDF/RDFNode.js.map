{"version":3,"sources":["RDF/RDFNode.ts"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEpC,IAAY,QAAQ,WAAM,YAAY,CAAC,CAAA;AAOvC;IAAA;IAWA,CAAC;IAVO,UAAE,GAAT,UAAW,KAAY;QACtB,MAAM,CAAC,KAAK,CAAC,WAAW,CAAE,KAAK,EAAE,KAAK,CAAE;eACpC,KAAK,CAAC,QAAQ,CAAE,KAAK,CAAE,KAAK,CAAE,CAAE,CAAC;IACtC,CAAC;IAEM,cAAM,GAAb,UAAe,GAAU;QACxB,MAAM,CAAC;YACN,KAAK,EAAE,GAAG;SACV,CAAC;IACH,CAAC;IACF,cAAC;AAAD,CAXA,AAWC,IAAA;AAXY,eAAO,UAWnB,CAAA;AAED;IAAA;IA8BA,CAAC;IA7BO,aAAQ,GAAf,UAAiB,KAAW,EAAE,KAAW;QACxC,MAAM,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,KAAK,CAAE,KAAK,CAAE,CAAC;IAC1C,CAAC;IAEM,YAAO,GAAd,UAAgB,IAAU,EAAE,IAAW;QACtC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC,OAAO,CAAE,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,aAAQ,GAAf,UAAiB,IAAU;QAC1B,EAAE,CAAA,CAAE,CAAE,CAAE,OAAO,IAAI,IAAI,CAAG,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC;QACtC,MAAM,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;IACxB,CAAC;IAEM,mBAAc,GAArB,UAAuB,IAAU,EAAE,SAAgB;QAClD,EAAE,CAAA,CAAE,CAAE,CAAE,SAAS,IAAI,IAAI,CAAG,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAC1C,EAAE,CAAA,CAAE,CAAE,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,SAAS,CAAE,CAAG,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACvD,IAAI,GAAG,GAAU,IAAI,CAAE,SAAS,CAAE,CAAC,IAAI,CAAE,UAAE,KAAiB,IAAM,OAAA,OAAO,CAAC,EAAE,CAAE,KAAK,CAAE,EAAnB,CAAmB,CAAE,CAAC;QAExF,MAAM,CAAC,OAAO,GAAG,KAAK,WAAW,GAAG,GAAG,CAAE,KAAK,CAAE,GAAG,IAAI,CAAC;IACzD,CAAC;IAEM,iBAAY,GAAnB,UAAuC,KAAO;QAC7C,EAAE,CAAA,CAAE,CAAE,KAAK,CAAC,OAAO,CAAE,KAAK,CAAG,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC;QAEzC,IAAI,KAAK,GAAe,KAAK,CAAC;QAC9B,MAAM,CAAC,KAAK;aACV,MAAM,CAAE,UAAE,OAAO,IAAM,OAAA,CAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAE,OAAO,CAAE,EAAhC,CAAgC,CAAE;aACzD,MAAM,CAAE,UAAE,OAAO,IAAM,OAAA,OAAO,CAAC,EAAE,CAAE,OAAO,CAAE,EAArB,CAAqB,CAAE,CAAC;IAClD,CAAC;IACF,WAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,YAAI,OA8BhB,CAAA","file":"RDF/RDFNode.js","sourcesContent":["import * as Utils from \"./../Utils\";\n\nimport * as Document from \"./Document\";\nimport * as Value from \"./Value\";\n\nexport interface Class {\n\t\"@id\":string;\n}\n\nexport class Factory {\n\tstatic is( value:Object ):boolean {\n\t\treturn Utils.hasProperty( value, \"@id\" )\n\t\t\t&& Utils.isString( value[ \"@id\" ] );\n\t}\n\n\tstatic create( uri:string ):Class {\n\t\treturn {\n\t\t\t\"@id\": uri,\n\t\t};\n\t}\n}\n\nexport class Util {\n\tstatic areEqual( node1:Class, node2:Class ):boolean {\n\t\treturn node1[ \"@id\" ] === node2[ \"@id\" ];\n\t}\n\n\tstatic hasType( node:Class, type:string ):boolean {\n\t\treturn Util.getTypes( node ).indexOf( type ) !== -1;\n\t}\n\n\tstatic getTypes( node:Class ):string[] {\n\t\tif( ! ( \"@type\" in node ) ) return [];\n\t\treturn node[ \"@type\" ];\n\t}\n\n\tstatic getPropertyURI( node:Class, predicate:string ):string {\n\t\tif( ! ( predicate in node ) ) return null;\n\t\tif( ! Utils.isArray( node[ predicate ] ) ) return null;\n\t\tlet uri:string = node[ predicate ].find( ( value:Value.Class ) => Factory.is( value ) );\n\n\t\treturn typeof uri !== \"undefined\" ? uri[ \"@id\" ] : null;\n\t}\n\n\tstatic getFreeNodes<T extends Object>( value:T ):Class[] {\n\t\tif( ! Utils.isArray( value ) ) return [];\n\n\t\tlet array:any[] = <any> value;\n\t\treturn array\n\t\t\t.filter( ( element ) => ! Document.Factory.is( element ) )\n\t\t\t.filter( ( element ) => Factory.is( element ) );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}