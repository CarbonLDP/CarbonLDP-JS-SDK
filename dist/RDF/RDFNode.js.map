{"version":3,"sources":["RDF/RDFNode.ts"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAOpC;IAAA;IAWA,CAAC;IAVO,UAAE,GAAT,UAAW,KAAY;QACtB,MAAM,CAAC,KAAK,CAAC,WAAW,CAAE,KAAK,EAAE,KAAK,CAAE;eACpC,KAAK,CAAC,QAAQ,CAAE,KAAK,CAAE,KAAK,CAAE,CAAE,CAAC;IACtC,CAAC;IAEM,cAAM,GAAb,UAAe,GAAU;QACxB,MAAM,CAAC;YACN,KAAK,EAAE,GAAG;SACV,CAAC;IACH,CAAC;IACF,cAAC;AAAD,CAXA,AAWC,IAAA;AAXY,eAAO,UAWnB,CAAA;AAED;IAAA;IAYA,CAAC;IAXO,aAAQ,GAAf,UAAiB,KAAW,EAAE,KAAW;QACxC,MAAM,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,KAAK,CAAE,KAAK,CAAE,CAAC;IAC1C,CAAC;IAEM,mBAAc,GAArB,UAAuB,IAAU,EAAE,SAAgB;QAClD,EAAE,CAAA,CAAE,CAAE,CAAE,SAAS,IAAI,IAAI,CAAG,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAC1C,EAAE,CAAA,CAAE,CAAE,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,SAAS,CAAE,CAAG,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACvD,IAAI,GAAG,GAAU,IAAI,CAAE,SAAS,CAAE,CAAC,IAAI,CAAE,UAAE,KAAiB,IAAM,OAAA,OAAO,CAAC,EAAE,CAAE,KAAK,CAAE,EAAnB,CAAmB,CAAE,CAAC;QAExF,MAAM,CAAC,OAAO,GAAG,KAAK,WAAW,GAAG,GAAG,CAAE,KAAK,CAAE,GAAG,IAAI,CAAC;IACzD,CAAC;IACF,WAAC;AAAD,CAZA,AAYC,IAAA;AAZY,YAAI,OAYhB,CAAA","file":"RDF/RDFNode.js","sourcesContent":["import * as Utils from \"./../Utils\";\nimport * as Value from \"./Value\";\n\nexport interface Class {\n\t\"@id\":string;\n}\n\nexport class Factory {\n\tstatic is( value:Object ):boolean {\n\t\treturn Utils.hasProperty( value, \"@id\" )\n\t\t\t&& Utils.isString( value[ \"@id\" ] );\n\t}\n\n\tstatic create( uri:string ):Class {\n\t\treturn {\n\t\t\t\"@id\": uri,\n\t\t};\n\t}\n}\n\nexport class Util {\n\tstatic areEqual( node1:Class, node2:Class ):boolean {\n\t\treturn node1[ \"@id\" ] === node2[ \"@id\" ];\n\t}\n\n\tstatic getPropertyURI( node:Class, predicate:string ):string {\n\t\tif( ! ( predicate in node ) ) return null;\n\t\tif( ! Utils.isArray( node[ predicate ] ) ) return null;\n\t\tlet uri:string = node[ predicate ].find( ( value:Value.Class ) => Factory.is( value ) );\n\n\t\treturn typeof uri !== \"undefined\" ? uri[ \"@id\" ] : null;\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}