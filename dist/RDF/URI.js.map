{"version":3,"sources":["RDF/URI.ts"],"names":[],"mappings":"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","file":"URI.js","sourcesContent":["import { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\nimport { DigestedObjectSchema } from \"../ObjectSchema\";\nimport {\n\tisString,\n\tStringUtils,\n\tUUIDUtils,\n} from \"../Utils\";\n\nexport interface URIFactory {\n\thasFragment( uri:string ):boolean;\n\n\n\thasQuery( uri:string ):boolean;\n\n\n\thasProtocol( uri:string ):boolean;\n\n\n\tisAbsolute( uri:string ):boolean;\n\n\n\tisRelative( uri:string ):boolean;\n\n\n\tisBNodeID( uri:string ):boolean;\n\n\n\tgenerateBNodeID():string;\n\n\n\tisPrefixed( uri:string ):boolean;\n\n\n\tisFragmentOf( fragmentURI:string, uri:string ):boolean;\n\n\n\tisBaseOf( baseURI:string, uri:string ):boolean;\n\n\n\tgetRelativeURI( absoluteURI:string, base:string ):string;\n\n\n\tgetDocumentURI( uri:string ):string;\n\n\n\tgetFragment( uri:string ):string;\n\n\n\tgetSlug( uri:string ):string;\n\n\n\tgetParameters( uri:string ):Map<string, string | string[]>;\n\n\n\tresolve( parentURI:string, childURI:string ):string;\n\n\n\tremoveProtocol( uri:string ):string;\n\n\n\tprefix( uri:string, prefix:string, prefixURI:string ):string;\n\n\tprefix( uri:string, objectSchema:DigestedObjectSchema ):string;\n}\n\nexport const URI:URIFactory = {\n\thasFragment( uri:string ):boolean {\n\t\treturn uri.indexOf( \"#\" ) !== - 1;\n\t},\n\n\thasQuery( uri:string ):boolean {\n\t\treturn uri.indexOf( \"?\" ) !== - 1;\n\t},\n\n\thasProtocol( uri:string ):boolean {\n\t\treturn StringUtils.startsWith( uri, \"https://\" ) || StringUtils.startsWith( uri, \"http://\" );\n\t},\n\n\tisAbsolute( uri:string ):boolean {\n\t\treturn StringUtils.startsWith( uri, \"http://\" )\n\t\t\t|| StringUtils.startsWith( uri, \"https://\" )\n\t\t\t|| StringUtils.startsWith( uri, \"://\" );\n\t},\n\n\tisRelative( uri:string ):boolean {\n\t\treturn ! URI.isAbsolute( uri );\n\t},\n\n\tisBNodeID( uri:string ):boolean {\n\t\treturn StringUtils.startsWith( uri, \"_:\" );\n\t},\n\n\tgenerateBNodeID():string {\n\t\treturn \"_:\" + UUIDUtils.generate();\n\t},\n\n\tisPrefixed( uri:string ):boolean {\n\t\treturn ! URI.isAbsolute( uri ) && ! URI.isBNodeID( uri ) && StringUtils.contains( uri, \":\" );\n\t},\n\n\tisFragmentOf( fragmentURI:string, uri:string ):boolean {\n\t\tif( ! URI.hasFragment( fragmentURI ) ) return false;\n\n\t\treturn URI.getDocumentURI( fragmentURI ) === uri;\n\t},\n\n\tisBaseOf( baseURI:string, uri:string ):boolean {\n\t\tif( baseURI === uri ) return true;\n\t\tif( baseURI === \"\" ) return true;\n\t\tif( URI.isRelative( uri ) && ! URI.isPrefixed( uri ) ) return true;\n\n\t\tif( uri.startsWith( baseURI ) ) {\n\t\t\tif( StringUtils.endsWith( baseURI, \"/\" ) || StringUtils.endsWith( baseURI, \"#\" ) ) return true;\n\n\t\t\tlet relativeURI:string = uri.substring( baseURI.length );\n\t\t\tif( StringUtils.startsWith( relativeURI, \"/\" ) || StringUtils.startsWith( relativeURI, \"#\" ) ) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tgetRelativeURI( absoluteURI:string, base:string ):string {\n\t\tif( ! absoluteURI.startsWith( base ) )\n\t\t\treturn absoluteURI;\n\t\treturn absoluteURI.substring( base.length );\n\t},\n\n\tgetDocumentURI( uri:string ):string {\n\t\tlet parts:string[] = uri.split( \"#\" );\n\t\tif( parts.length > 2 ) throw new Error( \"IllegalArgument: The URI provided has more than one # sign.\" );\n\n\t\treturn parts[ 0 ];\n\t},\n\n\tgetFragment( uri:string ):string {\n\t\tlet parts:string[] = uri.split( \"#\" );\n\t\tif( parts.length < 2 ) return null;\n\t\tif( parts.length > 2 ) throw new Error( \"IllegalArgument: The URI provided has more than one # sign.\" );\n\n\t\treturn parts[ 1 ];\n\t},\n\n\tgetSlug( uri:string ):string {\n\t\tlet uriParts:string[] = uri.split( \"#\" );\n\t\tif( uriParts.length === 2 ) return URI.getSlug( uriParts[ 1 ] );\n\t\tif( uriParts.length > 2 ) throw new IllegalArgumentError( \"Invalid URI: The uri contains two '#' symbols.\" );\n\n\t\turi = uriParts[ 0 ];\n\n\t\tif( uri === \"\" ) return uri;\n\t\tif( uri === \"/\" ) return uri;\n\n\t\tlet parts:string[] = uri.split( \"/\" );\n\t\tif( parts[ parts.length - 1 ] === \"\" ) {\n\t\t\treturn parts[ parts.length - 2 ] + \"/\";\n\t\t} else {\n\t\t\treturn parts[ parts.length - 1 ];\n\t\t}\n\t},\n\n\tgetParameters( uri:string ):Map<string, string | string[]> {\n\t\tlet parameters:Map<string, string | string[]> = new Map();\n\n\t\tif( ! URI.hasQuery( uri ) ) return parameters;\n\n\t\turi.replace( /^.*\\?/, \"\" ).split( \"&\" ).forEach( ( param:string ) => {\n\t\t\tlet parts:string[] = param.replace( /\\+/g, \" \" ).split( \"=\" );\n\n\t\t\tlet key:string = parts.shift();\n\t\t\tlet val:string = parts.length > 0 ? parts.join( \"=\" ) : null;\n\n\t\t\tif( ! parameters.has( key ) ) {\n\t\t\t\tparameters.set( key, val );\n\t\t\t} else {\n\t\t\t\tparameters.set( key, [].concat( parameters.get( key ), val ) );\n\t\t\t}\n\t\t} );\n\n\t\treturn parameters;\n\t},\n\n\tresolve( parentURI:string, childURI:string ):string {\n\t\tif( ! parentURI || URI.isAbsolute( childURI ) || URI.isBNodeID( childURI ) || URI.isPrefixed( childURI ) )\n\t\t\treturn childURI;\n\n\t\tlet protocol:string = parentURI.substr( 0, parentURI.indexOf( \"://\" ) + 3 );\n\t\tlet path:string = parentURI.substr( parentURI.indexOf( \"://\" ) + 3, parentURI.length - 1 );\n\t\tif( path.lastIndexOf( \"/\" ) === - 1 ) path += \"/\";\n\n\t\tif( StringUtils.startsWith( childURI, \"?\" ) || StringUtils.startsWith( childURI, \"#\" ) ) {\n\t\t\tif( URI.hasQuery( path ) ) path = path.substr( 0, path.indexOf( \"?\" ) );\n\t\t\tif( URI.hasFragment( path ) && ( ! StringUtils.startsWith( childURI, \"?\" ) || StringUtils.endsWith( path, \"#\" ) ) ) path = URI.getDocumentURI( path );\n\t\t} else {\n\t\t\tpath = path.substr( 0, path.lastIndexOf( \"/\" ) + 1 );\n\t\t\tif( ! StringUtils.endsWith( path, \"?\" ) && ! StringUtils.endsWith( path, \"#\" ) && ! StringUtils.endsWith( path, \"/\" ) ) path += \"/\";\n\t\t}\n\n\t\tif( StringUtils.startsWith( childURI, \"/\" ) ) {\n\t\t\tchildURI = childURI.substr( 1, childURI.length );\n\t\t}\n\n\t\treturn protocol + path + childURI;\n\t},\n\n\tremoveProtocol( uri:string ):string {\n\t\tif( ! URI.hasProtocol( uri ) ) return uri;\n\t\treturn uri.substring( uri.indexOf( \"://\" ) + 3 );\n\t},\n\n\tprefix( uri:string, prefixOrObjectSchema:string | DigestedObjectSchema, prefixURI?:string ):string {\n\t\tif( ! isString( prefixOrObjectSchema ) ) return prefixWithObjectSchema( uri, prefixOrObjectSchema );\n\n\t\tconst prefix:string = prefixOrObjectSchema;\n\n\t\tif( URI.isPrefixed( uri ) || ! uri.startsWith( prefixURI ) ) return uri;\n\n\t\treturn `${ prefix }:${ uri.substring( prefixURI.length ) }`;\n\t},\n};\n\nfunction prefixWithObjectSchema( uri:string, objectSchema:DigestedObjectSchema ):string {\n\tconst prefixEntries:IterableIterator<[ string, string ]> = objectSchema.prefixes.entries();\n\twhile( true ) {\n\t\tconst result:IteratorResult<[ string, string ]> = prefixEntries.next();\n\t\tif( result.done ) return uri;\n\n\t\tlet [ prefix, prefixURI ]:[ string, string ] = result.value;\n\t\tif( ! URI.isAbsolute( prefixURI ) ) continue;\n\t\tif( ! uri.startsWith( prefixURI ) ) continue;\n\n\t\treturn URI.prefix( uri, prefix, prefixURI );\n\t}\n}\n\nexport default URI;\n"]}