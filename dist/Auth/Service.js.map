{"version":3,"sources":["Auth/Service.ts"],"names":[],"mappings":";;;;;;;;;AACA,gDAAoC;AAGpC,8CAAkC;AAClC,gDAAqC;AAErC,2CAA0C;AAC1C,2DAA0D;AAE1D,2CAA0C;AAC1C,6CAAiC;AACjC,2DAA0D;AAC1D,uDAG4B;AAE5B,iDAAgD;AAEhD;IA4BC,qBAAa,OAAe;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAM,QAAQ,GAAU,OAAO,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC;QACxD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;QACpD,6BAAa,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,CAAC;QAE7D,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAE,OAAO,CAAE,CAAC;QAExC,IAAI,CAAC,cAAc;YAClB,GAAE,uBAAU,CAAC,KAAK,IAAI,IAAI,uCAAkB,CAAE,IAAI,CAAC,OAAO,CAAE;YAC5D,GAAE,uBAAU,CAAC,KAAK,IAAI,IAAI,uCAAkB,CAAE,IAAI,CAAC,OAAO,CAAE;eAC5D,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG;YACjB,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,IAAI,CAAE;YAC7C,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,MAAM,CAAE;YACjD,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,MAAM,CAAE;YACjD,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,WAAW,CAAE;YAC5D,mBAAmB,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,iBAAiB,CAAE;YACzE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,SAAS,CAAE;YACxD,aAAa,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,YAAY,CAAE;YAC9D,cAAc,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,aAAa,CAAE;YAChE,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAE,iBAAE,CAAC,WAAW,CAAE;SAC3D,CAAC;;IACH,CAAC;IA5CD,sBAAW,0CAAiB;aAA5B;YACC,IAAI,IAAI,CAAC,kBAAkB;gBAAG,OAAO,IAAI,CAAC,kBAAkB,CAAC;YAC7D,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI;gBAAG,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAE7H,OAAO,IAAI,CAAC;QACb,CAAC;;;OAAA;IAyCD,qCAAe,GAAf,UAAiB,SAAwB;QAAxB,0BAAA,EAAA,gBAAwB;QACxC,OAAO,CACN,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;YAC5D,CAAC,SAAS,IAAI,CAAE,CAAE,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,CAAE,CAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CACzI,CAAC;IACH,CAAC;IAED,kCAAY,GAAZ,UAAc,QAAe,EAAE,QAAe;QAC7C,OAAO,IAAI,CAAC,iBAAiB,CAAE,uBAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;IACvE,CAAC;IAKD,uCAAiB,GAAjB,UAAmB,MAAiB,EAAE,iBAA+C,EAAE,QAAgB;QAAvG,iBA6BC;QA5BA,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAM,aAAa,GAA2B,IAAI,CAAC,cAAc,CAAE,MAAM,CAAE,CAAC;QAC5E,IAAI,CAAE,aAAa;YAAG,OAAO,OAAO,CAAC,MAAM,CAAE,IAAI,MAAM,CAAC,oBAAoB,CAAE,qCAAkC,MAAM,QAAI,CAAE,CAAE,CAAC;QAE/H,IAAI,mBAAqD,CAAC;QAC1D,IAAI,KAAK,CAAC,QAAQ,CAAE,iBAAiB,CAAE;YACtC,mBAAmB,GAAG,IAAI,uBAAU,CAAE,iBAAiB,EAAE,QAAQ,CAAE,CAAC;aAChE,IAAI,uCAAoB,CAAC,EAAE,CAAE,iBAAiB,CAAE,EAAG;YACvD,mBAAmB,GAAG,iBAAiB,CAAC;SACxC;aAAM;YACN,OAAO,OAAO,CAAC,MAAM,CAAE,IAAI,MAAM,CAAC,oBAAoB,CAAE,+BAA+B,CAAE,CAAE,CAAC;SAC5F;QAED,IAAI,WAA+C,CAAC;QACpD,OAAO,aAAa;aAClB,YAAY,CAAE,mBAAmB,CAAE;aACnC,IAAI,CAAE,UAAE,YAAY;YACpB,WAAW,GAAG,YAAY,CAAC;YAE3B,OAAO,aAAa;iBAClB,oBAAoB,EAAE,CAAC;QAC1B,CAAC,CAAE,CAAC,IAAI,CAAE,UAAE,aAAkB;YAC7B,KAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;YACxC,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YAEnC,OAAO,WAAW,CAAC;QACpB,CAAC,CAAE,CAAC;IACN,CAAC;IAED,uCAAiB,GAAjB,UAAmB,cAA6B;QAC/C,IAAI,IAAI,CAAC,eAAe,CAAE,KAAK,CAAE,EAAG;YACnC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAE,cAAc,CAAE,CAAC;SACvD;aAAM,IAAI,CAAE,CAAE,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,CAAE,CAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAG;YAClF,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAE,cAAc,CAAE,CAAC;SACpE;aAAM;YACN,OAAO,CAAC,IAAI,CAAE,mDAAmD,CAAE,CAAC;SACpE;IACF,CAAC;IAED,yCAAmB,GAAnB;QACC,IAAI,CAAE,IAAI,CAAC,aAAa;YAAG,OAAO;QAElC,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEF,kBAAC;AAAD,CAtHA,AAsHC,IAAA;AAtHY,kCAAW","file":"Service.js","sourcesContent":["import { Context } from \"../Context\";\nimport * as Errors from \"../Errors\";\nimport { RequestOptions } from \"../HTTP\";\nimport { Pointer } from \"../Pointer\";\nimport * as Utils from \"../Utils\";\nimport { CS } from \"../Vocabularies\";\nimport { Authenticator } from \"./Authenticator\";\nimport { AuthMethod } from \"./AuthMethod\";\nimport { BasicAuthenticator } from \"./BasicAuthenticator\";\nimport { BasicCredentials } from \"./BasicCredentials\";\nimport { BasicToken } from \"./BasicToken\";\nimport * as Roles from \"./Roles\";\nimport { TokenAuthenticator } from \"./TokenAuthenticator\";\nimport {\n\tTokenCredentials,\n\tTokenCredentialsBase,\n} from \"./TokenCredentials\";\nimport { User } from \"./User\";\nimport { UsersEndpoint } from \"./UsersEndpoint\";\n\nexport class AuthService {\n\tpublic readonly users:UsersEndpoint;\n\tpublic readonly roles:Roles.Class;\n\n\tprotected readonly context:Context;\n\tprotected readonly authenticators:{ [P in AuthMethod]:Authenticator<object, object> };\n\tprotected authenticator:Authenticator<object, object>;\n\n\tprotected _authenticatedUser:User;\n\tpublic get authenticatedUser():User {\n\t\tif( this._authenticatedUser ) return this._authenticatedUser;\n\t\tif( this.context.parentContext && this.context.parentContext.auth ) return this.context.parentContext.auth.authenticatedUser;\n\n\t\treturn null;\n\t}\n\n\tpublic Permission:{\n\t\tREAD:Pointer;\n\t\tUPDATE:Pointer;\n\t\tDELETE:Pointer;\n\t\tCREATE_CHILD:Pointer;\n\t\tCREATE_ACCESS_POINT:Pointer;\n\t\tADD_MEMBER:Pointer;\n\t\tREMOVE_MEMBER:Pointer;\n\t\tCONTROL_ACCESS:Pointer;\n\t\tIMPERSONATE:Pointer;\n\t};\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\n\t\tconst usersIRI:string = context._resolvePath( \"users\" );\n\t\tthis.users = context.documents.register( usersIRI );\n\t\tUsersEndpoint.decorate( this.users, this.context.documents );\n\n\t\tthis.roles = new Roles.Class( context );\n\n\t\tthis.authenticators = {\n\t\t\t[ AuthMethod.BASIC ]: new BasicAuthenticator( this.context ),\n\t\t\t[ AuthMethod.TOKEN ]: new TokenAuthenticator( this.context ),\n\t\t};\n\n\t\tthis.Permission = {\n\t\t\tREAD: context.documents.getPointer( CS.Read ),\n\t\t\tUPDATE: context.documents.getPointer( CS.Update ),\n\t\t\tDELETE: context.documents.getPointer( CS.Delete ),\n\t\t\tCREATE_CHILD: context.documents.getPointer( CS.CreateChild ),\n\t\t\tCREATE_ACCESS_POINT: context.documents.getPointer( CS.CreateAccessPoint ),\n\t\t\tADD_MEMBER: context.documents.getPointer( CS.AddMember ),\n\t\t\tREMOVE_MEMBER: context.documents.getPointer( CS.RemoveMember ),\n\t\t\tCONTROL_ACCESS: context.documents.getPointer( CS.ControlAccess ),\n\t\t\tIMPERSONATE: context.documents.getPointer( CS.Impersonate ),\n\t\t};\n\t}\n\n\tisAuthenticated( askParent:boolean = true ):boolean {\n\t\treturn (\n\t\t\t(this.authenticator && this.authenticator.isAuthenticated()) ||\n\t\t\t(askParent && ! ! this.context.parentContext && ! ! this.context.parentContext.auth && this.context.parentContext.auth.isAuthenticated())\n\t\t);\n\t}\n\n\tauthenticate( username:string, password:string ):Promise<TokenCredentials> {\n\t\treturn this.authenticateUsing( AuthMethod.TOKEN, username, password );\n\t}\n\n\tauthenticateUsing( method:AuthMethod.BASIC, username:string, password:string ):Promise<BasicCredentials>;\n\tauthenticateUsing( method:AuthMethod.TOKEN, username:string, password:string ):Promise<TokenCredentials>;\n\tauthenticateUsing( method:AuthMethod.TOKEN, token:TokenCredentialsBase ):Promise<TokenCredentials>;\n\tauthenticateUsing( method:AuthMethod, userOrCredentials:string | TokenCredentialsBase, password?:string ):Promise<BasicCredentials | TokenCredentials> {\n\t\tthis.clearAuthentication();\n\n\t\tconst authenticator:Authenticator<any, any> = this.authenticators[ method ];\n\t\tif( ! authenticator ) return Promise.reject( new Errors.IllegalArgumentError( `Invalid authentication method \"${method}\".` ) );\n\n\t\tlet authenticationToken:BasicToken | TokenCredentialsBase;\n\t\tif( Utils.isString( userOrCredentials ) )\n\t\t\tauthenticationToken = new BasicToken( userOrCredentials, password );\n\t\telse if( TokenCredentialsBase.is( userOrCredentials ) ) {\n\t\t\tauthenticationToken = userOrCredentials;\n\t\t} else {\n\t\t\treturn Promise.reject( new Errors.IllegalArgumentError( \"Invalid authentication token.\" ) );\n\t\t}\n\n\t\tlet credentials:BasicCredentials | TokenCredentials;\n\t\treturn authenticator\n\t\t\t.authenticate( authenticationToken )\n\t\t\t.then( ( _credentials ) => {\n\t\t\t\tcredentials = _credentials;\n\n\t\t\t\treturn authenticator\n\t\t\t\t\t.getAuthenticatedUser();\n\t\t\t} ).then( ( persistedUser:User ) => {\n\t\t\t\tthis._authenticatedUser = persistedUser;\n\t\t\t\tthis.authenticator = authenticator;\n\n\t\t\t\treturn credentials;\n\t\t\t} );\n\t}\n\n\taddAuthentication( requestOptions:RequestOptions ):void {\n\t\tif( this.isAuthenticated( false ) ) {\n\t\t\tthis.authenticator.addAuthentication( requestOptions );\n\t\t} else if( ! ! this.context.parentContext && ! ! this.context.parentContext.auth ) {\n\t\t\tthis.context.parentContext.auth.addAuthentication( requestOptions );\n\t\t} else {\n\t\t\tconsole.warn( \"There is no authentication to add to the request.\" );\n\t\t}\n\t}\n\n\tclearAuthentication():void {\n\t\tif( ! this.authenticator ) return;\n\n\t\tthis.authenticator.clearAuthentication();\n\t\tthis.authenticator = null;\n\t\tthis._authenticatedUser = null;\n\t}\n\n}\n"]}