{"version":3,"sources":["Auth/Service.ts"],"names":[],"mappings":"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","file":"Service.js","sourcesContent":["import { Context } from \"../Context\";\nimport * as Errors from \"../Errors\";\nimport { FreeResources } from \"../FreeResources\";\nimport { BadResponseError } from \"../HTTP/Errors\";\nimport {\n\tRequestOptions,\n\tRequestService,\n\tRequestUtils\n} from \"../HTTP/Request\";\nimport { Response } from \"../HTTP/Response\";\nimport { JSONLDParser } from \"../JSONLD/Parser\";\nimport * as ObjectSchema from \"../ObjectSchema\";\nimport { RDFNode } from \"../RDF/Node\";\nimport { URI } from \"../RDF/URI\";\nimport { Resource } from \"../Resource\";\nimport * as Utils from \"../Utils\";\nimport { LDP } from \"../Vocabularies/LDP\";\nimport { Authenticator } from \"./Authenticator\";\nimport { AuthMethod } from \"./AuthMethod\";\nimport { BasicAuthenticator } from \"./BasicAuthenticator\";\nimport { BasicCredentials } from \"./BasicCredentials\";\nimport { BasicToken } from \"./BasicToken\";\nimport * as PersistedUser from \"./PersistedUser\";\nimport * as Roles from \"./Roles\";\nimport * as Ticket from \"./Ticket\";\nimport TokenAuthenticator from \"./TokenAuthenticator\";\nimport * as TokenCredentials from \"./TokenCredentials\";\nimport * as Users from \"./Users\";\n\nexport class AuthService {\n\tpublic users:Users.Class;\n\tpublic roles:Roles.Class;\n\n\tprotected _authenticatedUser:PersistedUser.Class;\n\n\tprivate context:Context;\n\tprivate authenticators:{ [ P in AuthMethod ]:Authenticator<object, object> };\n\tprivate authenticator:Authenticator<object, object>;\n\n\tpublic get authenticatedUser():PersistedUser.Class {\n\t\tif( this._authenticatedUser ) return this._authenticatedUser;\n\t\tif( this.context.parentContext ) return this.context.parentContext.auth.authenticatedUser;\n\n\t\treturn null;\n\t}\n\n\tconstructor( context:Context ) {\n\t\tthis.roles = new Roles.Class( this.context );\n\t\tthis.users = new Users.Class( this.context );\n\n\t\tthis.context = context;\n\n\t\tthis.authenticators = {\n\t\t\t[ AuthMethod.BASIC ]: new BasicAuthenticator(),\n\t\t\t[ AuthMethod.TOKEN ]: new TokenAuthenticator( this.context ),\n\t\t};\n\t}\n\n\tisAuthenticated( askParent:boolean = true ):boolean {\n\t\treturn (\n\t\t\t(this.authenticator && this.authenticator.isAuthenticated()) ||\n\t\t\t(askParent && ! ! this.context.parentContext && ! ! this.context.parentContext.auth && this.context.parentContext.auth.isAuthenticated())\n\t\t);\n\t}\n\n\tauthenticate( username:string, password:string ):Promise<TokenCredentials.Class> {\n\t\treturn this.authenticateUsing( AuthMethod.TOKEN, username, password );\n\t}\n\n\tauthenticateUsing( method:AuthMethod.BASIC, username:string, password:string ):Promise<BasicCredentials>;\n\tauthenticateUsing( method:AuthMethod.TOKEN, username:string, password:string ):Promise<TokenCredentials.Class>;\n\tauthenticateUsing( method:AuthMethod.TOKEN, token:TokenCredentials.Class ):Promise<TokenCredentials.Class>;\n\tauthenticateUsing( method:AuthMethod, userOrCredentials:string | TokenCredentials.Class, password?:string ):Promise<BasicCredentials | TokenCredentials.Class> {\n\t\tswitch( method ) {\n\t\t\tcase AuthMethod.BASIC:\n\t\t\t\treturn this.authenticateWithBasic( userOrCredentials as string, password );\n\t\t\tcase AuthMethod.TOKEN:\n\t\t\t\treturn this.authenticateWithToken( userOrCredentials, password );\n\t\t\tdefault:\n\t\t\t\treturn Promise.reject( new Errors.IllegalArgumentError( `Unsupported authentication method \"${method}\"` ) );\n\t\t}\n\t}\n\n\taddAuthentication( requestOptions:RequestOptions ):void {\n\t\tif( this.isAuthenticated( false ) ) {\n\t\t\tthis.authenticator.addAuthentication( requestOptions );\n\t\t} else if( ! ! this.context.parentContext && ! ! this.context.parentContext.auth ) {\n\t\t\tthis.context.parentContext.auth.addAuthentication( requestOptions );\n\t\t} else {\n\t\t\tconsole.warn( \"There is no authentication to add to the request.\" );\n\t\t}\n\t}\n\n\tclearAuthentication():void {\n\t\tif( ! this.authenticator ) return;\n\n\t\tthis.authenticator.clearAuthentication();\n\t\tthis.authenticator = null;\n\t\tthis._authenticatedUser = null;\n\t}\n\n\tcreateTicket( uri:string, requestOptions:RequestOptions = {} ):Promise<[ Ticket.Class, Response ]> {\n\t\tconst resourceURI:string = this.context.resolve( uri );\n\n\t\tconst freeResources:FreeResources = FreeResources.create( this.context.documents );\n\t\tTicket.Factory.createFrom( freeResources.createResource(), resourceURI );\n\n\t\tif( this.isAuthenticated() ) this.addAuthentication( requestOptions );\n\t\tRequestUtils.setAcceptHeader( \"application/ld+json\", requestOptions );\n\t\tRequestUtils.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\t\tRequestUtils.setPreferredInteractionModel( LDP.RDFSource, requestOptions );\n\n\t\treturn Utils.promiseMethod( () => {\n\t\t\tconst containerURI:string = this.context._resolvePath( \"system.security\" ) + Ticket.TICKETS_CONTAINER;\n\t\t\tconst body:string = JSON.stringify( freeResources );\n\n\t\t\treturn RequestService.post( containerURI, body, requestOptions, new JSONLDParser() );\n\t\t} ).then<[ Ticket.Class, Response ]>( ( [ expandedResult, response ]:[ any, Response ] ) => {\n\t\t\tconst freeNodes:RDFNode[] = RDFNode.getFreeNodes( expandedResult );\n\n\t\t\tconst ticketNodes:RDFNode[] = freeNodes.filter( freeNode => RDFNode.hasType( freeNode, Ticket.RDF_CLASS ) );\n\t\t\tif( ticketNodes.length === 0 ) throw new BadResponseError( `No ${ Ticket.RDF_CLASS } was returned.`, response );\n\t\t\tif( ticketNodes.length > 1 ) throw new BadResponseError( `Multiple ${ Ticket.RDF_CLASS } were returned.`, response );\n\n\t\t\tconst expandedTicket:RDFNode = ticketNodes[ 0 ];\n\t\t\tconst ticket:Ticket.Class = <any> Resource.create();\n\n\t\t\tconst digestedSchema:ObjectSchema.DigestedObjectSchema = this.context.documents.getSchemaFor( expandedTicket );\n\t\t\tthis.context.documents.jsonldConverter.compact( expandedTicket, ticket, digestedSchema, this.context.documents );\n\n\t\t\treturn [ ticket, response ];\n\t\t} )\n\t\t\t.catch( error => this.context.documents._parseErrorResponse( error ) );\n\t}\n\n\tgetAuthenticatedURL( uri:string, requestOptions?:RequestOptions ):Promise<string> {\n\t\tlet resourceURI:string = this.context.resolve( uri );\n\n\t\treturn this.createTicket( resourceURI, requestOptions ).then( ( [ ticket ]:[ Ticket.Class, Response ] ) => {\n\t\t\tresourceURI += URI.hasQuery( resourceURI ) ? \"&\" : \"?\";\n\t\t\tresourceURI += `ticket=${ ticket.ticketKey }`;\n\n\t\t\treturn resourceURI;\n\t\t} );\n\t}\n\n\tprivate authenticateWithBasic( username:string, password:string ):Promise<BasicCredentials> {\n\t\tconst authenticator:BasicAuthenticator = <BasicAuthenticator> this.authenticators[ AuthMethod.BASIC ];\n\t\tconst authenticationToken:BasicToken = new BasicToken( username, password );\n\n\t\tthis.clearAuthentication();\n\n\t\tlet newCredentials:BasicCredentials;\n\t\treturn authenticator\n\t\t\t.authenticate( authenticationToken )\n\t\t\t.then( ( credentials:BasicCredentials ) => {\n\t\t\t\tnewCredentials = credentials;\n\n\t\t\t\treturn this.getAuthenticatedUser( authenticator );\n\t\t\t} )\n\t\t\t.then( ( persistedUser:PersistedUser.Class ) => {\n\t\t\t\tthis._authenticatedUser = persistedUser;\n\t\t\t\tthis.authenticator = authenticator;\n\n\t\t\t\treturn newCredentials;\n\t\t\t} )\n\t\t\t;\n\t}\n\n\tprivate authenticateWithToken( userOrCredentials:string | TokenCredentials.Class, password?:string ):Promise<TokenCredentials.Class> {\n\t\tconst authenticator:TokenAuthenticator = <TokenAuthenticator> this.authenticators[ AuthMethod.TOKEN ];\n\t\tconst tokenOrCredentials:BasicToken | TokenCredentials.Class | Error = Utils.isString( userOrCredentials ) ?\n\t\t\tnew BasicToken( userOrCredentials, password ) :\n\t\t\tTokenCredentials.Factory.hasClassProperties( userOrCredentials ) ?\n\t\t\t\tuserOrCredentials :\n\t\t\t\tnew Errors.IllegalArgumentError( \"The token credentials provided in not valid.\" );\n\n\t\tif( tokenOrCredentials instanceof Error ) return Promise.reject( tokenOrCredentials );\n\t\tthis.clearAuthentication();\n\n\t\tlet newCredentials:TokenCredentials.Class;\n\t\treturn authenticator.authenticate( tokenOrCredentials ).then( ( credentials:TokenCredentials.Class ) => {\n\t\t\tnewCredentials = credentials;\n\n\t\t\tif( PersistedUser.Factory.is( credentials.user ) ) return credentials.user;\n\t\t\treturn this.getAuthenticatedUser( authenticator );\n\t\t} ).then( ( persistedUser:PersistedUser.Class ) => {\n\t\t\tthis._authenticatedUser = persistedUser;\n\t\t\tthis.authenticator = authenticator;\n\n\t\t\tnewCredentials.user = persistedUser;\n\t\t\treturn newCredentials;\n\t\t} );\n\t}\n\n\tprivate getAuthenticatedUser( authenticator:Authenticator<object, object> ):Promise<PersistedUser.Class> {\n\t\tconst requestOptions:RequestOptions = {};\n\t\tauthenticator.addAuthentication( requestOptions );\n\n\t\treturn this.users.get( \"me/\", requestOptions );\n\t}\n\n}\n"]}