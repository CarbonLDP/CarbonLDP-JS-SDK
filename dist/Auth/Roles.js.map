{"version":3,"sources":["Auth/Roles.ts"],"names":[],"mappings":"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","file":"Roles.js","sourcesContent":["import Context from \"./../Context\";\nimport * as Errors from \"./../Errors\";\nimport * as HTTP from \"./../HTTP\";\nimport * as PersistedDocument from \"./../PersistedDocument\";\nimport * as PersistedProtectedDocument from \"./../PersistedProtectedDocument\";\nimport * as Pointer from \"./../Pointer\";\nimport * as URI from \"./../RDF/URI\";\nimport * as RetrievalPreferences from \"./../RetrievalPreferences\";\nimport * as SPARQL from \"./../SPARQL\";\nimport * as PersistedRole from \"./PersistedRole\";\nimport * as PersistedUser from \"./PersistedUser\";\nimport * as Role from \"./Role\";\nimport * as Utils from \"./../Utils\";\n\nexport class Class {\n\tprivate context:Context;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\t// TODO: Requests must return all the responses made\n\tcreateChild<T>( parentRole:string | Pointer.Class, role:T & Role.Class, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedRole.Class, HTTP.Response.Class ]>;\n\tcreateChild<T>( parentRole:string | Pointer.Class, role:T & Role.Class, slug?:string, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedRole.Class, HTTP.Response.Class ]>;\n\tcreateChild<T>( parentRole:string | Pointer.Class, role:T & Role.Class, slugOrRequestOptions?:any, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedRole.Class, HTTP.Response.Class ]> {\n\t\tlet parentURI:string = Utils.isString( parentRole ) ? <string> parentRole : ( <Pointer.Class> parentRole).id;\n\t\tlet slug:string = Utils.isString( slugOrRequestOptions ) ? slugOrRequestOptions : null;\n\t\trequestOptions = HTTP.Request.Util.isOptions( slugOrRequestOptions ) ? slugOrRequestOptions : requestOptions;\n\n\t\tlet containerURI:string;\n\t\tlet persistedRole:T & PersistedRole.Class;\n\t\tlet responseCreated:HTTP.Response.Class;\n\t\treturn Utils.promiseMethod( () => {\n\t\t\tcontainerURI = this.getContainerURI();\n\n\t\t\tparentURI = URI.Util.resolve( containerURI, parentURI );\n\t\t\tif( ! URI.Util.isBaseOf( containerURI, parentURI ) ) throw new Errors.IllegalArgumentError( \"The parent role provided is not a valid role.\" );\n\t\t\treturn this.context.documents.exists( parentURI );\n\n\t\t} ).then( ( [ exists, response ]:[ boolean, HTTP.Response.Class ] ) => {\n\t\t\tif( ! exists ) throw new Errors.IllegalArgumentError( \"The parent role provided doesn't exist.\" );\n\t\t\treturn this.context.documents.createChild<T>( containerURI, role, slug, requestOptions );\n\n\t\t} ).then( ( [ newRole, response ]:[ T & PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\tresponseCreated = response;\n\t\t\tpersistedRole = PersistedRole.Factory.decorate( newRole, this.context.documents );\n\t\t\treturn this.context.documents.addMember( parentURI, newRole );\n\n\t\t} ).then<[ T & PersistedRole.Class, HTTP.Response.Class ]>( ( response ) => {\n\t\t\treturn [ persistedRole, responseCreated ];\n\t\t} );\n\t}\n\n\tget<T>( roleURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ T & PersistedRole.Class, HTTP.Response.Class ]> {\n\t\treturn Utils.promiseMethod( () => {\n\t\t\treturn this.context.documents.get<T & PersistedRole.Class>( this.resolveURI( roleURI ), requestOptions );\n\t\t} );\n\t}\n\n\tlistUsers( this:Class, roleURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedProtectedDocument.Class[], HTTP.Response.Class ]> {\n\t\treturn this.getUsersAccessPoint( roleURI ).then( ( accessPoint:Pointer.Class ) => {\n\t\t\treturn this.context.documents.listMembers( accessPoint.id, requestOptions );\n\t\t} ).then<[ PersistedProtectedDocument.Class[], HTTP.Response.Class ]>( ( [ documents, response ]:[ PersistedDocument.Class[], HTTP.Response.Class ] ) => {\n\t\t\tconst users:PersistedProtectedDocument.Class[] = documents.map( user => PersistedProtectedDocument.Factory.decorate( user, this.context.documents ) );\n\t\t\treturn [ users, response ];\n\t\t} );\n\t}\n\n\tgetUsers<T>( roleURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedUser.Class)[], HTTP.Response.Class ]>;\n\tgetUsers<T>( roleURI:string, retrievalPreferences?:RetrievalPreferences.Class, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedUser.Class)[], HTTP.Response.Class ]>;\n\tgetUsers<T>( roleURI:string, retrievalPreferencesOrRequestOptions?:any, requestOptions?:HTTP.Request.Options ):Promise<[ (T & PersistedUser.Class)[], HTTP.Response.Class ]> {\n\t\treturn this.getUsersAccessPoint( roleURI ).then( ( accessPoint:Pointer.Class ) => {\n\t\t\treturn this.context.documents.getMembers<T & PersistedUser.Class>( accessPoint.id, retrievalPreferencesOrRequestOptions, requestOptions );\n\t\t} );\n\t}\n\n\taddUser( roleURI:string, user:Pointer.Class | string, requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class> {\n\t\treturn this.addUsers( roleURI, [ user ], requestOptions );\n\t}\n\n\taddUsers( roleURI:string, users:(Pointer.Class | string)[], requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class> {\n\t\treturn this.getUsersAccessPoint( roleURI ).then( ( accessPoint:Pointer.Class ) => {\n\t\t\treturn this.context.documents.addMembers( accessPoint.id, users, requestOptions );\n\t\t} );\n\t}\n\n\tremoveUser( roleURI:string, user:Pointer.Class | string, requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class> {\n\t\treturn this.removeUsers( roleURI, [ user ], requestOptions );\n\t}\n\n\tremoveUsers( roleURI:string, users:(Pointer.Class | string)[], requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class> {\n\t\treturn this.getUsersAccessPoint( roleURI ).then( ( accessPoint:Pointer.Class ) => {\n\t\t\treturn this.context.documents.removeMembers( accessPoint.id, users, requestOptions );\n\t\t} );\n\t}\n\n\tprivate resolveURI( relativeURI:string ):string {\n\t\tconst rolesContainer:string = this.getContainerURI();\n\t\tconst absoluteRoleURI:string = URI.Util.resolve( rolesContainer, relativeURI );\n\t\tif( ! absoluteRoleURI.startsWith( rolesContainer ) ) throw new Errors.IllegalArgumentError( `The provided URI \"${ relativeURI }\" isn't a valid Carbon LDP role.` );\n\n\t\treturn absoluteRoleURI;\n\t}\n\n\t// TODO: Optimize\n\tprivate getUsersAccessPoint( roleURI:string ):Promise<Pointer.Class> {\n\t\ttype AccessPointResult = { accessPoint:Pointer.Class };\n\n\t\treturn Utils.promiseMethod( () => {\n\t\t\tconst uri:string = this.resolveURI( roleURI );\n\t\t\treturn this.context.documents.executeSELECTQuery( uri, `PREFIX:<https://carbonldp.com/ns/v1/>SELECT DISTINCT?accessPoint{<${ uri }>:platform#accessPoint?accessPoint.?accessPoint<http://www.w3.org/ns/ldp#hasMemberRelation>:security#user}` );\n\t\t} ).then( ( [ selectResults, response ]:[ SPARQL.SELECTResults.Class<AccessPointResult>, HTTP.Response.Class ] ) => {\n\t\t\treturn <Pointer.Class> selectResults.bindings[ 0 ].accessPoint;\n\t\t} );\n\t}\n\n\tprivate getContainerURI():string {\n\t\tif( ! this.context.hasSetting( \"system.roles.container\" ) ) throw new Errors.IllegalStateError( `The \"system.roles.container\" setting hasn't been defined.` );\n\t\treturn this.context.resolveSystemURI( this.context.getSetting( \"system.roles.container\" ) );\n\t}\n\n}\n\nexport default Class;\n"]}