{"version":3,"sources":["Auth/Roles.ts"],"names":[],"mappings":"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","file":"Roles.js","sourcesContent":["import { Minus } from \"../../tests/helpers/types\";\nimport {\n\tisString,\n\tpromiseMethod,\n} from \"../Utils\";\nimport { Context } from \"../Context\";\nimport * as Errors from \"../Errors\";\nimport {\n\tRequestOptions,\n\tRequestUtils,\n} from \"../HTTP/Request\";\nimport { PersistedDocument } from \"../PersistedDocument\";\nimport { Pointer } from \"../Pointer\";\nimport { URI } from \"../RDF/URI\";\nimport {\n\tQueryDocumentBuilder,\n\tQueryDocumentsBuilder,\n} from \"./../SPARQL/QueryDocument\";\nimport { SPARQLSelectResults } from \"../SPARQL/SelectResults\";\nimport * as Utils from \"./../Utils\";\nimport * as PersistedRole from \"./PersistedRole\";\nimport { PersistedUser } from \"./PersistedUser\";\nimport * as Role from \"./Role\";\n\nexport type NewRole = Minus<Role.Class, Document.Class>;\n\nexport class Class {\n\tprivate context:Context;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\tcreateChild<T extends object>( parentRole:string | Pointer, role:T & NewRole, requestOptions?:RequestOptions ):Promise<T & PersistedRole.Class>;\n\tcreateChild<T extends object>( parentRole:string | Pointer, role:T & NewRole, slug?:string, requestOptions?:RequestOptions ):Promise<T & PersistedRole.Class>;\n\tcreateChild<T extends object>( parentRole:string | Pointer, role:T & NewRole, slugOrRequestOptions?:any, requestOptions?:RequestOptions ):Promise<T & PersistedRole.Class {\n\t\tconst slug:string = isString( slugOrRequestOptions ) ? slugOrRequestOptions : void 0;\n\t\trequestOptions = RequestUtils.isOptions( slugOrRequestOptions ) ? slugOrRequestOptions : requestOptions;\n\n\t\tlet parentURI:string = isString( parentRole ) ? parentRole : parentRole.id;\n\t\treturn promiseMethod( () => {\n\t\t\tparentURI = this.resolveURI( parentURI );\n\n\t\t\treturn this.context\n\t\t\t\t.documents\n\t\t\t\t.exists( parentURI );\n\t\t} ).then( ( exists:boolean ) => {\n\t\t\tif( ! exists ) throw new Errors.IllegalArgumentError( `The parent role \"${ parentURI }\" doesn't exists.` );\n\n\t\t\tconst container:string = this.resolveURI();\n\t\t\treturn this.context\n\t\t\t\t.documents\n\t\t\t\t.createChild<T>( container, role, slug, requestOptions );\n\t\t} ).then( ( document ) => {\n\t\t\treturn this.context\n\t\t\t\t.documents\n\t\t\t\t.addMember( parentURI, document );\n\t\t} ).then<>( () => {\n\t\t\treturn PersistedRole.Factory.decorate( role, this.context.documents );\n\t\t} );\n\t}\n\n\tget<T extends object>( roleURI:string, requestOptions?:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & PersistedRole.Class>;\n\tget<T extends object>( roleURI:string, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & PersistedRole.Class>;\n\tget<T extends object>( roleURI:string, queryBuilderFnOrOptions:any, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & PersistedRole.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst uri:string = this.resolveURI( roleURI );\n\n\t\t\treturn this.context\n\t\t\t\t.documents\n\t\t\t\t.get<T & PersistedRole.Class>( uri, queryBuilderFnOrOptions, queryBuilderFn );\n\t\t} );\n\t}\n\n\tgetUsers<T extends object>( roleURI:string, requestOptions?:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & PersistedUser.Class)[]>;\n\tgetUsers<T extends object>( roleURI:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & PersistedUser.Class)[]>;\n\tgetUsers<T extends object>( roleURI:string, queryBuilderFnOrOptions:any, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & PersistedUser.Class)[]> {\n\t\treturn this\n\t\t\t.getUsersAccessPoint( roleURI )\n\t\t\t.then( accessPoint => {\n\t\t\t\treturn this\n\t\t\t\t\t.context\n\t\t\t\t\t.documents\n\t\t\t\t\t.getMembers<T & PersistedUser.Class>( accessPoint.id, queryBuilderFnOrOptions, queryBuilderFn );\n\t\t\t} );\n\t}\n\n\taddUser( roleURI:string, user:Pointer | string, requestOptions?:RequestOptions ):Promise<void> {\n\t\treturn this.addUsers( roleURI, [ user ], requestOptions );\n\t}\n\n\taddUsers( roleURI:string, users:(Pointer | string)[], requestOptions?:RequestOptions ):Promise<void> {\n\t\treturn this\n\t\t\t.getUsersAccessPoint( roleURI )\n\t\t\t.then( accessPoint => {\n\t\t\t\treturn this\n\t\t\t\t\t.context\n\t\t\t\t\t.documents\n\t\t\t\t\t.addMembers( accessPoint.id, users, requestOptions );\n\t\t\t} );\n\t}\n\n\tremoveUser( roleURI:string, user:Pointer | string, requestOptions?:RequestOptions ):Promise<void> {\n\t\treturn this.removeUsers( roleURI, [ user ], requestOptions );\n\t}\n\n\tremoveUsers( roleURI:string, users:(Pointer | string)[], requestOptions?:RequestOptions ):Promise<void> {\n\t\treturn this\n\t\t\t.getUsersAccessPoint( roleURI )\n\t\t\t.then( ( accessPoint:Pointer ) => {\n\t\t\t\treturn this\n\t\t\t\t\t.context\n\t\t\t\t\t.documents\n\t\t\t\t\t.removeMembers( accessPoint.id, users, requestOptions );\n\t\t\t} );\n\t}\n\n\t// TODO: Optimize\n\tprivate getUsersAccessPoint( roleURI:string ):Promise<Pointer> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst uri:string = this.resolveURI( roleURI );\n\n\t\t\treturn this.context\n\t\t\t\t.documents\n\t\t\t\t.executeSELECTQuery( uri, `PREFIX:<https://carbonldp.com/ns/v1/>SELECT DISTINCT?accessPoint{<${ uri }>:platform#accessPoint?accessPoint.?accessPoint<http://www.w3.org/ns/ldp#hasMemberRelation>:security#user}` );\n\t\t} ).then( ( [ selectResults ]:[ SPARQL.SELECTResults.Class<{ accessPoint:Pointer.Class }>, HTTP.Response.Class ] ) => {\n\t\t\treturn selectResults.bindings[ 0 ].accessPoint;\n\t\t} );\n\t}\n\n\tprivate resolveURI( relativeURI?:string ):string {\n\t\tconst containerURI:string = this.context._resolvePath( \"system.security.roles\" ) );\n\n\t\tif( ! relativeURI ) return containerURI;\n\n\t\tconst absoluteURI:string = URI.Util.resolve( containerURI, relativeURI );\n\t\tif( ! absoluteURI.startsWith( containerURI ) ) throw new Errors.IllegalArgumentError( `The URI \"${ relativeURI }\" isn't a valid role URI.` );\n\n\t\treturn absoluteURI;\n\t}\n\n}\n\nexport default Class;\n"]}