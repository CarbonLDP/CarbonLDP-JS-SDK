{"version":3,"sources":["Auth/ACE.ts"],"names":[],"mappings":";;AAAA,0DAAyD;AAIzD,yCAAwC;AACxC,2CAA0C;AAuB1C,IAAM,MAAM,GAAgB;IAC3B,UAAU,EAAE;QACX,KAAK,EAAE,OAAE,CAAC,QAAQ;QAClB,OAAO,EAAE,SAAG,CAAC,OAAO;KACpB;IACD,aAAa,EAAE;QACd,KAAK,EAAE,OAAE,CAAC,UAAU;QACpB,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;IACD,UAAU,EAAE;QACX,KAAK,EAAE,OAAE,CAAC,OAAO;QACjB,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;IACD,eAAe,EAAE;QAChB,KAAK,EAAE,OAAE,CAAC,YAAY;QACtB,OAAO,EAAE,KAAK;KACd;CACD,CAAC;AAEW,QAAA,GAAG,GAAc;IAC7B,IAAI,EAAE,OAAE,CAAC,kBAAkB;IAC3B,MAAM,QAAA;IAEN,EAAE,EAAF,UAAI,MAAa;QAChB,MAAM,CAAC,qCAAiB,CAAC,EAAE,CAAE,MAAM,CAAE;eACjC,MAAM,CAAC,cAAc,CAAE,UAAU,CAAE;eACnC,MAAM,CAAC,cAAc,CAAE,aAAa,CAAE;eACtC,MAAM,CAAC,cAAc,CAAE,UAAU,CAAE;eACnC,MAAM,CAAC,cAAc,CAAE,eAAe,CAAE,CAC1C;IACH,CAAC;IAED,MAAM,EAAN,UAAQ,QAAgB,EAAE,QAAkB,EAAE,YAAoB,EAAE,WAAqB;QACxF,MAAM,CAAC,WAAG,CAAC,UAAU,CAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,CAAE,CAAC;IAC5E,CAAC;IAED,UAAU,EAAV,UAA8B,MAAQ,EAAE,QAAgB,EAAE,QAAkB,EAAE,YAAoB,EAAE,WAAqB;QACxH,IAAM,GAAG,GAAW,MAAiB,CAAC;QAEtC,qCAAiB,CAAC,QAAQ,CAAE,GAAG,CAAE,CAAC;QAElC,GAAG,CAAC,OAAO,CAAE,WAAG,CAAC,IAAI,CAAE,CAAC;QACxB,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACxB,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACxB,GAAG,CAAC,aAAa,GAAG,YAAY,CAAC;QACjC,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;QAE9B,MAAM,CAAC,GAAG,CAAC;IACZ,CAAC;CAED,CAAC","file":"ACE.js","sourcesContent":["import { TransientFragment } from \"../TransientFragment\";\nimport { ModelFactory } from \"../ModelFactory\";\nimport { ObjectSchema } from \"../ObjectSchema\";\nimport { Pointer } from \"../Pointer\";\nimport { CS } from \"../Vocabularies/CS\";\nimport { XSD } from \"../Vocabularies/XSD\";\n\nexport interface ACE extends TransientFragment {\n\tgranting:boolean;\n\tpermissions:Pointer[];\n\tsubjects:Pointer[];\n\tsubjectsClass:Pointer;\n}\n\n\nexport interface ACEFactory extends ModelFactory<ACE> {\n\tTYPE:string;\n\tSCHEMA:ObjectSchema;\n\n\tis( object:object ):object is ACE;\n\n\n\tcreate( granting:boolean, subjects:Pointer[], subjectClass:Pointer, permissions:Pointer[] ):ACE;\n\n\tcreateFrom<T extends object>( object:T, granting:boolean, subjects:Pointer[], subjectClass:Pointer, permissions:Pointer[] ):T & ACE;\n}\n\n\nconst SCHEMA:ObjectSchema = {\n\t\"granting\": {\n\t\t\"@id\": CS.granting,\n\t\t\"@type\": XSD.boolean,\n\t},\n\t\"permissions\": {\n\t\t\"@id\": CS.permission,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n\t\"subjects\": {\n\t\t\"@id\": CS.subject,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n\t\"subjectsClass\": {\n\t\t\"@id\": CS.subjectClass,\n\t\t\"@type\": \"@id\",\n\t},\n};\n\nexport const ACE:ACEFactory = {\n\tTYPE: CS.AccessControlEntry,\n\tSCHEMA,\n\n\tis( object:object ):object is ACE {\n\t\treturn TransientFragment.is( object )\n\t\t\t&& object.hasOwnProperty( \"granting\" )\n\t\t\t&& object.hasOwnProperty( \"permissions\" )\n\t\t\t&& object.hasOwnProperty( \"subjects\" )\n\t\t\t&& object.hasOwnProperty( \"subjectsClass\" )\n\t\t\t;\n\t},\n\n\tcreate( granting:boolean, subjects:Pointer[], subjectClass:Pointer, permissions:Pointer[] ):ACE {\n\t\treturn ACE.createFrom( {}, granting, subjects, subjectClass, permissions );\n\t},\n\n\tcreateFrom<T extends object>( object:T, granting:boolean, subjects:Pointer[], subjectClass:Pointer, permissions:Pointer[] ):T & ACE {\n\t\tconst ace:T & ACE = object as T & ACE;\n\n\t\tTransientFragment.decorate( ace );\n\n\t\tace.addType( ACE.TYPE );\n\t\tace.granting = granting;\n\t\tace.subjects = subjects;\n\t\tace.subjectsClass = subjectClass;\n\t\tace.permissions = permissions;\n\n\t\treturn ace;\n\t},\n\n};\n"]}