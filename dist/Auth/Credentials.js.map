{"version":3,"sources":["Auth/Credentials.ts"],"names":[],"mappings":";;;;;;;;;AAAA,sDAA0C;AAC1C,wDAA4C;AAE5C,sCAAmD;AAEtC,QAAA,SAAS,GAAU,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC;AAErC,QAAA,MAAM,GAAsB;IACxC,OAAO,EAAE;QACR,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK;QAC/B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;IACD,UAAU,EAAE;QACX,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ;QACrB,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;IACD,SAAS,EAAE;QACV,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,OAAO;QACpB,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;KAChC;IACD,MAAM,EAAE;QACP,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,aAAa;QAC1B,OAAO,EAAE,KAAK;KACd;CACD,CAAC;AAQF;IAAA;IAiBA,CAAC;IAhBO,cAAM,GAAb,UAAe,KAAY,EAAE,QAAe;QAC3C,MAAM,CAAC,OAAO,CAAC,UAAU,CAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;IAClD,CAAC;IAEM,kBAAU,GAAjB,UAAqC,MAAQ,EAAE,KAAY,EAAE,QAAe;QAC3E,IAAM,WAAW,GAAyB,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAK,MAAM,CAAE,CAAC;QAEnF,EAAE,CAAA,CAAE,CAAE,KAAM,CAAC;YAAC,MAAM,IAAI,6BAAoB,CAAE,4BAA4B,CAAE,CAAC;QAC7E,EAAE,CAAA,CAAE,CAAE,QAAS,CAAC;YAAC,MAAM,IAAI,6BAAoB,CAAE,+BAA+B,CAAE,CAAC;QAEnF,WAAW,CAAC,OAAO,CAAE,iBAAS,CAAE,CAAC;QACjC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEhC,MAAM,CAAC,WAAW,CAAC;IACpB,CAAC;IACF,cAAC;AAAD,CAjBA,AAiBC,IAAA;AAjBY,0BAAO","file":"Credentials.js","sourcesContent":["import * as Document from \"./../Document\";\nimport * as NS from \"../Vocabularies/index\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\nimport { IllegalArgumentError } from \"./../Errors\";\n\nexport const RDF_CLASS:string = NS.CS.Credentials;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"email\": {\n\t\t\"@id\": NS.VCARD.Predicate.email,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"password\": {\n\t\t\"@id\": NS.CS.password,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"enabled\": {\n\t\t\"@id\": NS.CS.enabled,\n\t\t\"@type\": NS.XSD.DataType.boolean,\n\t},\n\t\"user\": {\n\t\t\"@id\": NS.CS.credentialsOf,\n\t\t\"@type\": \"@id\",\n\t},\n};\n\nexport interface Class extends Document.Class {\n\temail:string;\n\tpassword:string;\n\tenabled?:boolean;\n}\n\nexport class Factory {\n\tstatic create( email:string, password:string ):Class {\n\t\treturn Factory.createFrom( {}, email, password );\n\t}\n\n\tstatic createFrom<T extends Object>( object:T, email:string, password:string ):T & Class {\n\t\tconst credentials:T & Class = <T & Class> Document.Factory.createFrom<T>( object );\n\n\t\tif( ! email ) throw new IllegalArgumentError( \"The email cannot be empty.\" );\n\t\tif( ! password ) throw new IllegalArgumentError( \"The password cannot be empty.\" );\n\n\t\tcredentials.addType( RDF_CLASS );\n\t\tcredentials.email = email;\n\t\tcredentials.password = password;\n\n\t\treturn credentials;\n\t}\n}\n\nexport default Class;\n"]}