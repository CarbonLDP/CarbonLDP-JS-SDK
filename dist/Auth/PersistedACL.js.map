{"version":3,"sources":["Auth/PersistedACL.ts"],"names":[],"mappings":";AAAA,IAAY,GAAG,WAAM,OAAO,CAAC,CAAA;AAG7B,IAAY,OAAO,WAAM,cAAc,CAAC,CAAA;AACxC,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAkCpC;IAAA;IAsBA,CAAC;IApBO,0BAAkB,GAAzB,UAA2B,MAAa;QACvC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,UAAU,CAAE,CACnD;IACH,CAAC;IAEM,gBAAQ,GAAf,UAAoD,QAAU;QAC7D,IAAI,GAAG,GAAmB,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;QAE3D,MAAM,CAAC,gBAAgB,CAAE,GAAG,EAAE;YAC7B,eAAe,EAAE;gBAChB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,YAAY;aACnB;SACD,CAAE,CAAC;QAEJ,MAAM,CAAC,GAAG,CAAC;IACZ,CAAC;IAEF,cAAC;AAAD,CAtBA,AAsBC,IAAA;AAtBY,eAAO,UAsBnB,CAAA;AAED,sBAAuB,OAA+B;IACrD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAE,OAAO,CAAE,GAAmB,OAAO,GAAI,IAAc,CAAC,UAAU,CAAW,OAAO,CAAE,CAAC;AACjH,CAAC","file":"Auth/PersistedACL.js","sourcesContent":["import * as ACL from \"./ACL\";\nimport * as PersistedACE from \"./PersistedACE\";\nimport * as PersistedDocument from \"./../PersistedDocument\";\nimport * as Pointer from \"./../Pointer\";\nimport * as Utils from \"./../Utils\";\n\nexport interface Class extends PersistedDocument.Class {\n\taccessTo:Pointer.Class;\n\tentries?:PersistedACE.Class[];\n\tinheritableEntries?:PersistedACE.Class[];\n\n\t_parsePointer( element:string | Pointer.Class ):Pointer.Class;\n\n\tgrant( subject:string | Pointer.Class, subjectClass:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tgrant( subject:string | Pointer.Class, subjectClass:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n\tgrant( subjects:(string | Pointer.Class)[], subjectClass:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tgrant( subjects:(string | Pointer.Class)[], subjectClass:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n\n\tdeny( subject:string | Pointer.Class, subjectClass:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tdeny( subject:string | Pointer.Class, subjectClass:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n\tdeny( subjects:(string | Pointer.Class)[], subjectClass:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tdeny( subjects:(string | Pointer.Class)[], subjectClass:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n\n\tconfigureChildInheritance( granting:boolean, subject:string | Pointer.Class, subjectClass:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tconfigureChildInheritance( granting:boolean, subject:string | Pointer.Class, subjectClass:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n\tconfigureChildInheritance( granting:boolean, subjects:(string | Pointer.Class)[], subjectClass:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tconfigureChildInheritance( granting:boolean, subjects:(string | Pointer.Class)[], subjectClass:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n\n\tgrants( subject:string | Pointer.Class, permission:string | Pointer.Class ):boolean;\n\tdenies( subject:string | Pointer.Class, permission:string | Pointer.Class ):boolean;\n\tgetChildInheritance( subject:string | Pointer.Class, permissions:string | Pointer.Class ):boolean;\n\n\tremove( subject:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tremove( subject:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n\tremoveChildInheritance( subject:string | Pointer.Class, permission:string | Pointer.Class ):void;\n\tremoveChildInheritance( subject:string | Pointer.Class, permissions:(string | Pointer.Class)[] ):void;\n}\n\nexport class Factory {\n\n\tstatic hasClassProperties( object:Object ):boolean {\n\t\treturn Utils.hasPropertyDefined( object, \"accessTo\" )\n\t\t\t;\n\t}\n\n\tstatic decorate<T extends PersistedDocument.Class>( document:T ):T & Class {\n\t\tlet acl:T & Class = <any> ACL.Factory.decorate( document );\n\n\t\tObject.defineProperties( acl, {\n\t\t\t\"_parsePointer\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: parsePointer,\n\t\t\t},\n\t\t} );\n\n\t\treturn acl;\n\t}\n\n}\n\nfunction parsePointer( element: string | Pointer.Class ):Pointer.Class {\n\treturn Pointer.Factory.is( element ) ? <Pointer.Class> element : (this as Class).getPointer( <string> element );\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}