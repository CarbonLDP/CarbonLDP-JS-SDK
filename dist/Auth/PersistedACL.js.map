{"version":3,"sources":["Auth/PersistedACL.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wCAAuC;AAEvC,8CAAkC;AAClC,6BAA4B;AA4Df,QAAA,YAAY,GAAuB;IAC/C,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,UAAU,CAAE;eACjD,MAAM,CAAE,eAAe,CAAE,KAAK,YAAY,CAC5C;IACH,CAAC;IAED,QAAQ,EAAR,UAA4B,MAAQ,EAAE,SAAmB;QACxD,EAAE,CAAA,CAAE,oBAAY,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAEvD,SAAG,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QACvB,mBAAQ,CAAC,QAAQ,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEvC,IAAM,GAAG,GAAoB,MAA0B,CAAC;QACxD,MAAM,CAAC,gBAAgB,CAAE,GAAG,EAAE;YAC7B,eAAe,EAAE;gBAChB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,YAAY;aACnB;SACD,CAAE,CAAC;QAIJ,IAAI,gBAAgB,GAAgC,UAAE,GAAG;YACxD,EAAE,CAAA,CAAE,CAAE,GAAG,CAAC,QAAS,CAAC;gBAAC,GAAG,CAAC,eAAe,CAAE,GAAG,CAAE,CAAC;YAChD,MAAM,CAAC,CAAE,CAAE,GAAG,CAAC,QAAQ,CAAC;QACzB,CAAC,CAAC;QACF,EAAE,CAAA,CAAE,GAAG,CAAC,OAAQ,CAAC;YAAC,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAE,gBAAgB,CAAE,CAAC;QACvE,EAAE,CAAA,CAAE,GAAG,CAAC,kBAAmB,CAAC;YAAC,GAAG,CAAC,kBAAkB,GAAG,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAE,gBAAgB,CAAE,CAAC;QAGxG,MAAM,CAAC,GAAG,CAAC;IACZ,CAAC;CACD,CAAC;AAEF,sBAA0C,OAAwB;IACjE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;AACzE,CAAC","file":"PersistedACL.js","sourcesContent":["import { Document } from \"../Document\";\nimport { Pointer } from \"../Pointer\";\nimport * as Utils from \"../Utils\";\nimport { ACL } from \"./ACL\";\nimport { PersistedACE } from \"./PersistedACE\";\nimport { ModelDecorator } from \"../ModelDecorator\";\nimport { Documents } from \"../Documents\";\n\nexport interface PersistedACL extends Document {\n\taccessTo:Pointer;\n\tentries?:PersistedACE[];\n\tinheritableEntries?:PersistedACE[];\n\n\t_parsePointer( element:string | Pointer ):Pointer;\n\n\tgrant( subject:string | Pointer, subjectClass:string | Pointer, permission:string | Pointer ):void;\n\n\tgrant( subject:string | Pointer, subjectClass:string | Pointer, permissions:(string | Pointer)[] ):void;\n\n\tgrant( subjects:(string | Pointer)[], subjectClass:string | Pointer, permission:string | Pointer ):void;\n\n\tgrant( subjects:(string | Pointer)[], subjectClass:string | Pointer, permissions:(string | Pointer)[] ):void;\n\n\tdeny( subject:string | Pointer, subjectClass:string | Pointer, permission:string | Pointer ):void;\n\n\tdeny( subject:string | Pointer, subjectClass:string | Pointer, permissions:(string | Pointer)[] ):void;\n\n\tdeny( subjects:(string | Pointer)[], subjectClass:string | Pointer, permission:string | Pointer ):void;\n\n\tdeny( subjects:(string | Pointer)[], subjectClass:string | Pointer, permissions:(string | Pointer)[] ):void;\n\n\tconfigureChildInheritance( granting:boolean, subject:string | Pointer, subjectClass:string | Pointer, permission:string | Pointer ):void;\n\n\tconfigureChildInheritance( granting:boolean, subject:string | Pointer, subjectClass:string | Pointer, permissions:(string | Pointer)[] ):void;\n\n\tconfigureChildInheritance( granting:boolean, subjects:(string | Pointer)[], subjectClass:string | Pointer, permission:string | Pointer ):void;\n\n\tconfigureChildInheritance( granting:boolean, subjects:(string | Pointer)[], subjectClass:string | Pointer, permissions:(string | Pointer)[] ):void;\n\n\tgrants( subject:string | Pointer, permission:string | Pointer ):boolean;\n\n\tdenies( subject:string | Pointer, permission:string | Pointer ):boolean;\n\n\tgetChildInheritance( subject:string | Pointer, permissions:string | Pointer ):boolean;\n\n\tremove( subject:string | Pointer, permission:string | Pointer ):void;\n\n\tremove( subject:string | Pointer, permissions:(string | Pointer)[] ):void;\n\n\tremoveChildInheritance( subject:string | Pointer, permission:string | Pointer ):void;\n\n\tremoveChildInheritance( subject:string | Pointer, permissions:(string | Pointer)[] ):void;\n}\n\n\nexport interface PersistedACLFactory extends ModelDecorator<PersistedACL> {\n\tisDecorated( object:object ):object is PersistedACL;\n\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & PersistedACL;\n}\n\n\nexport const PersistedACL:PersistedACLFactory = {\n\tisDecorated( object:object ):object is PersistedACL {\n\t\treturn Utils.hasPropertyDefined( object, \"accessTo\" )\n\t\t\t&& object[ \"_parsePointer\" ] === parsePointer\n\t\t\t;\n\t},\n\n\tdecorate<T extends object>( object:T, documents:Documents ):T & PersistedACL {\n\t\tif( PersistedACL.isDecorated( object ) ) return object;\n\n\t\tACL.decorate( object );\n\t\tDocument.decorate( object, documents );\n\n\t\tconst acl:T & PersistedACL = object as T & PersistedACL;\n\t\tObject.defineProperties( acl, {\n\t\t\t\"_parsePointer\": {\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: parsePointer,\n\t\t\t},\n\t\t} );\n\n\t\t// Check consistency in ACE\n\t\t// TODO: Possible removal when resolved: CarbonLDP/public-carbonldp-platform#2\n\t\tlet removeInvalidACE:( ace:PersistedACE ) => void = ( ace ) => {\n\t\t\tif( ! ace.subjects ) acl._removeFragment( ace );\n\t\t\treturn ! ! ace.subjects;\n\t\t};\n\t\tif( acl.entries ) acl.entries = acl.entries.filter( removeInvalidACE );\n\t\tif( acl.inheritableEntries ) acl.inheritableEntries = acl.inheritableEntries.filter( removeInvalidACE );\n\n\n\t\treturn acl;\n\t},\n};\n\nfunction parsePointer( this:PersistedACL, element:string | Pointer ):Pointer {\n\treturn Utils.isObject( element ) ? element : this.getPointer( element );\n}\n"]}