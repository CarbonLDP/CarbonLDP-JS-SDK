{"version":3,"sources":["Auth/UsernameAndPasswordCredentials.ts"],"names":[],"mappings":";;AAAA,sCAAmD;AACnD,4DAA8D;AAC9D,4BAA8B;AAGjB,QAAA,SAAS,GAAU,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,8BAA8B,CAAC;AAE9D,QAAA,MAAM,GAAsB;IACxC,UAAU,EAAE;QACX,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ;QAC/B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;IACD,UAAU,EAAE;QACX,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ;QAC/B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;CACD,CAAC;AAOF;IAAA;IAiBA,CAAC;IAhBO,cAAM,GAAb,UAAe,QAAe,EAAE,QAAe;QAC9C,MAAM,CAAC,OAAO,CAAC,UAAU,CAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;IACrD,CAAC;IAEM,kBAAU,GAAjB,UAAqC,MAAQ,EAAE,QAAe,EAAE,QAAe;QAC9E,IAAM,WAAW,GAA8B,gBAAgB,CAAC,OAAO,CAAC,UAAU,CAAK,MAAM,CAAE,CAAC;QAEhG,EAAE,CAAA,CAAE,CAAE,QAAS,CAAC;YAAC,MAAM,IAAI,6BAAoB,CAAE,2CAA2C,CAAE,CAAC;QAC/F,EAAE,CAAA,CAAE,CAAE,QAAS,CAAC;YAAC,MAAM,IAAI,6BAAoB,CAAE,2CAA2C,CAAE,CAAC;QAE/F,WAAW,CAAC,OAAO,CAAE,iBAAS,CAAE,CAAC;QACjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAE,WAAW,EAAE;YAClC,QAAQ,UAAA;YACR,QAAQ,UAAA;SACR,CAAE,CAAC;IACL,CAAC;IACF,cAAC;AAAD,CAjBA,AAiBC,IAAA;AAjBY,0BAAO","file":"UsernameAndPasswordCredentials.js","sourcesContent":["import { IllegalArgumentError } from \"./../Errors\";\nimport * as VolatileResource from \"./../LDP/VolatileResource\";\nimport * as NS from \"./../NS\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\n\nexport const RDF_CLASS:string = NS.CS.Class.UsernameAndPasswordCredentials;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"username\": {\n\t\t\"@id\": NS.CS.Predicate.username,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"password\": {\n\t\t\"@id\": NS.CS.Predicate.password,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n};\n\nexport interface Class extends VolatileResource.Class {\n\tusername:string;\n\tpassword:string;\n}\n\nexport class Factory {\n\tstatic create( username:string, password:string ):Class {\n\t\treturn Factory.createFrom( {}, username, password );\n\t}\n\n\tstatic createFrom<T extends object>( object:T, username:string, password:string ):T & Class {\n\t\tconst credentials:T & VolatileResource.Class = VolatileResource.Factory.createFrom<T>( object );\n\n\t\tif( ! username ) throw new IllegalArgumentError( \"The credentials username cannot be empty.\" );\n\t\tif( ! password ) throw new IllegalArgumentError( \"The credentials password cannot be empty.\" );\n\n\t\tcredentials.addType( RDF_CLASS );\n\t\treturn Object.assign( credentials, {\n\t\t\tusername,\n\t\t\tpassword,\n\t\t} );\n\t}\n}\n\nexport default Class;\n"]}