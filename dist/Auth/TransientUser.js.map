{"version":3,"sources":["Auth/TransientUser.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,0DAAyD;AAGzD,kCAGkB;AAClB,yCAAwC;AACxC,2CAA0C;AAC1C,mFAAkF;AAiClF,IAAM,MAAM,GAAgB;IAC3B,MAAM,EAAE;QACP,KAAK,EAAE,OAAE,CAAC,IAAI;QACd,OAAO,EAAE,SAAG,CAAC,MAAM;KACnB;IACD,aAAa,EAAE;QACd,KAAK,EAAE,OAAE,CAAC,WAAW;QACrB,OAAO,EAAE,KAAK;KACd;CACD,CAAC;AAEW,QAAA,aAAa,GAAwB;IACjD,IAAI,EAAE,OAAE,CAAC,IAAI;IACb,MAAM,QAAA;IAGN,WAAW,EAAX,UAAa,MAAa;QACzB,MAAM,CAAC,gBAAQ,CAAE,MAAM,CAAE;eACrB,mBAAW,CAAE,MAAM,EAAE,mBAAmB,CAAE,CAC5C;IACH,CAAC;IAED,EAAE,EAAF,UAAI,KAAS;QACZ,MAAM,CAAC,qCAAiB,CAAC,EAAE,CAAE,KAAK,CAAE;eAChC,qBAAa,CAAC,WAAW,CAAE,KAAK,CAAE,CACpC;IACH,CAAC;IAGD,QAAQ,EAAR,UAA4B,MAAQ;QACnC,EAAE,CAAA,CAAE,qBAAa,CAAC,WAAW,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAExD,qCAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAErC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAE,MAAM,EAAE;YACvC,mBAAmB,EAAE;gBACpB,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,iBAAiB;aACxB;SACD,CAAE,CAAC;IACL,CAAC;IAED,MAAM,EAAN,UAAQ,IAAa;QACpB,MAAM,CAAC,qBAAa,CAAC,UAAU,cAAO,IAAI,EAAI,CAAC;IAChD,CAAC;IAED,UAAU,EAAV,UAAgC,MAAQ;QACvC,IAAM,IAAI,GAAqB,qBAAa,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,OAAO,CAAE,qBAAa,CAAC,IAAI,CAAE,CAAC;QAEnC,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;CACD,CAAC;AAEF,2BAAgD,QAAgB,EAAE,QAAgB;IACjF,IAAM,WAAW,GAAkC,+DAA8B;SAC/E,UAAU,CAAE,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAE,CAAE,CAAC;IAEvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAE,WAAW,CAAE,CAAC;IACtD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;AACzB,CAAC","file":"TransientUser.js","sourcesContent":["import { TransientDocument } from \"../TransientDocument\";\nimport { TransientFragment } from \"../TransientFragment\";\nimport { ObjectSchema } from \"../ObjectSchema\";\nimport {\n\thasFunction,\n\tisObject,\n} from \"../Utils\";\nimport { CS } from \"../Vocabularies/CS\";\nimport { XSD } from \"../Vocabularies/XSD\";\nimport { UsernameAndPasswordCredentials } from \"./UsernameAndPasswordCredentials\";\n\n\nexport interface UserBase {\n\tname?:string;\n\tcredentials:UsernameAndPasswordCredentials;\n}\n\nexport interface TransientUser extends TransientDocument {\n\tname?:string;\n\tcredentials?:TransientFragment & UsernameAndPasswordCredentials;\n\n\tupdateCredentials( username?:string, password?:string ):TransientFragment & UsernameAndPasswordCredentials;\n}\n\n\nexport interface TransientUserFactory {\n\tTYPE:CS[ \"User\" ];\n\tSCHEMA:ObjectSchema;\n\n\n\tisDecorated( object:object ):object is TransientUser;\n\n\tis( value:any ):value is TransientUser;\n\n\n\tdecorate<T extends object>( object:T ):T & TransientUser;\n\n\tcreate( data:UserBase ):TransientUser;\n\n\tcreateFrom<T extends UserBase>( object:T ):T & TransientUser;\n}\n\nconst SCHEMA:ObjectSchema = {\n\t\"name\": {\n\t\t\"@id\": CS.name,\n\t\t\"@type\": XSD.string,\n\t},\n\t\"credentials\": {\n\t\t\"@id\": CS.credentials,\n\t\t\"@type\": \"@id\",\n\t},\n};\n\nexport const TransientUser:TransientUserFactory = {\n\tTYPE: CS.User,\n\tSCHEMA,\n\n\n\tisDecorated( object:object ):object is TransientUser {\n\t\treturn isObject( object )\n\t\t\t&& hasFunction( object, \"updateCredentials\" )\n\t\t\t;\n\t},\n\n\tis( value:any ):value is TransientUser {\n\t\treturn TransientDocument.is( value )\n\t\t\t&& TransientUser.isDecorated( value )\n\t\t\t;\n\t},\n\n\n\tdecorate<T extends object>( object:T ):T & TransientUser {\n\t\tif( TransientUser.isDecorated( object ) ) return object;\n\n\t\tTransientDocument.decorate( object );\n\n\t\treturn Object.defineProperties( object, {\n\t\t\t\"updateCredentials\": {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: updateCredentials,\n\t\t\t},\n\t\t} );\n\t},\n\n\tcreate( data:UserBase ):TransientUser {\n\t\treturn TransientUser.createFrom( { ...data } );\n\t},\n\n\tcreateFrom<T extends UserBase>( object:T ):T & TransientUser {\n\t\tconst user:T & TransientUser = TransientUser.decorate( object );\n\t\tuser._normalize();\n\n\t\tuser.addType( TransientUser.TYPE );\n\n\t\treturn user;\n\t},\n};\n\nfunction updateCredentials( this:TransientUser, username?:string, password?:string ):UsernameAndPasswordCredentials {\n\tconst credentials:UsernameAndPasswordCredentials = UsernameAndPasswordCredentials\n\t\t.createFrom( { username, password } );\n\n\tthis.credentials = this.createFragment( credentials );\n\treturn this.credentials;\n}\n"]}