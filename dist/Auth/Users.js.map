{"version":3,"sources":["Auth/Users.ts"],"names":[],"mappings":"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","file":"Users.js","sourcesContent":["import { promiseMethod } from \"../Utils\";\nimport { Context } from \"../Context\";\nimport * as Errors from \"../Errors\";\nimport { RequestOptions } from \"../HTTP/Request\";\nimport { Pointer } from \"../Pointer\";\nimport { URI } from \"../RDF/URI\";\nimport { QueryDocumentBuilder } from \"./../SPARQL/QueryDocument\";\nimport * as PersistedUser from \"./PersistedUser\";\nimport * as User from \"./User\";\n\nexport class Class {\n\tprivate context:Context;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\tregister( email:string, password:string, disabled?:boolean ):Promise<PersistedUser.Class> {\n\t\treturn this.registerWith( {}, email, password, disabled );\n\t}\n\n\tregisterWith<T extends object>( userObject:T, email:string, password:string, disabled?:boolean ):Promise<T & PersistedUser.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst requestUser:T & User.Class = User.Factory.createFrom( userObject, disabled );\n\t\t\trequestUser.setCredentials( email, password );\n\n\t\t\tconst containerURI:string = this.resolveURI();\n\t\t\treturn this\n\t\t\t\t.context\n\t\t\t\t.documents\n\t\t\t\t.createChildAndRetrieve<any>( containerURI, requestUser )\n\t\t\t\t;\n\t\t} );\n\t}\n\n\tget<T extends object>( userURI:string, requestOptions?:HTTP.Request.Options, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & PersistedUser.Class>;\n\tget<T extends object>( userURI:string, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & PersistedUser.Class>;\n\tget<T extends object>( userURI:string, queryBuilderFnOrOptions:any, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & PersistedUser.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst uri:string = this.resolveURI( userURI );\n\n\t\t\treturn this\n\t\t\t\t.context\n\t\t\t\t.documents\n\t\t\t\t.get<T & PersistedUser.Class>( uri, queryBuilderFnOrOptions, queryBuilderFn );\n\t\t} );\n\t}\n\n\tenable( userURI:string, requestOptions?:RequestOptions ):Promise<PersistedUser.Class> {\n\t\treturn this\n\t\t\t.getPersistedUser( userURI )\n\t\t\t.then( persistedUser => {\n\t\t\t\treturn persistedUser.enable( requestOptions );\n\t\t\t} );\n\t}\n\n\tdisable( userURI:string, requestOptions?:RequestOptions ):Promise<PersistedUser.Class> {\n\t\treturn this\n\t\t\t.getPersistedUser( userURI )\n\t\t\t.then( persistedUser => {\n\t\t\t\treturn persistedUser.disable( requestOptions );\n\t\t\t} );\n\t}\n\n\tdelete( userURI:string, requestOptions?:RequestOptions ):Promise<void> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst uri:string = this.resolveURI( userURI );\n\n\t\t\treturn this\n\t\t\t\t.context\n\t\t\t\t.documents\n\t\t\t\t.delete( uri, requestOptions );\n\t\t} );\n\t}\n\n\tprivate getPersistedUser( userURI:string ):Promise<PersistedUser.Class> {\n\t\treturn promiseMethod( () => {\n\t\t\tconst userID:string = this.resolveURI( userURI );\n\t\t\tconst userPointer:Pointer = this.context.documents.getPointer( userID );\n\t\t\treturn PersistedUser.Factory.decorate( userPointer, this.context.documents );\n\t\t} );\n\t}\n\n\tprivate resolveURI( relativeURI?:string ):string {\n\t\tconst usersContainer:string = this.context.resolve( this.getContainerURI() );\n\n\t\tif( ! relativeURI ) return usersContainer;\n\n\t\tconst absoluteRoleURI:string = URI.resolve( usersContainer, relativeURI );\n\t\tif( ! absoluteRoleURI.startsWith( usersContainer ) ) throw new Errors.IllegalArgumentError( `The URI \"${ relativeURI }\" isn't a valid user URI.` );\n\n\t\treturn absoluteRoleURI;\n\t}\n\n\tprivate getContainerURI():string {\n\t\treturn this.context._resolvePath( \"users\" );\n\t}\n\n}\n\nexport default Class;\n"]}