{"version":3,"sources":["Auth/Users.ts"],"names":[],"mappings":"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","file":"Users.js","sourcesContent":["import * as User from \"./User\";\nimport Context from \"./../Context\";\nimport * as Errors from \"./../Errors\";\nimport * as HTTP from \"./../HTTP\";\nimport * as PersistedUser from \"./PersistedUser\";\nimport * as PersistedProtectedDocument from \"./../PersistedProtectedDocument\";\nimport * as URI from \"./../RDF/URI\";\n\nexport class Class {\n\tprivate context:Context;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\tregister( userDocument:User.Class, slug:string = null ):Promise<[ PersistedProtectedDocument.Class, HTTP.Response.Class ]> {\n\t\treturn this.resolveURI( \"\" ).then( ( containerURI:string ) => {\n\t\t\tif( ! User.Factory.is( userDocument ) ) throw new Errors.IllegalArgumentError( \"The Document is not a cs:User object.\" );\n\n\t\t\treturn this.context.documents.createChild( containerURI, userDocument, slug );\n\t\t} );\n\t}\n\n\tget( userURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedUser.Class, HTTP.Response.Class ]> {\n\t\treturn this.resolveURI( userURI ).then( ( uri:string ) => {\n\t\t\treturn this.context.documents.get( uri, requestOptions );\n\t\t} );\n\t}\n\n\tenable( userURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedUser.Class, [ HTTP.Response.Class, HTTP.Response.Class ] ]> {\n\t\treturn this.changeEnabledStatus( userURI, true, requestOptions );\n\t}\n\n\tdisable( userURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedUser.Class, [ HTTP.Response.Class, HTTP.Response.Class ] ]> {\n\t\treturn this.changeEnabledStatus( userURI, false, requestOptions );\n\t}\n\n\tdelete( userURI:string, requestOptions?:HTTP.Request.Options ):Promise<HTTP.Response.Class> {\n\t\treturn this.resolveURI( userURI ).then( uri => {\n\t\t\treturn this.context.documents.delete( uri, requestOptions );\n\t\t} );\n\t}\n\n\tprivate changeEnabledStatus( userURI:string, value:boolean, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedUser.Class, [ HTTP.Response.Class, HTTP.Response.Class ] ]> {\n\t\tlet getResponse:HTTP.Response.Class;\n\t\treturn this.get( userURI, requestOptions ).then( ( [ user, response ]:[ PersistedUser.Class, HTTP.Response.Class ] ) => {\n\t\t\tgetResponse = response;\n\t\t\tuser.enabled = value;\n\t\t\treturn user.save();\n\t\t} ).then( ( [ user, response ]:[ PersistedUser.Class, HTTP.Response.Class ] ) => {\n\t\t\treturn [ user, [ getResponse, response ] ];\n\t\t} );\n\t}\n\n\tprivate resolveURI( userURI:string ):Promise<string> {\n\t\treturn new Promise<string>( ( resolve:( uri:string ) => void ) => {\n\t\t\tlet containerURI:string = this.context.resolve( this.getContainerURI() );\n\t\t\tlet uri:string = URI.Util.resolve( containerURI, userURI );\n\n\t\t\tif( ! URI.Util.isBaseOf( containerURI, uri ) ) throw new Errors.IllegalArgumentError( \"The URI provided is not a valid user of the current context.\" );\n\n\t\t\tresolve( uri );\n\t\t} );\n\t}\n\n\tprivate getContainerURI():string {\n\t\tif( ! this.context.hasSetting( \"system.users.container\" ) ) throw new Errors.IllegalStateError( \"The users container URI hasn't been set.\" );\n\t\treturn this.context.getSetting( \"system.users.container\" );\n\t}\n}\n\nexport default Class;\n"]}