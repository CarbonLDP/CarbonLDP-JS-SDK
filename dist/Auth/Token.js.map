{"version":3,"sources":["Auth/Token.ts"],"names":[],"mappings":";AAAA,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAE9B,IAAY,OAAO,WAAM,cAAc,CAAC,CAAA;AAGxC,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEvB,iBAAS,GAAU,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AAErC,eAAO,GAAsB;IACzC,KAAK,EAAE;QACN,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ;QAC/B,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;KAC/B;IACD,gBAAgB,EAAE;QACjB,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,cAAc;QACrC,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ;KACjC;CACD,CAAC;AAOF;IAAA;IAmCA,CAAC;IAlCO,UAAE,GAAT,UAAW,KAAS;QACnB,MAAM,CAAC,CACN,KAAK,CAAC,QAAQ,CAAE,KAAK,CAAE;YACvB,OAAO,CAAC,kBAAkB,CAAE,KAAK,CAAE,CACnC,CAAC;IACH,CAAC;IAEM,0BAAkB,GAAzB,UAA2B,MAAa;QACvC,MAAM,CAAC,CACN,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,KAAK,CAAE;YACzC,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,gBAAgB,CAAE,CACpD,CAAC;IACH,CAAC;IAEM,gBAAQ,GAAf,UAAmC,MAAQ;QAC1C,EAAE,CAAA,CAAE,IAAI,CAAC,kBAAkB,CAAE,MAAM,CAAG,CAAC;YAAC,MAAM,CAAO,MAAM,CAAC;QAE5D,MAAM,CAAO,MAAM,CAAC;IACrB,CAAC;IAIM,mBAAW,GAAlB,UAAoB,uBAA8B;QACjD,IAAI,KAAK,GAAY,EAAE,CAAC;QACxB,EAAE,CAAA,CAAE,OAAO,IAAI,uBAAwB,CAAC,CAAC,CAAC;YACzC,KAAK,GAAG,uBAAuB,CAAE,OAAO,CAAE,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAA,CAAE,OAAO,IAAI,uBAAwB,CAAC,CAAC,CAAC;YAEhD,IAAI,QAAQ,GAAoC,uBAAuB,CAAC;YACxE,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;QAC/C,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,iBAAS,CAAE,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IACF,cAAC;AAAD,CAnCA,AAmCC,IAAA;AAnCY,eAAO,UAmCnB,CAAA","file":"Auth/Token.js","sourcesContent":["import * as NS from \"./../NS\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\nimport * as Pointer from \"./../Pointer\";\nimport * as RDF from \"./../RDF\";\nimport SDKContext from \"./../SDKContext\";\nimport * as Utils from \"./../Utils\";\n\nexport const RDF_CLASS:string = NS.CS.Class.Token;\n\nexport const CONTEXT:ObjectSchema.Class = {\n\t\"key\": {\n\t\t\"@id\": NS.CS.Predicate.tokenKey,\n\t\t\"@type\": NS.XSD.DataType.string,\n\t},\n\t\"expirationTime\": {\n\t\t\"@id\": NS.CS.Predicate.expirationTime,\n\t\t\"@type\": NS.XSD.DataType.dateTime,\n\t},\n};\n\nexport interface Class {\n\tkey:string;\n\texpirationTime:Date;\n}\n\nexport class Factory {\n\tstatic is( value:any ):boolean {\n\t\treturn (\n\t\t\tUtils.isObject( value ) &&\n\t\t\tFactory.hasClassProperties( value )\n\t\t);\n\t}\n\n\tstatic hasClassProperties( object:Object ):boolean {\n\t\treturn (\n\t\t\tUtils.hasPropertyDefined( object, \"key\" ) &&\n\t\t\tUtils.hasPropertyDefined( object, \"expirationTime\" )\n\t\t);\n\t}\n\n\tstatic decorate<T extends Object>( object:T ):T & Class {\n\t\tif( this.hasClassProperties( object ) ) return <any> object;\n\n\t\treturn <any> object;\n\t}\n\n\tstatic hasRDFClass( pointer:Pointer.Class ):boolean;\n\tstatic hasRDFClass( expandedObject:Object ):boolean;\n\tstatic hasRDFClass( pointerOrExpandedObject:Object ):boolean {\n\t\tlet types:string[] = [];\n\t\tif( \"@type\" in pointerOrExpandedObject ) {\n\t\t\ttypes = pointerOrExpandedObject[ \"@type\" ];\n\t\t} else if( \"types\" in pointerOrExpandedObject ) {\n\t\t\t// TODO: Use proper class\n\t\t\tlet resource:{ types: Pointer.Class[] } = <any> pointerOrExpandedObject;\n\t\t\ttypes = Pointer.Util.getIDs( resource.types );\n\t\t}\n\n\t\treturn types.indexOf( RDF_CLASS ) !== -1;\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}