{"version":3,"sources":["Auth/ACL.ts"],"names":[],"mappings":";AAEA,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAI9B,IAAY,KAAK,WAAM,YAAY,CAAC,CAAA;AAEvB,iBAAS,GAAU,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC;AAEjD,cAAM,GAAsB;IACxC,SAAS,EAAE;QACV,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,kBAAkB;QACzC,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;IACD,UAAU,EAAE;QACX,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ;QAC/B,OAAO,EAAE,KAAK;KACd;IACD,oBAAoB,EAAE;QACrB,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,gBAAgB;QACvC,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;CACD,CAAC;AAQF;IAAA;IAcA,CAAC;IAZO,0BAAkB,GAAzB,UAA2B,MAAa;QACvC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,UAAU,CAAE,CAAC;IACvD,CAAC;IAEM,gBAAQ,GAAf,UAAmC,MAAQ;QAC1C,IAAI,GAAG,GAAmB,MAAM,CAAC;QAEjC,EAAE,CAAA,CAAE,OAAO,CAAC,kBAAkB,CAAE,GAAG,CAAG,CAAC;YAAC,MAAM,CAAC,GAAG,CAAC;QAEnD,MAAM,CAAC,GAAG,CAAC;IACZ,CAAC;IAEF,cAAC;AAAD,CAdA,AAcC,IAAA;AAdY,eAAO,UAcnB,CAAA","file":"Auth/ACL.js","sourcesContent":["import * as ACE from \"./ACE\";\nimport IllegalArgumentError from \"../Errors/IllegalArgumentError\";\nimport * as NS from \"./../NS\";\nimport * as ObjectSchema from \"./../ObjectSchema\";\nimport * as Document from \"./../Document\";\nimport * as Pointer from \"./../Pointer\";\nimport * as Utils from \"./../Utils\";\n\nexport const RDF_CLASS:string = NS.CS.Class.AccessControlList;\n\nexport const SCHEMA:ObjectSchema.Class = {\n\t\"entries\": {\n\t\t\"@id\": NS.CS.Predicate.accessControlEntry,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n\t\"accessTo\": {\n\t\t\"@id\": NS.CS.Predicate.accessTo,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"inheritableEntries\": {\n\t\t\"@id\": NS.CS.Predicate.inheritableEntry,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n};\n\nexport interface Class extends Document.Class {\n\taccessTo:Pointer.Class;\n\tentries?:ACE.Class[];\n\tinheritableEntries?:ACE.Class[];\n}\n\nexport class Factory {\n\n\tstatic hasClassProperties( object:Object ):boolean {\n\t\treturn Utils.hasPropertyDefined( object, \"accessTo\" );\n\t}\n\n\tstatic decorate<T extends Object>( object:T ):T & Class {\n\t\tlet acl:T & Class = <any> object;\n\n\t\tif( Factory.hasClassProperties( acl ) ) return acl;\n\n\t\treturn acl;\n\t}\n\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}