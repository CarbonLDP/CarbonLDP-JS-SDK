{"version":3,"sources":["Auth/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as ACE from \"./ACE\";\nimport * as ACL from \"./ACL\";\nimport Authenticator from \"./Authenticator\";\nimport BasicAuthenticator from \"./BasicAuthenticator\";\nimport * as Credentials from \"./Credentials\";\nimport * as PersistedACE from \"./PersistedACE\";\nimport * as PersistedACL from \"./PersistedACL\";\nimport * as PersistedCredentials from \"./PersistedCredentials\";\nimport * as PersistedRole from \"./PersistedRole\";\nimport * as PersistedUser from \"./PersistedUser\";\nimport * as Role from \"./Role\";\nimport * as Roles from \"./Roles\";\nimport * as Ticket from \"./Ticket\";\nimport * as Token from \"./Token\";\nimport TokenAuthenticator from \"./TokenAuthenticator\";\nimport * as User from \"./User\";\nimport UsernameAndPasswordCredentials from \"./UsernameAndPasswordCredentials\";\nimport UsernameAndPasswordToken from \"./UsernameAndPasswordToken\";\nimport * as Users from \"./Users\";\nimport { Context } from \"../Context\";\nimport * as Errors from \"../Errors\";\nimport { FreeResources } from \"../FreeResources\";\nimport { BadResponseError } from \"../HTTP/Errors\";\nimport {\n\tRequestOptions,\n\tRequestService,\n\tRequestUtils,\n} from \"../HTTP/Request\";\nimport { Response } from \"../HTTP/Response\";\nimport { JSONLDParser } from \"../JSONLD/Parser\";\nimport * as ObjectSchema from \"../ObjectSchema\";\nimport { RDFNode } from \"../RDF/Node\";\nimport { URI } from \"../RDF/URI\";\nimport { Resource } from \"../Resource\";\nimport * as Utils from \"../Utils\";\nimport { LDP } from \"../Vocabularies/LDP\";\n\nexport {\n\tACE,\n\tACL,\n\tUser,\n\tUsers,\n\tAuthenticator,\n\tBasicAuthenticator,\n\tCredentials,\n\tPersistedACE,\n\tPersistedACL,\n\tPersistedCredentials,\n\tPersistedRole,\n\tPersistedUser,\n\tRole,\n\tRoles,\n\tTicket,\n\tToken,\n\tTokenAuthenticator,\n\tUsernameAndPasswordToken\n};\n\nexport enum Method {\n\tBASIC,\n\tTOKEN,\n}\n\nexport class Class {\n\tpublic users:Users.Class;\n\tpublic roles:Roles.Class;\n\n\tprotected _authenticatedUser:PersistedUser.Class;\n\n\tprivate context:Context;\n\tprivate authenticators:Authenticator<Object, Object>[];\n\tprivate authenticator:Authenticator<Object, Object>;\n\n\tpublic get authenticatedUser():PersistedUser.Class {\n\t\tif( ! this._authenticatedUser ) {\n\t\t\tif( this.context.parentContext && this.context.parentContext.auth ) return this.context.parentContext.auth.authenticatedUser;\n\t\t\treturn null;\n\t\t}\n\t\treturn this._authenticatedUser;\n\t}\n\n\tconstructor( context:Context ) {\n\t\tthis.roles = new Roles.Class( this.context );\n\t\tthis.users = new Users.Class( this.context );\n\n\t\tthis.context = context;\n\n\t\tthis.authenticators = [];\n\t\tthis.authenticators[ Method.BASIC ] = new BasicAuthenticator();\n\t\tthis.authenticators[ Method.TOKEN ] = new TokenAuthenticator( this.context );\n\t}\n\n\tisAuthenticated( askParent:boolean = true ):boolean {\n\t\treturn (\n\t\t\t( this.authenticator && this.authenticator.isAuthenticated() ) ||\n\t\t\t( askParent && ! ! this.context.parentContext && ! ! this.context.parentContext.auth && this.context.parentContext.auth.isAuthenticated() )\n\t\t);\n\t}\n\n\tauthenticate( username:string, password:string ):Promise<Token.Class> {\n\t\treturn this.authenticateUsing( \"TOKEN\", username, password );\n\t}\n\n\tauthenticateUsing( method:\"BASIC\", username:string, password:string ):Promise<UsernameAndPasswordCredentials>;\n\tauthenticateUsing( method:\"TOKEN\", username:string, password:string ):Promise<Token.Class>;\n\tauthenticateUsing( method:\"TOKEN\", token:Token.Class ):Promise<Token.Class>;\n\tauthenticateUsing( method:string, userOrTokenOrCredentials:any, password?:string ):Promise<UsernameAndPasswordCredentials | Token.Class> {\n\t\tswitch( method ) {\n\t\t\tcase \"BASIC\":\n\t\t\t\treturn this.authenticateWithBasic( userOrTokenOrCredentials, password );\n\t\t\tcase \"TOKEN\":\n\t\t\t\treturn this.authenticateWithToken( userOrTokenOrCredentials, password );\n\t\t\tdefault:\n\t\t\t\treturn Promise.reject( new Errors.IllegalArgumentError( `No exists the authentication method '${method}'` ) );\n\t\t}\n\t}\n\n\taddAuthentication( requestOptions:RequestOptions ):void {\n\t\tif( this.isAuthenticated( false ) ) {\n\t\t\tthis.authenticator.addAuthentication( requestOptions );\n\t\t} else if( ! ! this.context.parentContext && ! ! this.context.parentContext.auth ) {\n\t\t\tthis.context.parentContext.auth.addAuthentication( requestOptions );\n\t\t} else {\n\t\t\tconsole.warn( \"There is no authentication to add to the request.\" );\n\t\t}\n\t}\n\n\tclearAuthentication():void {\n\t\tif( ! this.authenticator ) return;\n\n\t\tthis.authenticator.clearAuthentication();\n\t\tthis.authenticator = null;\n\t\tthis._authenticatedUser = null;\n\t}\n\n\tcreateTicket( uri:string, requestOptions:RequestOptions = {} ):Promise<Ticket.Class> {\n\t\tlet resourceURI:string = this.context.resolve( uri );\n\n\t\tlet freeResources:FreeResources = FreeResources.create( this.context.documents );\n\t\tTicket.Factory.createFrom( freeResources.createResource(), resourceURI );\n\n\t\tif( this.isAuthenticated() ) this.addAuthentication( requestOptions );\n\t\tRequestUtils.setAcceptHeader( \"application/ld+json\", requestOptions );\n\t\tRequestUtils.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\t\tRequestUtils.setPreferredInteractionModel( LDP.RDFSource, requestOptions );\n\n\t\treturn Promise.resolve().then( () => {\n\t\t\tconst containerURI:string = this.context._resolvePath( \"system\" ) + Ticket.TICKETS_CONTAINER;\n\t\t\tconst body:string = JSON.stringify( freeResources );\n\n\t\t\treturn RequestService.post( containerURI, body, requestOptions, new JSONLDParser() )\n\t\t\t\t.catch( response => this.context.documents._parseErrorResponse( response ) );\n\n\t\t} ).then( ( [ expandedResult, response ]:[ any, Response ] ) => {\n\t\t\tlet freeNodes:RDFNode[] = RDFNode.getFreeNodes( expandedResult );\n\n\t\t\tlet ticketNodes:RDFNode[] = freeNodes.filter( freeNode => RDFNode.hasType( freeNode, Ticket.RDF_CLASS ) );\n\n\t\t\tif( ticketNodes.length === 0 ) throw new BadResponseError( `No ${ Ticket.RDF_CLASS } was returned.`, response );\n\t\t\tif( ticketNodes.length > 1 ) throw new BadResponseError( `Multiple ${ Ticket.RDF_CLASS } were returned.`, response );\n\n\t\t\tlet expandedTicket:RDFNode = ticketNodes[ 0 ];\n\t\t\tlet ticket:Ticket.Class = <any> Resource.create();\n\n\t\t\tlet digestedSchema:ObjectSchema.DigestedObjectSchema = this.context.documents.getSchemaFor( expandedTicket );\n\n\t\t\tthis.context.documents.jsonldConverter.compact( expandedTicket, ticket, digestedSchema, this.context.documents );\n\n\t\t\treturn ticket;\n\t\t} );\n\t}\n\n\tgetAuthenticatedURL( uri:string, requestOptions?:RequestOptions ):Promise<string> {\n\t\tlet resourceURI:string = this.context.resolve( uri );\n\n\t\treturn this.createTicket( resourceURI, requestOptions ).then( ( ticket:Ticket.Class ) => {\n\t\t\tresourceURI += URI.hasQuery( resourceURI ) ? \"&\" : \"?\";\n\t\t\tresourceURI += `ticket=${ ticket.ticketKey }`;\n\n\t\t\treturn resourceURI;\n\t\t} );\n\t}\n\n\tprivate authenticateWithBasic( username:string, password:string ):Promise<UsernameAndPasswordCredentials> {\n\t\tlet authenticator:BasicAuthenticator = <BasicAuthenticator> this.authenticators[ Method.BASIC ];\n\t\tlet authenticationToken:UsernameAndPasswordToken;\n\n\t\tauthenticationToken = new UsernameAndPasswordToken( username, password );\n\t\tthis.clearAuthentication();\n\n\t\tlet credentials:UsernameAndPasswordCredentials;\n\t\treturn authenticator.authenticate( authenticationToken ).then( ( _credentials:UsernameAndPasswordCredentials ) => {\n\t\t\tcredentials = _credentials;\n\t\t\treturn this.getAuthenticatedUser( authenticator );\n\t\t} ).then( ( persistedUser:PersistedUser.Class ) => {\n\t\t\tthis._authenticatedUser = persistedUser;\n\t\t\tthis.authenticator = authenticator;\n\t\t\treturn credentials;\n\t\t} );\n\t}\n\n\tprivate authenticateWithToken( userOrTokenOrCredentials:any, password:string ):Promise<Token.Class> {\n\t\tlet authenticator:TokenAuthenticator = <TokenAuthenticator> this.authenticators[ Method.TOKEN ];\n\t\tlet credentials:Token.Class = null;\n\t\tlet authenticationToken:UsernameAndPasswordToken = null;\n\n\t\tif( Utils.isString( userOrTokenOrCredentials ) && Utils.isString( password ) ) {\n\t\t\tauthenticationToken = new UsernameAndPasswordToken( userOrTokenOrCredentials, password );\n\n\t\t} else if( Token.Factory.hasRequiredValues( userOrTokenOrCredentials ) ) {\n\t\t\tcredentials = userOrTokenOrCredentials;\n\n\t\t} else {\n\t\t\treturn Promise.reject<Token.Class>( new Errors.IllegalArgumentError( \"Parameters do not match with the authentication request.\" ) );\n\t\t}\n\n\t\tthis.clearAuthentication();\n\t\treturn authenticator.authenticate( ( authenticationToken ) ? authenticationToken : <any> credentials ).then( ( _credentials:Token.Class ) => {\n\t\t\tcredentials = _credentials;\n\n\t\t\tif( PersistedUser.Factory.is( credentials.user ) ) return credentials.user;\n\t\t\treturn this.getAuthenticatedUser( authenticator );\n\n\t\t} ).then( ( persistedUser:PersistedUser.Class ) => {\n\t\t\tthis._authenticatedUser = persistedUser;\n\t\t\tcredentials.user = persistedUser;\n\n\t\t\tthis.authenticator = authenticator;\n\t\t\treturn credentials;\n\t\t} );\n\t}\n\n\tprivate getAuthenticatedUser( authenticator:Authenticator<Object, Object> ):Promise<PersistedUser.Class> {\n\t\tconst requestOptions:RequestOptions = {};\n\t\tauthenticator.addAuthentication( requestOptions );\n\n\t\treturn this.context.documents.get<PersistedUser.Class>( \"users/me/\", requestOptions );\n\t}\n\n}\n\nexport default Class;\n"]}