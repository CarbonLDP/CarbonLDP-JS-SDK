{"version":3,"sources":["Auth/Authenticator.ts"],"names":[],"mappings":"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","file":"Authenticator.js","sourcesContent":["import { Context } from \"../Context\";\nimport { IllegalStateError } from \"../Errors\";\nimport {\n\tGETOptions,\n\tHeader,\n\tRequestOptions,\n\tRequestService,\n\tRequestUtils,\n\tResponse,\n} from \"../HTTP\";\nimport { BadResponseError } from \"../HTTP/Errors\";\nimport { JSONLDParser } from \"../JSONLD\";\nimport { RDFDocument } from \"../RDF/Document\";\nimport { promiseMethod } from \"../Utils\";\nimport { LDP } from \"../Vocabularies/LDP\";\nimport * as PersistedUser from \"./PersistedUser\";\nimport { UserMetadata } from \"./UserMetadata\";\n\nexport abstract class Authenticator<T extends object, W extends object> {\n\n\tprotected context:Context;\n\n\tprotected authenticatedUser?:PersistedUser.Class;\n\tprotected abstract credentials?:W;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\tisAuthenticated():boolean {\n\t\treturn ! ! this.credentials;\n\t}\n\n\tabstract authenticate( authenticationToken:T ):Promise<W>;\n\n\tclearAuthentication():void {\n\t\tthis.credentials = null;\n\t\tthis.authenticatedUser = null;\n\t}\n\n\taddAuthentication( requestOptions:RequestOptions ):RequestOptions {\n\t\tif( ! this.isAuthenticated() ) throw new IllegalStateError( \"The authenticator isn't authenticated.\" );\n\n\t\tconst headers:Map<string, Header> = requestOptions.headers ?\n\t\t\trequestOptions.headers : requestOptions.headers = new Map<string, Header>();\n\n\t\tif( headers.has( \"authorization\" ) ) return requestOptions;\n\n\t\tconst strAuthHeader:string = this._getHeaderValue();\n\t\theaders.set( \"authorization\", new Header( [ strAuthHeader ] ) );\n\n\t\treturn requestOptions;\n\t}\n\n\tgetAuthenticatedUser( requestOptions:GETOptions = {} ):Promise<PersistedUser.Class> {\n\t\tif( this.authenticatedUser ) return Promise.resolve( this.authenticatedUser );\n\n\t\treturn promiseMethod( () => {\n\t\t\tconst metadataURI:string = this.context._resolvePath( \"users.me\" );\n\n\t\t\tconst localOptions:GETOptions = RequestUtils.cloneOptions( requestOptions );\n\t\t\tthis.addAuthentication( localOptions );\n\t\t\tRequestUtils.setAcceptHeader( \"application/ld+json\", localOptions );\n\t\t\tRequestUtils.setPreferredInteractionModel( LDP.RDFSource, localOptions );\n\n\t\t\treturn RequestService\n\t\t\t\t.get( metadataURI, localOptions, new JSONLDParser() )\n\t\t\t\t.catch( response => this.context.documents._parseErrorResponse( response ) )\n\t\t\t\t;\n\t\t} ).then( ( [ rdfData, response ] ) => {\n\t\t\tconst userMetadata:UserMetadata = this._parseRDFMetadata( rdfData, response );\n\n\t\t\tconst localOptions:GETOptions = RequestUtils.cloneOptions( requestOptions );\n\t\t\tthis.addAuthentication( localOptions );\n\n\t\t\treturn userMetadata\n\t\t\t\t.authenticatedUser\n\t\t\t\t.user\n\t\t\t\t.resolve( localOptions );\n\t\t} ).then( user => {\n\t\t\treturn this.authenticatedUser = user;\n\t\t} );\n\t}\n\n\tprotected abstract _getHeaderValue():string;\n\n\tprotected _parseRDFMetadata( rdfData:object[], response:Response ):UserMetadata {\n\t\tconst metadataURI:string = this.context._resolvePath( \"users.me\" );\n\n\t\tconst metadataRDFs:RDFDocument[] = RDFDocument\n\t\t\t.getDocuments( rdfData )\n\t\t\t.filter( rdfDocument => rdfDocument[ \"@id\" ] === metadataURI );\n\n\t\tif( metadataRDFs.length !== 1 ) throw new BadResponseError( \"No correct cs:UserMetadata was returned.\", response );\n\n\t\treturn this.context.documents\n\t\t\t._getPersistedDocument( metadataRDFs[ 0 ], response );\n\t}\n\n}\n"]}