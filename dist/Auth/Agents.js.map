{"version":3,"sources":["Auth/Agents.ts"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,SAAS,CAAC,CAAA;AAEjC,IAAY,MAAM,WAAM,aAAa,CAAC,CAAA;AAItC,IAAY,GAAG,WAAM,cAAc,CAAC,CAAA;AAGpC;IAGC,eAAa,OAAe;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAED,wBAAQ,GAAR,UAAU,aAAyB,EAAE,IAAkB;QAAvD,iBAMC;QANoC,oBAAkB,GAAlB,WAAkB;QACtD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAE,EAAE,CAAE,CAAC,IAAI,CAAE,UAAE,YAAmB;YACvD,EAAE,CAAA,CAAE,CAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAE,aAAa,CAAG,CAAC;gBAAC,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAE,wCAAwC,CAAE,CAAC;YAE5H,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAE,YAAY,EAAE,aAAa,EAAE,IAAI,CAAE,CAAC;QAChF,CAAC,CAAE,CAAC;IACL,CAAC;IAED,mBAAG,GAAH,UAAK,QAAe,EAAE,cAAoC;QAA1D,iBAIC;QAHA,MAAM,CAAC,IAAI,CAAC,UAAU,CAAE,QAAQ,CAAE,CAAC,IAAI,CAAE,UAAE,GAAU;YACpD,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAE,GAAG,EAAE,cAAc,CAAE,CAAC;QAC1D,CAAC,CAAE,CAAC;IACL,CAAC;IAEO,0BAAU,GAAlB,UAAoB,QAAe;QAAnC,iBASC;QARA,MAAM,CAAC,IAAI,OAAO,CAAU,UAAE,OAA8B;YAC3D,IAAI,YAAY,GAAU,KAAI,CAAC,OAAO,CAAC,OAAO,CAAE,KAAI,CAAC,eAAe,EAAE,CAAE,CAAC;YACzE,IAAI,GAAG,GAAU,GAAG,CAAC,IAAI,CAAC,OAAO,CAAE,YAAY,EAAE,QAAQ,CAAE,CAAC;YAE5D,EAAE,CAAA,CAAE,CAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAE,YAAY,EAAE,GAAG,CAAG,CAAC;gBAAC,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAE,+DAA+D,CAAE,CAAC;YAExJ,OAAO,CAAE,GAAG,CAAE,CAAC;QAChB,CAAC,CAAE,CAAC;IACL,CAAC;IAEO,+BAAe,GAAvB;QACC,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,2BAA2B,CAAG,CAAC;YAAC,MAAM,IAAI,MAAM,CAAC,iBAAiB,CAAE,2CAA2C,CAAE,CAAC;QACjJ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,2BAA2B,CAAE,CAAC;IAC/D,CAAC;IACF,YAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,aAAK,QAoCjB,CAAA;AAED;kBAAe,KAAK,CAAC","file":"Auth/Agents.js","sourcesContent":["import * as Agent from \"./Agent\";\nimport Context from \"./../Context\";\nimport * as Errors from \"./../Errors\";\nimport * as HTTP from \"./../HTTP\";\nimport * as PersistedAgent from \"./PersistedAgent\";\nimport * as PersistedDocument from \"./../PersistedDocument\";\nimport * as URI from \"./../RDF/URI\";\nimport * as Response from \"./../HTTP/Response\";\n\nexport class Class {\n\tprivate context:Context;\n\n\tconstructor( context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\tregister( agentDocument:Agent.Class, slug:string = null ):Promise<[ PersistedDocument.Class, Response.Class ]> {\n\t\treturn this.resolveURI( \"\" ).then( ( containerURI:string ) => {\n\t\t\tif( ! Agent.Factory.is( agentDocument ) ) throw new Errors.IllegalArgumentError( \"The Document is not a cs:Agent object.\" );\n\n\t\t\treturn this.context.documents.createChild( containerURI, agentDocument, slug );\n\t\t} );\n\t}\n\n\tget( agentURI:string, requestOptions?:HTTP.Request.Options ):Promise<[ PersistedAgent.Class, HTTP.Response.Class ]> {\n\t\treturn this.resolveURI( agentURI ).then( ( uri:string ) => {\n\t\t\treturn this.context.documents.get( uri, requestOptions );\n\t\t} );\n\t}\n\n\tprivate resolveURI( agentURI:string ):Promise<string> {\n\t\treturn new Promise<string>( ( resolve:( uri:string ) => void ) => {\n\t\t\tlet containerURI:string = this.context.resolve( this.getContainerURI() );\n\t\t\tlet uri:string = URI.Util.resolve( containerURI, agentURI );\n\n\t\t\tif( ! URI.Util.isBaseOf( containerURI, uri ) ) throw new Errors.IllegalArgumentError( \"The URI provided is not a valid agent of the current context.\" );\n\n\t\t\tresolve( uri );\n\t\t} );\n\t}\n\n\tprivate getContainerURI():string {\n\t\tif( ! this.context.hasSetting( \"platform.agents.container\" ) ) throw new Errors.IllegalStateError( \"The agents container URI hasn't been set.\" );\n\t\treturn this.context.getSetting( \"platform.agents.container\" );\n\t}\n}\n\nexport default Class;\n"],"sourceRoot":"/source/"}