{"version":3,"sources":["Auth/BasicAuthenticator.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,oCAAiD;AACjD,kCAAyC;AACzC,iDAAgD;AAChD,mFAAkF;AAIlF;IAAwC,sCAAuE;IAA/G;;IAoBA,CAAC;IAhBA,yCAAY,GAAZ,UAAc,mBAA4C;QAA1D,iBAUC;QATA,MAAM,CAAC,qBAAa,CAAE;YACrB,EAAE,CAAA,CAAE,CAAE,mBAAoB,CAAC;gBAAC,MAAM,IAAI,6BAAoB,CAAE,0CAA0C,CAAE,CAAC;YAEzG,EAAE,CAAA,CAAE,CAAE,mBAAmB,CAAC,QAAS,CAAC;gBAAC,MAAM,IAAI,6BAAoB,CAAE,+BAA+B,CAAE,CAAC;YACvG,EAAE,CAAA,CAAE,CAAE,mBAAmB,CAAC,QAAS,CAAC;gBAAC,MAAM,IAAI,6BAAoB,CAAE,+BAA+B,CAAE,CAAC;YAEvG,KAAI,CAAC,WAAW,GAAG,IAAI,+DAA8B,CAAE,mBAAmB,CAAC,QAAQ,EAAE,mBAAmB,CAAC,QAAQ,CAAE,CAAC;YACpH,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC;QACzB,CAAC,CAAE,CAAC;IACL,CAAC;IAES,4CAAe,GAAzB;QACC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAE,CAAC;IACxF,CAAC;IAEF,yBAAC;AAAD,CApBA,AAoBC,CApBuC,6BAAa,GAoBpD;AApBY,gDAAkB;AAsB/B,eAAgB,GAAU;IACzB,MAAM,CAAC,CAAC,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAE,GAAG,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;AAC7F,CAAC","file":"BasicAuthenticator.js","sourcesContent":["import { IllegalArgumentError } from \"../Errors\";\nimport { promiseMethod } from \"../Utils\";\nimport { Authenticator } from \"./Authenticator\";\nimport { UsernameAndPasswordCredentials } from \"./UsernameAndPasswordCredentials\";\nimport { UsernameAndPasswordToken } from \"./UsernameAndPasswordToken\";\n\n\nexport class BasicAuthenticator extends Authenticator<UsernameAndPasswordToken, UsernameAndPasswordCredentials> {\n\n\tprotected credentials:UsernameAndPasswordCredentials;\n\n\tauthenticate( authenticationToken:UsernameAndPasswordToken ):Promise<UsernameAndPasswordCredentials> {\n\t\treturn promiseMethod( () => {\n\t\t\tif( ! authenticationToken ) throw new IllegalArgumentError( \"The authenticationToken cannot be empty.\" );\n\n\t\t\tif( ! authenticationToken.username ) throw new IllegalArgumentError( \"The username cannot be empty.\" );\n\t\t\tif( ! authenticationToken.password ) throw new IllegalArgumentError( \"The password cannot be empty.\" );\n\n\t\t\tthis.credentials = new UsernameAndPasswordCredentials( authenticationToken.username, authenticationToken.password );\n\t\t\treturn this.credentials;\n\t\t} );\n\t}\n\n\tprotected _getHeaderValue():string {\n\t\treturn \"Basic \" + toB64( this.credentials.username + \":\" + this.credentials.password );\n\t}\n\n}\n\nfunction toB64( str:string ):string {\n\treturn (typeof btoa !== \"undefined\") ? btoa( str ) : new Buffer( str ).toString( \"base64\" );\n}\n"]}