{"version":3,"sources":["Auth/AbstractAuthenticator.ts"],"names":[],"mappings":"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","file":"AbstractAuthenticator.js","sourcesContent":["import { CarbonLDP } from \"../CarbonLDP\";\nimport { IllegalStateError } from \"../Errors\";\nimport {\n\tGETOptions,\n\tHeader,\n\tRequestOptions,\n\tRequestService,\n\tRequestUtils,\n\tResponse,\n} from \"../HTTP\";\nimport { BadResponseError } from \"../HTTP/Errors\";\nimport {\n\tJSONLDCompacter,\n\tJSONLDParser\n} from \"../JSONLD\";\nimport { RDFDocument } from \"../RDF\";\nimport { promiseMethod } from \"../Utils\";\nimport { LDP } from \"../Vocabularies\";\nimport { AuthenticatedUserInformationAccessor } from \"./AuthenticatedUserInformationAccessor\";\nimport { Authenticator } from \"./Authenticator\";\nimport { User } from \"./User\";\n\n\nexport abstract class AbstractAuthenticator<T extends object, W extends object> implements Authenticator<W> {\n\n\tprotected context:CarbonLDP;\n\n\tprotected _authenticatedUser?:User;\n\tget authenticatedUser():User { return this._authenticatedUser; }\n\n\tprotected abstract _credentials?:W;\n\n\tconstructor( context:CarbonLDP ) {\n\t\tthis.context = context;\n\t}\n\n\tisAuthenticated():boolean {\n\t\treturn ! ! this._credentials;\n\t}\n\n\tabstract authenticate( authenticationToken:T ):Promise<W>;\n\n\tclearAuthentication():void {\n\t\tthis._credentials = null;\n\t\tthis._authenticatedUser = null;\n\t}\n\n\taddAuthentication( requestOptions:RequestOptions ):RequestOptions {\n\t\tif( requestOptions.headers && requestOptions.headers.has( \"authorization\" ) ) return requestOptions;\n\n\t\tif( ! this.isAuthenticated() ) throw new IllegalStateError( \"The authenticator isn't authenticated.\" );\n\t\tif( ! requestOptions.headers ) requestOptions.headers = new Map<string, Header>();\n\n\t\tconst strAuthHeader:string = this._getHeaderValue();\n\t\trequestOptions.headers.set( \"authorization\", new Header( [ strAuthHeader ] ) );\n\n\t\treturn requestOptions;\n\t}\n\n\tgetAuthenticatedUser( requestOptions:GETOptions = {} ):Promise<User> {\n\t\tif( this._authenticatedUser ) return Promise.resolve( this._authenticatedUser );\n\n\t\treturn promiseMethod( () => {\n\t\t\tconst metadataURI:string = this.context._resolvePath( \"users.me\" );\n\n\t\t\tconst localOptions:GETOptions = RequestUtils.cloneOptions( requestOptions );\n\t\t\tthis.addAuthentication( localOptions );\n\t\t\tRequestUtils.setAcceptHeader( \"application/ld+json\", localOptions );\n\t\t\tRequestUtils.setPreferredInteractionModel( LDP.RDFSource, localOptions );\n\t\t\tlocalOptions.ensureLatest = true;\n\n\t\t\treturn RequestService\n\t\t\t\t.get( metadataURI, localOptions, new JSONLDParser() )\n\t\t\t\t.catch( this.context.registry._parseErrorFromResponse )\n\t\t\t\t;\n\t\t} ).then( ( [ rdfData, response ] ) => {\n\t\t\tconst accessor:AuthenticatedUserInformationAccessor = this._parseRDFMetadata( rdfData, response, requestOptions );\n\n\t\t\tthis._authenticatedUser = accessor\n\t\t\t\t.authenticatedUserMetadata\n\t\t\t\t.user;\n\n\t\t\treturn User\n\t\t\t\t.decorate( this._authenticatedUser );\n\t\t} );\n\t}\n\n\tprotected abstract _getHeaderValue():string;\n\n\tprotected _parseRDFMetadata( rdfData:object[], response:Response, requestOptions?:GETOptions ):AuthenticatedUserInformationAccessor {\n\t\tconst metadataURI:string = this.context._resolvePath( \"users.me\" );\n\n\t\tconst metadataRDFs:RDFDocument[] = RDFDocument\n\t\t\t.getDocuments( rdfData )\n\t\t\t.filter( rdfDocument => rdfDocument[ \"@id\" ] === metadataURI );\n\n\t\tif( metadataRDFs.length !== 1 ) throw new BadResponseError( \"No correct cs:UserMetadata was returned.\", response );\n\n\t\tconst document:AuthenticatedUserInformationAccessor = new JSONLDCompacter( this.context.registry )\n\t\t\t.compactDocument<AuthenticatedUserInformationAccessor>( metadataRDFs[ 0 ] );\n\n\t\tdocument._eTag = response.getETag();\n\t\tdocument._resolved = true;\n\n\t\treturn document;\n\t}\n\n}\n"]}