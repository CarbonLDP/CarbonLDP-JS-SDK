{"version":3,"sources":["AccessPoint/TransientAccessPoint.ts"],"names":[],"mappings":";;AAAA,4FAA2F;AAM3F,uCAAsC;AAuBzB,QAAA,oBAAoB,GAA+B;IAC/D,IAAI,EAAE,KAAC,CAAC,WAAW;IAEnB,EAAE,EAAF,UAAI,KAAS;QACZ,OAAO,mDAAwB,CAAC,EAAE,CAAE,KAAK,CAAE,CAAC;IAC7C,CAAC;IAED,MAAM,EAAN,UAA0B,IAAwB;QACjD,IAAM,IAAI,GAAuB,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QAC3D,OAAO,4BAAoB,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;IAChD,CAAC;IAED,UAAU,EAAV,UAA8B,MAA0B;QACvD,IAAM,WAAW,GAA4B,mDAAwB;aACnE,UAAU,CAAK,MAAM,CAAE,CAAC;QAE1B,WAAW;aACT,QAAQ,CAAE,4BAAoB,CAAC,IAAI,CAAE,CAAC;QAExC,OAAO,WAAW,CAAC;IACpB,CAAC;CACD,CAAC","file":"TransientAccessPoint.js","sourcesContent":["import { TransientDirectContainer } from \"../LDP/DirectContainer/TransientDirectContainer\";\n\nimport { ModelFactory } from \"../Model/ModelFactory\";\n\nimport { Pointer } from \"../Pointer/Pointer\";\n\nimport { C } from \"../Vocabularies/C\";\n\nimport { BaseAccessPoint } from \"./BaseAccessPoint\";\n\n\nexport interface TransientAccessPoint extends TransientDirectContainer {\n\thasMemberRelation:Pointer;\n\tisMemberOfRelation?:Pointer;\n\tinsertedContentRelation?:Pointer;\n}\n\n\nexport interface TransientAccessPointFactory extends ModelFactory<TransientAccessPoint> {\n\tTYPE:C[ \"AccessPoint\" ];\n\n\tis( value:any ):value is TransientAccessPoint;\n\n\n\tcreate<T extends object>( data:T & BaseAccessPoint ):T & TransientAccessPoint;\n\n\tcreateFrom<T extends object>( object:T & BaseAccessPoint ):T & TransientAccessPoint;\n}\n\nexport const TransientAccessPoint:TransientAccessPointFactory = {\n\tTYPE: C.AccessPoint,\n\n\tis( value:any ):value is TransientAccessPoint {\n\t\treturn TransientDirectContainer.is( value );\n\t},\n\n\tcreate<T extends object>( data:T & BaseAccessPoint ):T & TransientAccessPoint {\n\t\tconst copy:T & BaseAccessPoint = Object.assign( {}, data );\n\t\treturn TransientAccessPoint.createFrom( copy );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseAccessPoint ):T & TransientAccessPoint {\n\t\tconst accessPoint:T & TransientAccessPoint = TransientDirectContainer\n\t\t\t.createFrom<T>( object );\n\n\t\taccessPoint\n\t\t\t.$addType( TransientAccessPoint.TYPE );\n\n\t\treturn accessPoint;\n\t},\n};\n"]}