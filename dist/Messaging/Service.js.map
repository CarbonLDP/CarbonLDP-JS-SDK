{"version":3,"sources":["Messaging/Service.ts"],"names":[],"mappings":"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","file":"Service.js","sourcesContent":["import SockJS from \"sockjs-client\";\nimport * as webstomp from \"webstomp-client\";\nimport { Client, Frame } from \"webstomp-client\";\n\nimport { CarbonLDP } from \"../CarbonLDP\";\nimport { IllegalStateError } from \"../Errors\";\nimport { FreeResources } from \"../FreeResources\";\nimport { JSONLDParser } from \"../JSONLD/Parser\";\nimport RDFNode from \"../RDF/Node\";\nimport { UUIDUtils } from \"../Utils\";\nimport { EventMessage } from \"./EventMessage\";\nimport { MessagingOptions } from \"./Options\";\n\nconst DEFAULT_OPTIONS:Readonly<MessagingOptions> = {\n\tmaxReconnectAttempts: 10,\n\treconnectDelay: 1000,\n};\n\ninterface Subscription {\n\tid:string;\n\terrorCallback:( error:Error ) => void;\n}\n\nexport class MessagingService {\n\tprivate context:CarbonLDP;\n\n\tprivate _options:MessagingOptions;\n\tprivate _attempts:number;\n\tprivate _client?:Client;\n\tprivate _subscriptionsMap:Map<string, Map<( data:EventMessage ) => void, Subscription>>;\n\tprivate _subscriptionsQueue:Function[];\n\n\tconstructor( context:CarbonLDP ) {\n\t\tthis.context = context;\n\t\tthis._subscriptionsQueue = [];\n\t\tthis._options = DEFAULT_OPTIONS;\n\t}\n\n\tsetOptions( options:MessagingOptions ):void {\n\t\tthis._options = {\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...options,\n\t\t};\n\t}\n\n\tconnect( onConnect?:() => void, onError?:( error:Error ) => void ):void {\n\t\tif( this._client ) {\n\t\t\tconst error:Error = new IllegalStateError( `The messaging service is already connect${ this._client.connected ? \"ed\" : \"ing\"}.` );\n\t\t\tif( onError ) onError( error );\n\t\t\tthrow error;\n\t\t}\n\n\t\tif( this._subscriptionsMap ) this._subscriptionsMap.clear();\n\t\tthis.reconnect( onConnect, onError );\n\t}\n\n\treconnect( onConnect?:() => void, onError:( error:Error ) => void = this.broadcastError.bind( this ) ):void {\n\t\tif( ! this._client ) this._attempts = 0;\n\t\telse if( this._client.connected ) this._client.disconnect();\n\t\tif( ! this._subscriptionsMap ) this._subscriptionsMap = new Map();\n\n\t\tconst sock:SockJS.Socket = new SockJS( this.context.resolve( \"/broker\" ) );\n\t\tthis._client = webstomp.over( sock, {\n\t\t\tdebug: false,\n\t\t\theartbeat: false,\n\t\t} );\n\n\t\tthis._client.connect( {}, () => {\n\t\t\tthis._subscriptionsQueue.forEach( callback => callback() );\n\t\t\tthis._subscriptionsQueue.length = 0;\n\t\t\tthis._attempts = 0;\n\t\t\tif( onConnect ) onConnect();\n\n\t\t}, ( errorFrameOrEvent:Frame | CloseEvent ) => {\n\t\t\tconst canReconnect:boolean = this._options.maxReconnectAttempts === null || this._options.maxReconnectAttempts >= this._attempts;\n\t\t\tlet errorMessage:string;\n\t\t\tif( \"reason\" in errorFrameOrEvent ) {\n\t\t\t\tif( canReconnect ) {\n\t\t\t\t\tif( ++ this._attempts === 1 ) this.storeSubscriptions();\n\t\t\t\t\tsetTimeout( () => this.reconnect( onConnect, onError ), this._options.reconnectDelay );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._client = null;\n\t\t\t\tthis._subscriptionsQueue.length = 0;\n\t\t\t\terrorMessage = `CloseEventError: ${ errorFrameOrEvent.reason }`;\n\t\t\t} else if( \"body\" in errorFrameOrEvent ) {\n\t\t\t\tif( ! this._client.connected && canReconnect ) return;\n\t\t\t\terrorMessage = `${ errorFrameOrEvent.headers[ \"message\" ] }: ${ errorFrameOrEvent.body.trim() }`;\n\t\t\t} else {\n\t\t\t\terrorMessage = `Unknown error: ${ errorFrameOrEvent }`;\n\t\t\t}\n\t\t\tonError( new Error( errorMessage ) );\n\t\t} );\n\t}\n\n\tsubscribe( destination:string, onEvent:( data:EventMessage ) => void, onError:( error:Error ) => void ):void {\n\t\tif( ! this._client ) this.connect();\n\t\tif( ! this._subscriptionsMap.has( destination ) ) this._subscriptionsMap.set( destination, new Map() );\n\t\tconst callbacksMap:Map<( data:EventMessage ) => void, Subscription> = this._subscriptionsMap.get( destination );\n\n\t\tif( callbacksMap.has( onEvent ) ) return;\n\t\tconst subscriptionID:string = UUIDUtils.generate();\n\t\tcallbacksMap.set( onEvent, {\n\t\t\tid: subscriptionID,\n\t\t\terrorCallback: onError,\n\t\t} );\n\n\t\tconst subscribeTo:() => void = this.makeSubscription( subscriptionID, destination, onEvent, onError );\n\t\tif( this._client.connected ) return subscribeTo();\n\t\tthis._subscriptionsQueue.push( subscribeTo );\n\t}\n\n\tunsubscribe( destination:string, onEvent:( data:EventMessage ) => void ):void {\n\t\tif( ! this._client || ! this._subscriptionsMap || ! this._subscriptionsMap.has( destination ) ) return;\n\n\t\tconst callbackMap:Map<( data:EventMessage ) => void, Subscription> = this._subscriptionsMap.get( destination );\n\t\tif( ! callbackMap.has( onEvent ) ) return;\n\n\t\tconst subscriptionID:string = callbackMap.get( onEvent ).id;\n\t\tcallbackMap.delete( onEvent );\n\n\t\tif( callbackMap.size === 0 ) this._subscriptionsMap.delete( destination );\n\n\t\tthis._client.unsubscribe( subscriptionID );\n\t}\n\n\tprivate broadcastError( error:Error ):void {\n\t\tif( ! this._subscriptionsMap ) return;\n\t\tthis._subscriptionsMap.forEach( callbacksMap => callbacksMap.forEach( subscription => {\n\t\t\tsubscription.errorCallback( error );\n\t\t} ) );\n\t}\n\n\tprivate makeSubscription( id:string, destination:string, eventCallback:( data:EventMessage ) => void, errorCallback:( error:Error ) => void ):() => void {\n\t\treturn () => this._client.subscribe( destination, message => {\n\t\t\tnew JSONLDParser()\n\t\t\t\t.parse( message.body )\n\t\t\t\t.then( ( data:RDFNode[] ) => {\n\t\t\t\t\tconst freeResources:FreeResources = this.context.documents._getFreeResources( data );\n\t\t\t\t\treturn freeResources.getResources().find( EventMessage.isDecorated );\n\t\t\t\t} )\n\t\t\t\t.then( eventCallback )\n\t\t\t\t.catch( errorCallback );\n\t\t}, { id } );\n\t}\n\n\tprivate storeSubscriptions():void {\n\t\tif( this._subscriptionsQueue.length || ! this._subscriptionsMap ) return;\n\t\tthis._subscriptionsMap.forEach( ( callbackMap, destination ) => callbackMap.forEach( ( subscription, eventCallback ) => {\n\t\t\tconst subscribeTo:() => void = this.makeSubscription( subscription.id, destination, eventCallback, subscription.errorCallback );\n\t\t\tthis._subscriptionsQueue.push( subscribeTo );\n\t\t} ) );\n\t}\n\n}\n\nexport default MessagingService;\n"]}