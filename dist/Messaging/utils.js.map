{"version":3,"sources":["Messaging/Utils.ts"],"names":[],"mappings":";;AAAA,uEAAsE;AAEtE,kCAAiC;AAGjC,4BAAoC,KAAY;IAC/C,EAAE,CAAA,CAAE,CAAE,4GAA4G,CAAC,IAAI,CAAE,KAAK,CAAG,CAAC;QAAC,MAAM,IAAI,2CAAoB,CAAE,2BAAyB,KAAK,mBAAgB,CAAE,CAAC;AACrN,CAAC;AAFD,gDAEC;AAED,0BAAkC,UAAiB,EAAE,OAAc;IAClE,EAAE,CAAA,CAAE,CAAE,SAAG,CAAC,QAAQ,CAAE,OAAO,EAAE,UAAU,CAAG,CAAC;QAAC,MAAM,IAAI,2CAAoB,CAAE,OAAK,UAAU,wBAAqB,CAAE,CAAC;IAEnH,EAAE,CAAA,CAAE,UAAU,KAAK,GAAI,CAAC;QAAC,MAAM,CAAC,EAAE,CAAC;IACnC,UAAU,GAAG,SAAG,CAAC,cAAc,CAAE,UAAU,EAAE,OAAO,CAAE,CAAC;IACvD,UAAU,GAAG,UAAU,CAAC,SAAS,CAAE,CAAE,UAAU,CAAC,UAAU,CAAE,GAAG,CAAE,EAAE,UAAU,CAAC,MAAM,GAAG,CAAE,UAAU,CAAC,QAAQ,CAAE,GAAG,CAAE,CAAE,CAAC;IAEtH,MAAM,CAAC,UAAU;SACf,KAAK,CAAE,GAAG,CAAE;SACZ,GAAG,CAAE,UAAA,IAAI;QACT,EAAE,CAAA,CAAE,IAAI,KAAK,IAAK,CAAC;YAAC,MAAM,CAAC,GAAG,CAAC;QAC/B,MAAM,CAAC,kBAAkB,CAAE,IAAI,CAAE;aAC/B,OAAO,CAAE,KAAK,EAAE,GAAG,CAAE,CAAC;IACzB,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,CAAE,CACd;AACH,CAAC;AAfD,4CAeC;AAED,4BAAoC,KAAY,EAAE,UAAiB,EAAE,OAAc;IAClF,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAE5B,UAAU,GAAG,gBAAgB,CAAE,UAAU,EAAE,OAAO,CAAE,CAAC;IACrD,MAAM,CAAC,YAAW,KAAK,IAAK,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAG,CAAC;AAC3E,CAAC;AALD,gDAKC","file":"Utils.js","sourcesContent":["import { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\n\nimport { URI } from \"../RDF/URI\";\n\n\nexport function _validateEventType( event:string ):void {\n\tif( ! /(access-point|child|\\*)\\.(created|\\*)|(document|\\*)\\.(modified|deleted|\\*)|(member|\\*)\\.(added|removed|\\*)/.test( event ) ) throw new IllegalArgumentError( `Provided event type \"${ event }\" is invalid.` );\n}\n\nexport function _parseURIPattern( uriPattern:string, baseURI:string ):string {\n\tif( ! URI.isBaseOf( baseURI, uriPattern ) ) throw new IllegalArgumentError( `\"${ uriPattern }\" is out of scope.` );\n\n\tif( uriPattern === \"/\" ) return \"\";\n\turiPattern = URI.getRelativeURI( uriPattern, baseURI );\n\turiPattern = uriPattern.substring( + uriPattern.startsWith( \"/\" ), uriPattern.length - + uriPattern.endsWith( \"/\" ) );\n\n\treturn uriPattern\n\t\t.split( \"/\" )\n\t\t.map( slug => {\n\t\t\tif( slug === \"**\" ) return \"#\";\n\t\t\treturn encodeURIComponent( slug )\n\t\t\t\t.replace( /\\./g, \"^\" );\n\t\t} ).join( \".\" )\n\t\t;\n}\n\nexport function _createDestination( event:string, uriPattern:string, baseURI:string ):string {\n\t_validateEventType( event );\n\n\turiPattern = _parseURIPattern( uriPattern, baseURI );\n\treturn `/topic/${ event }${ uriPattern ? \".\" + uriPattern : uriPattern }`;\n}\n"]}