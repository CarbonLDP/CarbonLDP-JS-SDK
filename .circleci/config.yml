workspace_root: &workspace_root /home/circleci
workspace_path: &workspace_path workspace
workspace: &workspace /home/circleci/workspace

defaults: &defaults
  working_directory: *workspace
  docker:
  - image: circleci/node:9

version: 2
jobs:
  build:
    <<: *defaults

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # Since we are using internal packages (docs-generator), using a fallback cache can sometimes break the build
        # - v1-dependencies-

    - run:
        name: Install npm dependencies
        command: npm install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

    - run:
        name: Build package
        command: npm start

    - persist_to_workspace:
        root: *workspace_root
        paths:
        - *workspace_path

  test:
    working_directory: *workspace

    docker:
    - image: circleci/node:9-browsers

    steps:
    - attach_workspace:
        at: *workspace_root

    - run:
        name: Run tests
        command: npm test

    - run: npx codecov

  deploy:
    <<: *defaults

    steps:
    - attach_workspace:
        at: *workspace_root

    - run:
        name: Authenticate with registry
        command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > "${CIRCLE_WORKING_DIRECTORY}/dist/.npmrc"

    - run:
        name: Publish package
        command: |
          cd dist
          npm publish

    - run:
        name: Pack package
        command: |
          cd dist
          npm pack | { read package; mv "${package}" "carbonldp.tgz"; }

    - store_artifacts:
        path: dist/carbonldp.tgz
workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build:
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/
    - test:
        requires:
        - build
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/
    - deploy:
        requires:
        - test
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /v[0-9]+\.[0-9]+\.[0-9]+(-.+)?/